{"version":3,"sources":["logo.svg","js/version_info.js","js/notes.js","js/solarTerms.js","js/main.js","Component/Grid.js","Component/DetailGrid.js","Component/GridBoard.js","Component/Notes.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","version_info","version_number","updates","conflicts_gone","main","target","merge_gone","gak_gok_81","primary_tin_gone","secondary_tin_gone","title","desc","theif_gok","change_gok","leave_gok","doors_equals","door","door2","gone_equals","gone","gone2","is_door_fok","origin_door","is_gone_fok","is_door_fan","is_gone_fan","theifs","tin_gone","floor_gone","result","indexOf","gakgoks","forEach","g","length","push","is_tin_gone_conflicts","tins","floors","door_sun_seq","t_tin","pop","t","idx","conflicts","c","is_tin_gone_merges","tin_suns","floor_suns","merges","tin_sun","floor_sun","is_change_gok","changes","is_leave_gok","leaves","find_solar_terms_offline","async","terms","year","data","solar","Date","d","find_current_solar_terms_offline","months","last_year_data","last_year_last_st","array_current_year","t_date","getFullYear","first","second","roundToNearestMinute","date","Math","round","getTime","tin_gone_seq","door_seq","star_seq","sun_seq","gong_seq","floor12_str","floor12_month_str","floor12_int","floor12_animarl","tin_gone_10_str","chun6_seq","chun6_chi_seq","gone_chi","chi","five_elements","name","sang","hak","hak_oh","sang_oh","gong","sang_oh_gong","sang_gong","wong_sheung_gong","gongs","gak_time_gone","gak","hill24","harm","grave","sun","bik","horse","horse_gong","find_gok","year_chi","month_chi","day","time_chi","cnt","gok","floor_tin_gone","number","up_down","floor_seq_array","val","find_empty_and_chun","time_gone_chi","end","empty1","empty2","find_chun","find_chun_chi","find_empty_gong","empty","hill","includes","find_harm","harmful","h","find_grave","is_grave","find_bik","is_bik","b","find_horse","chun6","chun6_idx","find_door_and_star","chun","chun_gung_idx","door_sun_seq_idx","get_floor_tin_gone_display","floor_tin_gone_seq","display_floor_tin_gone_array","primary","get_star_display","floor_tin_gone_display","time_gone","star","start_gong","tg","star_seq_array","shift_cnb","shiftRight","shiftLeft","get_tin_tin_gone_display","star_display_seq","t_floor_tin_gone_display","start_idx","tin_tin_gone_seq","tin_tin_gone_str_seq","hasOwnProperty","get_door_display","chun_gone","chun_chi","chun_gong","chun_chi_idx","time_chi_idx","door_seq_array","diff","door_start_idx","get_sun_display","display_tin_tin_gone_array","sun_seq_array","t_sun_array","t_tin_tin_gone_array","reverse","get_floor_sun_display","shift_cnt","t_floor_tin_gone_array","find_yan_gone","door_tin_gone","yinyang","door_gong_idx","yan_gone_array","yan_gone_obj_array","shifted_tin_gone_seq","shiftArray","time_gone_idx","y","split","spinR","dataSetObj","n","floor_tin_gone5","temp_floor_tin_gone_array","filter","display_sun_array","display_floor_sun_array","display_star_array","display_door_array","spinL","arr","temp_array","i","temp","shift","concat","splice","removeItemOnce","value","index","isHarmGone","harms","nearestDates","dates","Array","now","setHours","setMinutes","setSeconds","orig_d","past","toDate","lunisolar","temp_d","add","_gone","char8","branch","toString","temp_d_obj","orig_d_obj","lunar_day_chi","format","best_before_date","yin_yang","animal","error","mainCalculation","empty_and_chun","empty_gong1","empty_gong2","door_and_star","wong_gong","f","find_wong_gong","door_fok","gone_fok","door_fan","gone_fan","fanFok","savedGokFiltering","sgs","filterKeyWords","savedRemarks","filtered","time","remarks","replaceAll","re","RegExp","t_matches","exec","r_matches","Grid","props","tin_tin_gone","goodBadGoneColor","goneCSS","styleName","yearGone","monthGone","dayGone","timeGone","React","createElement","className","wong","onClick","updateGakGok","gak_gok","sameGone","has","yan_gone_pri","day_gone","fan_or_fok","targets","yan_gone_sec","display_star","GridBoard","updateDataSet","obj","spin","spinLeftValue","spinRightValue","initOriginalGridDataSet","find_gak_gok","seq","gakgok","gone_seq","left","right","spinGone","undefined","year_gone","month_gone","DetailGrid","Notes","notes","is_theif_gok","map","key","App","setD","useState","setYinyang","setChar8","month","originalDataSetObj","haziDate","setHaziDate","dongziDate","setDongziDate","previousZit","setPreviousZit","currentZit","setCurrentZit","dateUpdated","setDateUpdated","yearUpdated","setYearUpdated","setFan_or_fok","setSpin","setSpinLeftValue","setSpinRightValue","setTargets","showTargets","setShowTargets","setGoodBadGoneColor","selectedGone","setSelectedGone","gakgokDesc","setGakgokDesc","showModal","setShowModal","setYearGone","setMonthGone","setDayGone","setTimeGone","savedTime","setSavedTime","JSON","parse","localStorage","getItem","setSavedRemarks","setKey","visibleAlert","setVisibleAlert","importAlert","setImportAlert","removeAllAlert","setRemoveAllAlert","showVersionInfo","setShowVersionInfo","importError","setImportError","searchError","setSearchError","setSameGone","Set","goodGok","setGoodGok","goodGokFiltered","setGoodGokFiltered","validInput","setValidInput","setFilterKeyWords","filterSavedKeyWords","setFilterSavedKeyWords","showFilterModal","setShowFilterModal","searchOriginSun","setSearchOriginSun","searchOriginStar","setSearchOriginStar","searchOriginDoor","setSearchOriginDoor","searchOriginTg","setSearchOriginTg","searchOriginFg","setSearchOriginFg","searchSangOhSun","setSearchSangOhSun","searchSangOhStar","setSearchSangOhStar","searchSangOhDoor","setSearchSangOhDoor","searchSangOhTg","setSearchSangOhTg","searchSangOhFg","setSearchSangOhFg","searchTime","setSearchTime","searchCYear","setSearchCYear","searchCMonth","setSearchCMonth","searchCDay","setSearchCDay","searchCTime","setSearchCTime","dateInput","useRef","remarksRef","fileRef","yearGoneInput","monthGoneInput","dayGoneInput","timeGoneInput","f_origin_sun","f_origin_star","f_origin_door","f_origin_tg","f_origin_fg","f_sang_oh_sun","f_sang_oh_star","f_sang_oh_door","f_sang_oh_tg","f_sang_oh_fg","f_time","f_cyear","f_cmonth","f_cday","f_ctime","searchFromDateRef","searchToDateRef","goneDates","setGoneDates","fetchGoodGok","_from","current","_to","fromD","toD","td","diffTime","abs","ceil","_goodGok","returnSet","_temp_date","getMonth","padStart","getDate","hour","getHours","min","getMinutes","fetchHazi","response","fetchDongzi","fetchCurrentZit","char8_splits","t_c_splits","year_splits","gone_idx","chi_idx","new_gone","new_chi","year_gone_idx","year_chi_idx","new_year_gone","new_year_chi","currentZitDate","lunar","charAt","lunar_day","stem","_idx","sang_ohs","origin_gong","s","sang_oh_remarks","_obj","fg","cyear","cmonth","cday","ctime","find_good_gok","hideImportModal","e","hideRemoveAllModal","saveTimeAlert","setTimeout","loadTime","r","updateDateStr","updateTargets","event","text","useEffect","findSameGone","_set","_year","_month","_day","_time","doubleTinGone","repeatedCnt","repeatedSet","content","Tabs","defaultActiveKey","activeKey","onSelect","k","id","justify","Tab","eventKey","Alert","variant","dismissible","Container","Row","Col","xs","ref","type","placeholder","onChange","inputChange","isNaN","max","setDate","reduceDayClick","addDayClick","reduceHourClick","addHourClick","saveTime","setItem","stringify","style","display","href","show","onClose","Modal","onHide","handleClose","centered","Header","closeButton","Title","Body","Heading","toISOString","Footer","Button","click","Accordion","alwaysOpen","Item","packageJson","version","v","exportData","objArray","jsonString","encodeURIComponent","link","document","download","accept","fileReader","FileReader","readAsText","files","onload","jsonArray","t_savedTime","t_savedRemarks","importData","temp_remarks_array","removeTime","substr","fluid","exportGoodData","InputGroup","disabled","FontAwesomeIcon","icon","faFilter","Form","Control","Text","faMagnifyingGlass","Label","Group","as","Select","defaultValue","maxLength","filterGoodGok","origin_sun","origin_star","originTg","originFg","sang_oh_sun","sang_oh_star","sang_oh_door","sang_oh_tg","sang_oh_fg","_goks","goodGokFiltering","ggs","searchObj","_valid","sang_oh_filtered","_valid2","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.48afffb3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","const version_info = [\r\n    { version_number: \"v1.0.8\", updates: \"新增 催運局數關鍵字過濾功能\" },\r\n    { version_number: \"v1.0.7\", updates: \"新增 催運局數搜尋功能\" },\r\n    { version_number: \"v1.0.6\", updates: \"新增 年月日時干重疊顏色標記\" },\r\n    { version_number: \"v1.0.5\", updates: \"新增 宮位地支 最近三十天化解日期/陰陽/生肖提示\" },\r\n    { version_number: \"v1.0.4\", updates: \"新增 匯入及匯出已儲存局數至JSON檔功能\" },\r\n    { version_number: \"v1.0.3\", updates: \"新增 局數儲存功能\" },\r\n    { version_number: \"v1.0.2\", updates: \"新增 轉宮功能\" },\r\n    { version_number: \"v1.0.1\", updates: \"新增 點選宮位顯示 81天干格局\" },\r\n    { version_number: \"v1.0.0\", updates: \"穩定版本\" }\r\n]\r\n\r\nexport {\r\n    version_info\r\n}","const conflicts_gone = [\r\n    { main: \"辛\", target: [\"乙\", \"戊\"] },\r\n    { main: \"壬\", target: [\"丙\", \"己\"] },\r\n    { main: \"癸\", target: [\"丁\", \"庚\"] }\r\n]\r\n\r\nconst merge_gone = [\r\n    { main: \"符\", target: \"己\" },\r\n    { main: \"乙\", target: \"庚\" },\r\n    { main: \"丙\", target: \"辛\" },\r\n    { main: \"丁\", target: \"壬\" },\r\n    { main: \"戊\", target: \"癸\" },\r\n    { main: \"己\", target: \"符\" },\r\n    { main: \"庚\", target: \"乙\" },\r\n    { main: \"辛\", target: \"丙\" },\r\n    { main: \"壬\", target: \"丁\" },\r\n    { main: \"癸\", target: \"戊\" },\r\n\r\n]\r\n\r\nconst gak_gok_81 = [\r\n    //乙\r\n    { primary_tin_gone: \"乙\", secondary_tin_gone: \"乙\", title: \"日奇伏吟\", desc: \"不宜見貴要求名利，只宜安份守己\" },\r\n    { primary_tin_gone: \"乙\", secondary_tin_gone: \"丙\", title: \"奇儀順遂\", desc: \"吉星升官晉職，凶星反目別離\" },\r\n    { primary_tin_gone: \"乙\", secondary_tin_gone: \"丁\", title: \"奇儀相助\", desc: \"最利文書考試，百事可為\" },\r\n    { primary_tin_gone: \"乙\", secondary_tin_gone: \"戊\", title: \"陰害陽門\", desc: \"利陰人陰事，門吉尚可謀為，門凶迫則破財傷人\" },\r\n    { primary_tin_gone: \"乙\", secondary_tin_gone: \"己\", title: \"日奇入墓\", desc: \"被土暗昧，門凶事必凶，得生門二吉門為地遁\" },\r\n    { primary_tin_gone: \"乙\", secondary_tin_gone: \"庚\", title: \"日奇被刑\", desc: \"為爭訟財產，夫妻懷有私意\" },\r\n    { primary_tin_gone: \"乙\", secondary_tin_gone: \"辛\", title: \"青龍折足\", desc: \"人亡財破，奴僕拐帶，六畜自傷\" },\r\n    { primary_tin_gone: \"乙\", secondary_tin_gone: \"壬\", title: \"日奇入地\", desc: \"尊卑悖亂，官訟是非，有人謀害之事\" },\r\n    { primary_tin_gone: \"乙\", secondary_tin_gone: \"癸\", title: \"華蓋蓬星\", desc: \"遁跡藏形，修仙修道躲災難為吉\" },\r\n    //丙\r\n    { primary_tin_gone: \"丙\", secondary_tin_gone: \"乙\", title: \"日月並行\", desc: \"公私皆為吉\" },\r\n    { primary_tin_gone: \"丙\", secondary_tin_gone: \"丙\", title: \"月奇悖師\", desc: \"文書逼迫，破耗遺失，主單據，証件不明遺失\" },\r\n    { primary_tin_gone: \"丙\", secondary_tin_gone: \"丁\", title: \"星奇朱雀\", desc: \"貴人文書吉利，常人平靜安樂\" },\r\n    { primary_tin_gone: \"丙\", secondary_tin_gone: \"戊\", title: \"飛鳥跌穴\", desc: \"百事吉可謀大事\" },\r\n    { primary_tin_gone: \"丙\", secondary_tin_gone: \"己\", title: \"火悖入刑\", desc: \"囚人刑仗，文書不通，吉門得吉，凶門轉凶\" },\r\n    { primary_tin_gone: \"丙\", secondary_tin_gone: \"庚\", title: \"熒入太白\", desc: \"門戶破敗，盗賊耗失，事業亦凶\" },\r\n    { primary_tin_gone: \"丙\", secondary_tin_gone: \"辛\", title: \"月奇相合\", desc: \"謀事能成，病人不凶\" },\r\n    { primary_tin_gone: \"丙\", secondary_tin_gone: \"壬\", title: \"火入天羅\", desc: \"為客不利，是非多\" },\r\n    { primary_tin_gone: \"丙\", secondary_tin_gone: \"癸\", title: \"華蓋悖師\", desc: \"陰人害事，災禍頻生\" },\r\n    //丁\r\n    { primary_tin_gone: \"丁\", secondary_tin_gone: \"乙\", title: \"人遁吉格\", desc: \"貴人加官晉爵，常人婚姻財帛\" },\r\n    { primary_tin_gone: \"丁\", secondary_tin_gone: \"丙\", title: \"星隨月轉\", desc: \"貴人越級高升，常人樂極生悲\" },\r\n    { primary_tin_gone: \"丁\", secondary_tin_gone: \"丁\", title: \"星奇入太陰\", desc: \"文書証件即至，喜事事從心萬事如意\" },\r\n    { primary_tin_gone: \"丁\", secondary_tin_gone: \"戊\", title: \"青龍轉光\", desc: \"官人升遷，常人威昌\" },\r\n    { primary_tin_gone: \"丁\", secondary_tin_gone: \"己\", title: \"火入勾陳\", desc: \"奸仇冤，事因女人\" },\r\n    { primary_tin_gone: \"丁\", secondary_tin_gone: \"庚\", title: \"文書阻隔\", desc: \"行人必歸\" },\r\n    { primary_tin_gone: \"丁\", secondary_tin_gone: \"辛\", title: \"朱雀入獄\", desc: \"罪人釋囚，官人失位\" },\r\n    { primary_tin_gone: \"丁\", secondary_tin_gone: \"壬\", title: \"貴人恩詔\", desc: \"訟獄公平，測婚多為苟合\" },\r\n    { primary_tin_gone: \"丁\", secondary_tin_gone: \"癸\", title: \"朱雀投江\", desc: \"文書口舌是非，經官動府，詞訟不利，音信沈溺不定\" },\r\n    //戊\r\n    { primary_tin_gone: \"戊\", secondary_tin_gone: \"乙\", title: \"青龍和合\", desc: \"門吉事也吉，門凶事也凶\" },\r\n    { primary_tin_gone: \"戊\", secondary_tin_gone: \"丙\", title: \"青龍回首\", desc: \"為事所謀，大吉大利，若逢墓迫擊刑，吉事也凶\" },\r\n    { primary_tin_gone: \"戊\", secondary_tin_gone: \"丁\", title: \"青龍耀明\", desc: \"宜見貴求名利，若逢墓迫，招惹是非\" },\r\n    { primary_tin_gone: \"戊\", secondary_tin_gone: \"戊\", title: \"雙木成林\", desc: \"甲甲伏吟，凡事不利，道路閉塞，以守為佳\" },\r\n    { primary_tin_gone: \"戊\", secondary_tin_gone: \"己\", title: \"貴人入獄\", desc: \"公私皆不利\" },\r\n    { primary_tin_gone: \"戊\", secondary_tin_gone: \"庚\", title: \"值符飛官\", desc: \"吉事不吉，凶事更凶，求財沒利益，測病也凶\" },\r\n    { primary_tin_gone: \"戊\", secondary_tin_gone: \"辛\", title: \"青龍折足\", desc: \"吉門有幫助，尚可謀事，若逢凶門主招災失財，足疾折傷\" },\r\n    { primary_tin_gone: \"戊\", secondary_tin_gone: \"壬\", title: \"青龍入天牢\", desc: \"凡陰陽事皆不吉利\" },\r\n    { primary_tin_gone: \"戊\", secondary_tin_gone: \"癸\", title: \"青龍華蓋\", desc: \"逢吉門為吉，可招福臨門，逢凶門，事多不利為凶\" },\r\n    //己\r\n    { primary_tin_gone: \"己\", secondary_tin_gone: \"乙\", title: \"地戶逢星\", desc: \"宜遁跡藏刑為利\" },\r\n    { primary_tin_gone: \"己\", secondary_tin_gone: \"丙\", title: \"火悖地戶\", desc: \"男人冤冤相害，女人必致淫污\" },\r\n    { primary_tin_gone: \"己\", secondary_tin_gone: \"丁\", title: \"朱雀入墓\", desc: \"文書詞訟，先曲後直\" },\r\n    { primary_tin_gone: \"己\", secondary_tin_gone: \"戊\", title: \"犬還青龍\", desc: \"門吉為謀望遂意，上人見喜，若門凶，枉費心機\" },\r\n    { primary_tin_gone: \"己\", secondary_tin_gone: \"己\", title: \"地戶逢鬼\", desc: \"病者必發凶或必死，百事不遂暫不為謀，謀則為凶\" },\r\n    { primary_tin_gone: \"己\", secondary_tin_gone: \"庚\", title: \"刑格返名\", desc: \"詞訟先動者不利，如臨陰星，則有謀害之情\" },\r\n    { primary_tin_gone: \"己\", secondary_tin_gone: \"辛\", title: \"游魂入屋\", desc: \"易遭陰邪鬼魅作祟\" },\r\n    { primary_tin_gone: \"己\", secondary_tin_gone: \"壬\", title: \"地網高張\", desc: \"狡童佚女，姦情傷殺凶\" },\r\n    { primary_tin_gone: \"己\", secondary_tin_gone: \"癸\", title: \"地刑玄武\", desc: \"男女疾病重危，有困獄詞訟之災\" },\r\n    //庚\r\n    { primary_tin_gone: \"庚\", secondary_tin_gone: \"乙\", title: \"太白蓬星\", desc: \"退吉進凶，謀為不利\" },\r\n    { primary_tin_gone: \"庚\", secondary_tin_gone: \"丙\", title: \"太白入熒\", desc: \"賊必來，為客進利為主破財\" },\r\n    { primary_tin_gone: \"庚\", secondary_tin_gone: \"丁\", title: \"亭亭之格\", desc: \"因私匿或男女關係主官司是非，門吉有救\" },\r\n    { primary_tin_gone: \"庚\", secondary_tin_gone: \"戊\", title: \"天乙伏宮\", desc: \"百事不可謀，大凶\" },\r\n    { primary_tin_gone: \"庚\", secondary_tin_gone: \"己\", title: \"官符刑格\", desc: \"主有官司又舌，因官訟被判刑，住牢獄更\" },\r\n    { primary_tin_gone: \"庚\", secondary_tin_gone: \"庚\", title: \"戰格\", desc: \"官災橫禍，兄弟朋友相沖，不利為事 戰格，兄弟相爭，朋友相沖，官災橫禍\" },\r\n    { primary_tin_gone: \"庚\", secondary_tin_gone: \"辛\", title: \"白虎干格\", desc: \"不宜遠行，車折馬傷，求財更為大凶\" },\r\n    { primary_tin_gone: \"庚\", secondary_tin_gone: \"壬\", title: \"遠行道路迷失\", desc: \"男女音信難通\" },\r\n    { primary_tin_gone: \"庚\", secondary_tin_gone: \"癸\", title: \"大格\", desc: \"主車禍，行人不致，官事不止，日育母子，俱傷大凶\" },\r\n    //辛\r\n    { primary_tin_gone: \"辛\", secondary_tin_gone: \"乙\", title: \"白虎猖狂\", desc: \"家破人亡，遠行多遭殃，測婚離散，主因男人\" },\r\n    { primary_tin_gone: \"辛\", secondary_tin_gone: \"丙\", title: \"干合悖師\", desc: \"門吉事也吉，門凶事也凶，測事易因財物致訟\" },\r\n    { primary_tin_gone: \"辛\", secondary_tin_gone: \"丁\", title: \"獄神得奇\", desc: \"經商求財獲利倍增，囚人逢天赦釋色\" },\r\n    { primary_tin_gone: \"辛\", secondary_tin_gone: \"戊\", title: \"困龍被傷\", desc: \"主官司破財，屈抑守份尚可，妄動帶來禍\" },\r\n    { primary_tin_gone: \"辛\", secondary_tin_gone: \"己\", title: \"入獄自刑\", desc: \"奴僕背主，有苦訴訟難申\" },\r\n    { primary_tin_gone: \"辛\", secondary_tin_gone: \"庚\", title: \"白虎出力\", desc: \"刀刃相交，主客相戰，遜讓退步稍可，強進血濺衣衫\" },\r\n    { primary_tin_gone: \"辛\", secondary_tin_gone: \"辛\", title: \"伏吟天庭\", desc: \"公廢私就，訟獄自羅罪名\" },\r\n    { primary_tin_gone: \"辛\", secondary_tin_gone: \"壬\", title: \"凶蛇入獄\", desc: \"兩男爭女，訟獄不息，先動失理\" },\r\n    { primary_tin_gone: \"辛\", secondary_tin_gone: \"癸\", title: \"天牢華蓋\", desc: \"日月失明，誤入天網，動止乖張\" },\r\n    //壬\r\n    { primary_tin_gone: \"壬\", secondary_tin_gone: \"乙\", title: \"小蛇得勢\", desc: \"男人通達，女人柔順，測孕育生子，祿馬光華\" },\r\n    { primary_tin_gone: \"壬\", secondary_tin_gone: \"丙\", title: \"水蛇入火\", desc: \"主官災刑禁，絡繹不絕\" },\r\n    { primary_tin_gone: \"壬\", secondary_tin_gone: \"丁\", title: \"干合蛇刑\", desc: \"文書牽連，貴人匆匆，男吉女凶\" },\r\n    { primary_tin_gone: \"壬\", secondary_tin_gone: \"戊\", title: \"小蛇化龍\", desc: \"男人發達，女人產嬰童\" },\r\n    { primary_tin_gone: \"壬\", secondary_tin_gone: \"己\", title: \"反吟蛇刑\", desc: \"官訟敗訴，大禍將至，順守可吉\" },\r\n    { primary_tin_gone: \"壬\", secondary_tin_gone: \"庚\", title: \"太白擒蛇\", desc: \"刑獄公平，立剖邪正\" },\r\n    { primary_tin_gone: \"壬\", secondary_tin_gone: \"辛\", title: \"騰蛇相纏\", desc: \"縱得吉門，亦不能安守，若有謀望，被人欺騙\" },\r\n    { primary_tin_gone: \"壬\", secondary_tin_gone: \"壬\", title: \"蛇入地羅\", desc: \"外人纏繞，內事縈縈，吉門則吉\" },\r\n    { primary_tin_gone: \"壬\", secondary_tin_gone: \"癸\", title: \"幼女奸淫\", desc: \"主有家醜外揚之事發生，門吉星凶易反福為禍\" },\r\n    //癸\r\n    { primary_tin_gone: \"癸\", secondary_tin_gone: \"乙\", title: \"華蓋蓬星\", desc: \"貴人祿位，常人平安，門吉則吉，門凶則凶\" },\r\n    { primary_tin_gone: \"癸\", secondary_tin_gone: \"丙\", title: \"華蓋悖師\", desc: \"貴賤逢之皆不利，唯上人見喜\" },\r\n    { primary_tin_gone: \"癸\", secondary_tin_gone: \"丁\", title: \"騰蛇夭嬌\", desc: \"文書官司，火焚也逃不掉\" },\r\n    { primary_tin_gone: \"癸\", secondary_tin_gone: \"戊\", title: \"天乙會合\", desc: \"吉門宜求財，婚姻喜美，吉人贊助成吉，若門凶則反禍官非\" },\r\n    { primary_tin_gone: \"癸\", secondary_tin_gone: \"己\", title: \"華蓋天牢\", desc: \"男女測之，音信皆阻，此格躲災避難方為吉\" },\r\n    { primary_tin_gone: \"癸\", secondary_tin_gone: \"庚\", title: \"太白入網\", desc: \"主以暴力爭訟，自羅罪責\" },\r\n    { primary_tin_gone: \"癸\", secondary_tin_gone: \"辛\", title: \"網蓋天牢\", desc: \"主官司敗訴，死罪難逃，測病亦大凶\" },\r\n    { primary_tin_gone: \"癸\", secondary_tin_gone: \"壬\", title: \"復見騰蛇\", desc: \"主嫁娶重婚，後嫁無子，不保年華\" },\r\n    { primary_tin_gone: \"癸\", secondary_tin_gone: \"癸\", title: \"天網四張\", desc: \"主行人失伴，病訴皆傷\" },\r\n]\r\n\r\nconst theif_gok = [\"庚\", \"丙\"]\r\nconst change_gok = [\"庚\", \"戊\"]\r\nconst leave_gok = [\"乙\", \"辛\"]\r\n\r\nconst doors_equals = (door, door2) => {\r\n    return door == door2\r\n}\r\n\r\n\r\nconst gone_equals = (gone, gone2) => {\r\n    return gone == gone2\r\n}\r\n\r\nconst is_door_fok = (door, origin_door, gone, gone2) => {\r\n    return doors_equals(door, origin_door)\r\n}\r\n\r\nconst is_gone_fok = (gone, gone2) => {\r\n    return gone_equals(gone, gone2)\r\n}\r\n\r\nconst is_door_fan = (door, origin_door) => {\r\n    return doors_equals(door, origin_door)\r\n}\r\n\r\nconst is_gone_fan = (gone, gone2) => {\r\n    return gone_equals(gone, gone2)\r\n}\r\n\r\nconst conflicts = (tin_gone, floor_gone) => {\r\n    let result = false\r\n\r\n    conflicts_gone.forEach((c) => {\r\n        if (tin_gone.indexOf(c.main) > -1 || floor_gone.indexOf(c.main) > -1) {\r\n            c.target.forEach((t) => {\r\n\r\n\r\n\r\n                if (tin_gone.indexOf(t) > -1 || floor_gone.indexOf(t) > -1)\r\n                    result = true\r\n            })\r\n        }\r\n    })\r\n\r\n    return result\r\n\r\n}\r\n\r\nconst merges = (tin_gone, floor_gone, tin_sun, floor_sun) => {\r\n    let result = false\r\n\r\n    merge_gone.forEach((c) => {\r\n        if (tin_gone.indexOf(c.main) > -1 || floor_gone.indexOf(c.main) > -1 ||\r\n            tin_sun.indexOf(c.main) > -1 || floor_sun.indexOf(c.main) > -1\r\n        ) {\r\n            if (tin_gone.indexOf(c.target) > -1 || floor_gone.indexOf(c.target) > -1)\r\n                result = true\r\n        }\r\n    })\r\n\r\n    return result\r\n\r\n}\r\n\r\nconst theifs = (tin_gone, floor_gone) => {\r\n    let result = false\r\n\r\n    if (tin_gone.indexOf(theif_gok[0]) > -1 && tin_gone.indexOf(theif_gok[1]) > -1) //天自成賊局\r\n        result = true\r\n    else if (floor_gone.indexOf(theif_gok[0]) > -1 && floor_gone.indexOf(theif_gok[1]) > -1)//地自成賊局\r\n        result = true\r\n    else if (tin_gone.indexOf(theif_gok[0]) > -1 && floor_gone.indexOf(theif_gok[1]) > -1)\r\n        result = true\r\n    else if (tin_gone.indexOf(theif_gok[1]) > -1 && floor_gone.indexOf(theif_gok[0]) > -1)\r\n        result = true\r\n\r\n    return result\r\n}\r\n\r\nconst changes = (tin_gone, floor_gone) => {\r\n    let result = false\r\n\r\n    if (tin_gone.indexOf(change_gok[0]) > -1 && tin_gone.indexOf(change_gok[1]) > -1) //天自成賊局\r\n        result = true\r\n    else if (floor_gone.indexOf(change_gok[0]) > -1 && floor_gone.indexOf(change_gok[1]) > -1)//地自成賊局\r\n        result = true\r\n    else if (tin_gone.indexOf(change_gok[0]) > -1 && floor_gone.indexOf(change_gok[1]) > -1)\r\n        result = true\r\n    else if (tin_gone.indexOf(change_gok[1]) > -1 && floor_gone.indexOf(change_gok[0]) > -1)\r\n        result = true\r\n\r\n    return result\r\n}\r\n\r\nconst leaves = (tin_gone, floor_gone) => {\r\n    let result = false\r\n\r\n    if (tin_gone.indexOf(leave_gok[0]) > -1 && tin_gone.indexOf(leave_gok[1]) > -1) //天自成賊局\r\n        result = true\r\n    else if (floor_gone.indexOf(leave_gok[0]) > -1 && floor_gone.indexOf(leave_gok[1]) > -1)//地自成賊局\r\n        result = true\r\n    else if (tin_gone.indexOf(leave_gok[0]) > -1 && floor_gone.indexOf(leave_gok[1]) > -1)\r\n        result = true\r\n    else if (tin_gone.indexOf(leave_gok[1]) > -1 && floor_gone.indexOf(leave_gok[0]) > -1)\r\n        result = true\r\n\r\n    return result\r\n}\r\n\r\nconst gakgoks = (tin_gone, floor_gone) => {\r\n    let result = []\r\n\r\n    gak_gok_81.forEach(g => {\r\n        if\r\n            (\r\n            tin_gone.length === 2 &&\r\n            (tin_gone.indexOf(g.primary_tin_gone) === 0 && tin_gone.indexOf(g.secondary_tin_gone) === 1)\r\n        )\r\n            result.push(g)\r\n        else if (\r\n            floor_gone.length === 2 &&\r\n            (floor_gone.indexOf(g.primary_tin_gone) === 0 && floor_gone.indexOf(g.secondary_tin_gone) === 1)\r\n        )\r\n            result.push(g)\r\n        else {\r\n            if (tin_gone.indexOf(g.primary_tin_gone) > -1 && floor_gone.indexOf(g.secondary_tin_gone) > -1)\r\n                result.push(g)\r\n        }\r\n    })\r\n\r\n    return result\r\n}\r\n\r\n\r\nconst is_tin_gone_conflicts = (tins, floors, door_sun_seq) => {\r\n    let result = []\r\n    let t_tin = []\r\n    t_tin.push(...tins)\r\n    t_tin.pop()\r\n\r\n    t_tin.forEach((t, idx) => {\r\n        if (conflicts(t['primary'] + t['second'], floors[idx]))\r\n            result.push(door_sun_seq[idx])\r\n    })\r\n\r\n    return result;\r\n}\r\n\r\nconst is_tin_gone_merges = (tins, floors, tin_suns, floor_suns, door_sun_seq) => {\r\n    let result = []\r\n    let t_tin = []\r\n    t_tin.push(...tins)\r\n    t_tin.pop()\r\n\r\n    t_tin.forEach((t, idx) => {\r\n        if (merges(t['primary'] + t['second'], floors[idx], tin_suns[idx], floor_suns[idx]))\r\n            result.push(door_sun_seq[idx])\r\n    })\r\n\r\n    return result;\r\n}\r\n\r\nconst is_theif_gok = (tins, floors, door_sun_seq) => {\r\n    let result = []\r\n    let t_tin = []\r\n    t_tin.push(...tins)\r\n    t_tin.pop()\r\n\r\n    t_tin.forEach((t, idx) => {\r\n        if (theifs(floors[idx], t['primary'] + t['second']))\r\n            result.push(door_sun_seq[idx])\r\n    })\r\n\r\n    return result;\r\n}\r\n\r\nconst is_change_gok = (tins, floors, door_sun_seq) => {\r\n    let result = []\r\n    let t_tin = []\r\n    t_tin.push(...tins)\r\n    t_tin.pop()\r\n\r\n    t_tin.forEach((t, idx) => {\r\n        if (changes(floors[idx], t['primary'] + t['second']))\r\n            result.push(door_sun_seq[idx])\r\n    })\r\n\r\n    return result;\r\n}\r\n\r\nconst is_leave_gok = (tins, floors, door_sun_seq) => {\r\n    let result = []\r\n    let t_tin = []\r\n    t_tin.push(...tins)\r\n    t_tin.pop()\r\n\r\n    t_tin.forEach((t, idx) => {\r\n        if (leaves(floors[idx], t['primary'] + t['second']))\r\n            result.push(door_sun_seq[idx])\r\n    })\r\n\r\n    return result;\r\n}\r\n\r\nconst find_gak_gok = (tins, floors, door_sun_seq) => {\r\n    let result = []\r\n    let t_tin = []\r\n    t_tin.push(...tins)\r\n    t_tin.pop()\r\n\r\n    t_tin.forEach((t, idx) => {\r\n        result.push({\r\n            seq: door_sun_seq[idx],\r\n            gakgok: gakgoks(floors[idx], t['primary'] + t['second'])\r\n        })\r\n    })\r\n\r\n    return result;\r\n}\r\n\r\nexport {\r\n    is_door_fok, is_gone_fok, is_door_fan, is_gone_fan, is_tin_gone_conflicts, is_tin_gone_merges,\r\n    is_theif_gok, is_change_gok, is_leave_gok, theifs, find_gak_gok\r\n}","import solar from './solar.json'\r\nconst solar_JSON_starting_year = 1900\r\n\r\nconst find_solar_terms = async (terms, year) => {\r\n    const solar_term_api_url = `https://api.timelessq.com/time/jieqi?year=${year}`\r\n\r\n\r\n    const response = await fetch(solar_term_api_url);\r\n    const data = await response.json();\r\n\r\n    let result = new Date()\r\n\r\n    data['data'].forEach((d) => {\r\n        if (d['name'] == terms) {\r\n\r\n            result = new Date(d['time'])\r\n        }\r\n    });\r\n\r\n    return result\r\n}\r\n\r\nconst find_solar_terms_offline = async (terms, year) => {\r\n    const data = solar[year - solar_JSON_starting_year]\r\n    let result = new Date()\r\n\r\n    data['data'].forEach((d) => {\r\n        if (d['name'] == terms) {\r\n\r\n            result = new Date(d['time'])\r\n        }\r\n    });\r\n\r\n    return result\r\n}\r\n\r\nconst find_current_solar_terms = async (months, year) => {\r\n\r\n    const last_year_solar_term_api_url = `https://api.timelessq.com/time/jieqi?year=${year - 1}`\r\n    const solar_term_api_url = `https://api.timelessq.com/time/jieqi?year=${year}`\r\n\r\n\r\n    const last_year_resp = await fetch(last_year_solar_term_api_url);\r\n    const last_year_data = await last_year_resp.json();\r\n\r\n    const response = await fetch(solar_term_api_url);\r\n    const data = await response.json();\r\n\r\n    let last_year_last_st;\r\n    let array_current_year = []\r\n\r\n\r\n    last_year_data['data'].forEach((d, idx) => {\r\n        if (idx == 24) {\r\n            let t_date = new Date(d['time'])\r\n            last_year_last_st = t_date\r\n        }\r\n    })\r\n\r\n\r\n\r\n    data['data'].forEach((d, idx) => {\r\n        if (idx == 0 || idx % 2 == 0) {\r\n            let t_date = new Date(d['time'])\r\n            if (t_date.getFullYear() == year)\r\n                array_current_year.push(t_date)\r\n        }\r\n    });\r\n\r\n\r\n\r\n    return { first: months == 0 ? last_year_last_st : array_current_year[months - 1], second: array_current_year[months] }\r\n}\r\n\r\nconst find_current_solar_terms_offline = async (months, year) => {\r\n\r\n    const last_year_data = solar[year - solar_JSON_starting_year - 1]\r\n\r\n    const data = solar[year - solar_JSON_starting_year]\r\n\r\n    let last_year_last_st;\r\n    let array_current_year = []\r\n\r\n\r\n    last_year_data['data'].forEach((d, idx) => {\r\n        if (idx == 24) {\r\n            let t_date = new Date(d['time'])\r\n            last_year_last_st = t_date\r\n        }\r\n    })\r\n\r\n\r\n\r\n    data['data'].forEach((d, idx) => {\r\n        if (idx == 0 || idx % 2 == 0) {\r\n            let t_date = new Date(d['time'])\r\n            if (t_date.getFullYear() == year)\r\n                array_current_year.push(t_date)\r\n        }\r\n    });\r\n\r\n\r\n\r\n    return { first: months == 0 ? last_year_last_st : array_current_year[months - 1], second: array_current_year[months] }\r\n}\r\n\r\nconst roundToNearestMinute = function (date) {\r\n    var coeff = 1000 * 60 * 1; // <-- Replace {5} with interval\r\n\r\n    return new Date(Math.round(date.getTime() / coeff) * coeff);\r\n};\r\n\r\nexport { find_solar_terms, find_current_solar_terms, find_solar_terms_offline, find_current_solar_terms_offline, roundToNearestMinute }","import { theifs } from './notes.js'\nimport lunisolar from 'lunisolar'\nimport { find_solar_terms, find_current_solar_terms, find_solar_terms_offline, find_current_solar_terms_offline, roundToNearestMinute } from './solarTerms.js'\nimport {\n    is_door_fok, is_gone_fok, is_door_fan, is_gone_fan, find_gak_gok\n} from '../js/notes.js'\nconst tin_gone_seq = [\"戊\", \"己\", \"庚\", \"辛\", \"壬\", \"癸\", \"丁\", \"丙\", \"乙\"]\nconst door_seq = [\"休\", \"生\", \"伤\", \"杜\", \"景\", \"死\", \"惊\", \"开\"]\nconst star_seq = [\"蓬\", \"任\", \"冲\", \"辅\", \"英\", \"芮\", \"柱\", \"心\"]\nconst sun_seq = [\"符\", \"蛇\", \"阴\", \"合\", \"虎\", \"武\", \"九\", \"天\"]\nconst door_sun_seq = [1, 8, 3, 4, 9, 2, 7, 6]\nconst gong_seq = [1, 2, 3, 4, 6, 7, 8, 9]\nconst floor12_str = [\"子\", \"丑\", \"寅\", \"卯\", \"辰\", \"巳\", \"午\", \"未\", \"申\", \"酉\", \"戌\", \"亥\"]\nconst floor12_month_str = [\"寅\", \"卯\", \"辰\", \"巳\", \"午\", \"未\", \"申\", \"酉\", \"戌\", \"亥\", \"子\", \"丑\"]\nconst floor12_int = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\nconst floor12_animarl = [\"鼠\", \"牛\", \"虎\", \"兔\", \"龍\", \"蛇\", \"馬\", \"羊\", \"猴\", \"雞\", \"狗\", \"豬\"]\nconst tin_gone_10_str = [\"甲\", \"乙\", \"丙\", \"丁\", \"戊\", \"己\", \"庚\", \"辛\", \"壬\", \"癸\"]\nconst chun6_seq = [\"戊\", \"己\", \"庚\", \"辛\", \"壬\", \"癸\"]\nconst chun6_chi_seq = [\"子\", \"戌\", \"申\", \"午\", \"辰\", \"寅\"]\nconst gone_chi = [\n    {\n        gone: 1,\n        chi: ['子']\n    },\n    {\n        gone: 8,\n        chi: ['丑', '寅']\n    },\n    {\n        gone: 3,\n        chi: ['卯']\n    },\n    {\n        gone: 4,\n        chi: ['辰', '巳']\n    },\n    {\n        gone: 9,\n        chi: ['午']\n    },\n    {\n        gone: 2,\n        chi: ['未', '申']\n    },\n    {\n        gone: 7,\n        chi: ['酉']\n    },\n    {\n        gone: 6,\n        chi: ['戌', '亥']\n    },\n]\n\nconst five_elements = [\n    { name: \"木\", sang: \"火\", hak: \"土\", hak_oh: \"金\", sang_oh: \"水\", gong: [3, 4], sang_oh_gong: [1], sang_gong: [9], chi: [\"寅\", \"卯\"], wong_sheung_gong: [3, 4, 9] },\n    { name: \"火\", sang: \"土\", hak: \"金\", hak_oh: \"水\", sang_oh: \"木\", gong: [9], sang_oh_gong: [3, 4], sang_gong: [2, 8], chi: [\"巳\", \"午\"], wong_sheung_gong: [9, 2, 8] },\n    { name: \"土\", sang: \"金\", hak: \"水\", hak_oh: \"木\", sang_oh: \"火\", gong: [2, 8], sang_oh_gong: [9], sang_gong: [6, 7], chi: [\"辰\", \"戌\", \"丑\", \"未\"], wong_sheung_gong: [2, 8, 6, 7] },\n    { name: \"金\", sang: \"水\", hak: \"木\", hak_oh: \"火\", sang_oh: \"土\", gong: [6, 7], sang_oh_gong: [2, 8], sang_gong: [1], chi: [\"申\", \"酉\"], wong_sheung_gong: [6, 7, 1] },\n    { name: \"水\", sang: \"木\", hak: \"火\", hak_oh: \"土\", sang_oh: \"金\", gong: [1], sang_oh_gong: [6, 7], sang_gong: [3, 4], chi: [\"子\", \"亥\"], wong_sheung_gong: [1, 3, 4] }\n]\n\nconst gongs = [\n    { gong: [1], chi: [\"子\"], wong_sheung_gong: [1, 3, 4] },\n    { gong: [1], chi: [\"丑\"], wong_sheung_gong: [8, 2, 6, 7] },\n    { gong: [1], chi: [\"寅\"], wong_sheung_gong: [8, 3, 4, 9] },\n    { gong: [1], chi: [\"卯\"], wong_sheung_gong: [3, 4, 9] },\n    { gong: [1], chi: [\"辰\"], wong_sheung_gong: [4, 2, 8, 6, 7] },\n    { gong: [1], chi: [\"巳\"], wong_sheung_gong: [4, 9, 2, 8] },\n    { gong: [1], chi: [\"午\"], wong_sheung_gong: [9, 2, 8] },\n    { gong: [1], chi: [\"未\"], wong_sheung_gong: [2, 8, 6, 7] },\n    { gong: [1], chi: [\"申\"], wong_sheung_gong: [2, 6, 7, 1] },\n    { gong: [1], chi: [\"酉\"], wong_sheung_gong: [7, 6, 1] },\n    { gong: [1], chi: [\"戌\"], wong_sheung_gong: [6, 7, 2, 8] },\n    { gong: [1], chi: [\"亥\"], wong_sheung_gong: [6, 3, 4, 1] },\n]\n\nconst gak_time_gone = [\n    { gak: \"子\", gone: \"戊\" },\n    { gak: \"戌\", gone: \"己\" },\n    { gak: \"申\", gone: \"庚\" },\n    { gak: \"午\", gone: \"辛\" },\n    { gak: \"辰\", gone: \"壬\" },\n    { gak: \"寅\", gone: \"癸\" },\n]\n\nconst hill24 = [\n    { gong: 1, chi: [\"壬\", \"子\", \"癸\"] },\n    { gong: 8, chi: [\"丑\", \"艮\", \"寅\"] },\n    { gong: 3, chi: [\"甲\", \"卯\", \"乙\"] },\n    { gong: 4, chi: [\"辰\", \"巽\", \"巳\"] },\n    { gong: 9, chi: [\"丙\", \"午\", \"丁\"] },\n    { gong: 2, chi: [\"未\", \"坤\", \"申\"] },\n    { gong: 7, chi: [\"庚\", \"酉\", \"辛\"] },\n    { gong: 6, chi: [\"戌\", \"乾\", \"亥\"] },\n]\nconst harm = [\n    { gong: 8, chi: [\"庚\"] },\n    { gong: 3, chi: [\"戊\"] },\n    { gong: 4, chi: [\"壬\", \"癸\"] },\n    { gong: 9, chi: [\"辛\"] },\n    { gong: 2, chi: [\"己\"] },\n    { gong: \"special\", chi: [\"辛\"] },\n    { gong: \"special\", chi: [\"壬\"] },\n]\n\nconst grave = [\n    { gong: 8, chi: [\"丁\", \"己\", \"庚\"], sun: [] },\n    { gong: 4, chi: [\"壬\", \"辛\"], sun: [] },\n    { gong: 6, chi: [\"乙\", \"丙\", \"戊\"], sun: [] },\n    { gong: 2, chi: [\"乙\", \"癸\"], sun: [\"符\"] }\n]\n\nconst bik = [\n    { gong: 1, door: [\"生\", \"死\"] },\n    { gong: 8, door: [\"伤\", \"杜\"] },\n    { gong: 3, door: [\"惊\", \"开\"] },\n    { gong: 4, door: [\"惊\", \"开\"] },\n    { gong: 9, door: [\"休\"] },\n    { gong: 2, door: [\"伤\", \"杜\"] },\n    { gong: 7, door: [\"景\"] },\n    { gong: 6, door: [\"景\"] },\n]\n\nconst horse = [\n    { chi: [\"申\", \"子\", \"辰\"], horse_gong: 8 },\n    { chi: [\"寅\", \"午\", \"戌\"], horse_gong: 2 },\n    { chi: [\"巳\", \"酉\", \"丑\"], horse_gong: 6 },\n    { chi: [\"亥\", \"卯\", \"未\"], horse_gong: 4 }\n]\n\nconst find_wong_gong = (month_chi) => {\n    let result = []\n    gongs.forEach((f) => {\n        if (f.chi.indexOf(month_chi) > -1) {\n            result.push(...f.wong_sheung_gong)\n        }\n    })\n\n    return result\n}\n\nconst find_gok = (year_chi, month_chi, day, time_chi) => {\n    // console.log(`year_chi = ${year_chi} month_chi=${month_chi} day=${day} time_chi=${time_chi}`);\n\n    let cnt = 0\n    cnt += floor12_int[floor12_str.indexOf(year_chi)]\n    // \n    cnt += floor12_int[floor12_month_str.indexOf(month_chi)]\n    // \n    cnt += day\n    // \n    cnt += floor12_int[floor12_str.indexOf(time_chi)]\n    // \n\n\n    let gok = cnt % 9\n    gok = gok == 0 ? 9 : gok\n\n    return gok\n}\n\nconst floor_tin_gone = (number, up_down) => {\n    let floor_seq_array = []\n    let cnt = 1\n    floor_seq_array[0] = number\n\n    if (up_down == 0) {\n        while (cnt <= 8) {\n\n            let val = floor_seq_array[cnt - 1] - 1\n            if (val < 1) {\n                val = 9\n            }\n\n            floor_seq_array[cnt] = val\n            cnt++\n        }\n    }\n    else if (up_down == 1) {\n        while (cnt <= 8) {\n\n            let val = floor_seq_array[cnt - 1] + 1\n            if (val > 9) {\n                val = 1\n            }\n\n            floor_seq_array[cnt] = val\n            cnt++\n        }\n    }\n\n    return floor_seq_array\n}\n\nconst find_empty_and_chun = (time_gone_chi) => {\n    let gone = time_gone_chi[0]\n    let chi = time_gone_chi[1]\n\n\n    let end = 9 - tin_gone_10_str.indexOf(gone)\n\n    let empty1 = end + 1 + floor12_str.indexOf(chi)\n    let empty2 = end + 2 + floor12_str.indexOf(chi)\n\n    empty1 = empty1 >= 12 ? empty1 - 12 : empty1\n    empty2 = empty2 >= 12 ? empty2 - 12 : empty2\n\n\n    let empty = {\n        \"empty1\": floor12_str[empty1],\n        \"empty2\": floor12_str[empty2],\n        \"chun_gone\": find_chun(empty2),\n        \"chun_chi\": find_chun_chi(empty2)\n    }\n\n    return empty\n}\n\nconst find_empty_gong = (empty) => {\n\n    let gong = \"\"\n    hill24.forEach((hill) => {\n        if (hill['chi'].includes(empty))\n            gong = hill['gong']\n    })\n\n    return gong\n\n}\n\nconst find_harm = (gong, tin_gone, floor_gone) => {\n    let harmful = false\n    harm.forEach((h) => {\n        if (h['gong'] == gong) {\n            h['chi'].forEach((h) => {\n                if (tin_gone.indexOf(h) > -1 || floor_gone.indexOf(h) > -1)\n                    harmful = true\n            })\n        }\n    })\n\n    if (tin_gone.indexOf(\"辛\") > -1 && floor_gone.indexOf(\"辛\") > -1)\n        harmful = true\n    if (tin_gone.indexOf(\"壬\") > -1 && floor_gone.indexOf(\"壬\") > -1)\n        harmful = true\n\n    return harmful\n}\n\nconst find_grave = (gong, tin_gone, floor_gone, sun, floor_sun) => {\n    let is_grave = false\n    grave.forEach((g) => {\n        if (g['gong'] == gong) {\n            g['chi'].forEach((g) => {\n                if (tin_gone.indexOf(g) > -1 || floor_gone.indexOf(g) > -1)\n                    is_grave = true\n            })\n\n            if (g['sun'].includes(sun) || g['sun'].includes(floor_sun))\n                is_grave = true\n        }\n    })\n\n    return is_grave\n}\n\nconst find_bik = (gong, door) => {\n    let is_bik = false\n    bik.forEach((b) => {\n        if (b['gong'] == gong)\n            if (b['door'].includes(door))\n                is_bik = true\n    })\n\n    return is_bik\n}\n\nconst find_horse = (time_chi) => {\n    let horse_gong = 0\n    horse.forEach((h) => {\n        if (h['chi'].includes(time_chi))\n            horse_gong = h['horse_gong']\n    })\n\n    return horse_gong\n}\n\n\nconst find_chun = (empty2) => {\n    let chun6 = empty2 + 1 >= 12 ? floor12_str[empty2 + 1 - 12] : floor12_str[empty2 + 1]\n    let chun6_idx = chun6_chi_seq.indexOf(chun6)\n    return chun6_seq[chun6_idx]\n}\n\nconst find_chun_chi = (empty2) => {\n    let chun6 = empty2 + 1 >= 12 ? floor12_str[empty2 + 1 - 12] : floor12_str[empty2 + 1]\n    return chun6\n}\n\nconst find_door_and_star = (floor_seq_array, chun) => {\n    let chun_gung_idx = floor_seq_array[tin_gone_seq.indexOf(chun)]\n    chun_gung_idx = chun_gung_idx == 5 ? 2 : chun_gung_idx\n    let door_sun_seq_idx = door_sun_seq.indexOf(chun_gung_idx)\n\n    let door_and_star = {\n        \"door\": door_seq[door_sun_seq_idx],\n        \"star\": star_seq[door_sun_seq_idx],\n    }\n    // \n    return door_and_star\n}\n\nconst get_floor_tin_gone_display = (floor_tin_gone_seq) => {\n    let display_floor_tin_gone_array = []\n    display_floor_tin_gone_array[3] = { primary: tin_gone_seq[floor_tin_gone_seq.indexOf(4)] }\n    display_floor_tin_gone_array[4] = { primary: tin_gone_seq[floor_tin_gone_seq.indexOf(9)] }\n    display_floor_tin_gone_array[5] = { primary: tin_gone_seq[floor_tin_gone_seq.indexOf(2)], second: tin_gone_seq[floor_tin_gone_seq.indexOf(5)] }\n    display_floor_tin_gone_array[2] = { primary: tin_gone_seq[floor_tin_gone_seq.indexOf(3)] }\n    display_floor_tin_gone_array[8] = { primary: tin_gone_seq[floor_tin_gone_seq.indexOf(5)] }\n    display_floor_tin_gone_array[6] = { primary: tin_gone_seq[floor_tin_gone_seq.indexOf(7)] }\n    display_floor_tin_gone_array[1] = { primary: tin_gone_seq[floor_tin_gone_seq.indexOf(8)] }\n    display_floor_tin_gone_array[0] = { primary: tin_gone_seq[floor_tin_gone_seq.indexOf(1)] }\n    display_floor_tin_gone_array[7] = { primary: tin_gone_seq[floor_tin_gone_seq.indexOf(6)] }\n    return display_floor_tin_gone_array\n}\n\nconst get_star_display = (floor_tin_gone_display, time_gone, time_chi, star) => {\n    // \n    let start_gong = 0\n\n\n    if (time_gone == \"甲\") {\n        let gone = \"\"\n        gak_time_gone.forEach((g) => {\n            if (g['gak'] == time_chi)\n                gone = g['gone']\n        })\n\n\n        floor_tin_gone_display.forEach((tg, idx) => { if (tg['primary'] == gone) start_gong = idx })\n    }\n    else\n        floor_tin_gone_display.forEach((tg, idx) => { if (tg['primary'] == time_gone) start_gong = idx })\n\n    if (start_gong == 8)\n        start_gong = 5\n    let star_seq_array = []\n    // \n    if (star_seq.indexOf(star) != start_gong) {\n        let shift_cnb = start_gong > star_seq.indexOf(star) ? start_gong - star_seq.indexOf(star) : star_seq.indexOf(star) - start_gong\n        // \n\n        star_seq_array = start_gong > star_seq.indexOf(star) ? shiftRight(star_seq, shift_cnb) : shiftLeft(star_seq, shift_cnb)\n    }\n    else {\n        star_seq_array.push(...star_seq)\n    }\n    // \n    return star_seq_array\n}\n\nconst get_tin_tin_gone_display = (star_display_seq, floor_tin_gone_display) => {\n    let t_floor_tin_gone_display = []\n    t_floor_tin_gone_display.push(...floor_tin_gone_display)\n    t_floor_tin_gone_display.pop()\n    // \n    let start_idx = star_display_seq.indexOf(star_seq[0])\n    // \n    let tin_tin_gone_seq = []\n    let shift_cnb = start_idx\n    tin_tin_gone_seq = shiftRight(t_floor_tin_gone_display, shift_cnb)\n\n    let tin_tin_gone_str_seq = []\n    tin_tin_gone_seq.forEach((t, idx) => {\n        if (t.hasOwnProperty('second')) {\n            tin_tin_gone_str_seq.push(t['primary'] + t['second'])\n        }\n        else {\n            tin_tin_gone_str_seq.push(t['primary'])\n        }\n    })\n\n\n\n    // \n    return tin_tin_gone_str_seq\n}\n\nconst get_door_display = (display_floor_tin_gone_array, chun_gone, chun_chi, time_chi, up_down, door) => {\n    // \n    // \n    let chun_gong = 0;\n\n    display_floor_tin_gone_array.forEach((t, idx) => {\n        if (t['primary'] == chun_gone) {\n            if (idx == 8)\n                chun_gong = 5\n            else\n                chun_gong = door_sun_seq[idx]\n        }\n    })\n\n    let chun_chi_idx = floor12_str.indexOf(chun_chi);\n    let time_chi_idx = floor12_str.indexOf(time_chi);\n\n    let door_seq_array = []\n\n    if (chun_chi != time_chi_idx) {\n        if (up_down == 0) {\n\n            let diff = 0;\n\n\n\n            if (chun_chi_idx == time_chi_idx)\n                diff = 0\n            else if (time_chi_idx < 12 && time_chi_idx > chun_chi_idx)\n                diff = time_chi_idx - chun_chi_idx\n            else\n                diff = floor12_str.length - chun_chi_idx + time_chi_idx;\n\n\n            // if (time_chi_idx < chun_chi_idx) {\n            //     \n            //     \n            //     diff = chun_chi_idx - time_chi_idx\n            // }\n            // else if (time_chi_idx > chun_chi_idx) {\n            //     diff = time_chi_idx - chun_chi_idx\n            // }\n\n            // \n\n\n\n            let door_start_idx = 0\n            // if (chun_gong > diff)\n            //     door_start_idx = door_sun_seq.indexOf(chun_gong - diff)\n            // else \n            if (diff >= chun_gong)\n                chun_gong += 9\n\n\n\n            if (chun_gong - diff > 0)\n                door_start_idx = door_sun_seq.indexOf(chun_gong - diff)\n\n            if (door_start_idx == -1)\n                door_start_idx = 5\n\n\n\n\n            let fuk = door == door_seq[door_start_idx]\n\n\n\n\n            if (!fuk && door_sun_seq[door_start_idx] != chun_gong) {\n                let shift_cnb = 0\n                if (door_seq.indexOf(door) > door_start_idx) {\n                    shift_cnb = door_seq.indexOf(door) - door_start_idx\n                    door_seq_array = shiftLeft(door_seq, shift_cnb)\n                }\n                else if (door_start_idx > door_seq.indexOf(door)) {\n                    shift_cnb = door_start_idx - door_seq.indexOf(door)\n                    door_seq_array = shiftRight(door_seq, shift_cnb)\n                }\n            }\n            else {\n                door_seq_array.push(...door_seq)\n            }\n        }\n        else if (up_down == 1) {\n\n            let diff = 0;\n\n\n\n            if (chun_chi_idx == time_chi_idx)\n                diff = 0\n            else if (time_chi_idx < 12 && time_chi_idx > chun_chi_idx)\n                diff = time_chi_idx - chun_chi_idx\n            else\n                diff = floor12_str.length - chun_chi_idx + time_chi_idx;\n\n\n            // if (time_chi_idx < chun_chi_idx) {\n            //     diff = chun_chi_idx + (floor12_str.length - chun_chi_idx) - time_chi_idx\n            // }\n            // else if (time_chi_idx > chun_chi_idx) {\n            //     diff = time_chi_idx - chun_chi_idx\n            // }\n\n\n\n\n            let door_start_idx = 0\n            // if (chun_gong > diff)\n            //     door_start_idx = door_sun_seq.indexOf(chun_gong - diff)\n            // else \n            if (chun_gong + diff > 9)\n                chun_gong -= 9\n\n\n\n            if (chun_gong + diff > 0)\n                door_start_idx = door_sun_seq.indexOf(chun_gong + diff)\n\n            if (door_start_idx == -1)\n                door_start_idx = 5\n\n\n\n\n\n\n            let fuk = door == door_seq[door_start_idx]\n\n            if (!fuk && door_sun_seq[door_start_idx] != chun_gong) {\n                let shift_cnb = 0\n                if (door_seq.indexOf(door) > door_start_idx) {\n                    shift_cnb = door_seq.indexOf(door) - door_start_idx\n                    door_seq_array = shiftLeft(door_seq, shift_cnb)\n                }\n                else if (door_start_idx > door_seq.indexOf(door)) {\n                    shift_cnb = door_start_idx - door_seq.indexOf(door)\n                    door_seq_array = shiftRight(door_seq, shift_cnb)\n                }\n\n            }\n            else {\n                door_seq_array.push(...door_seq)\n            }\n        }\n    }\n    else {\n        door_seq_array.push(...door_seq)\n    }\n    // \n    return door_seq_array\n\n\n}\n\nconst get_sun_display = (display_tin_tin_gone_array, chun_gone, up_down) => {\n    let shift_cnb = 0\n\n\n    let sun_seq_array = []\n\n    let t_sun_array = []\n    t_sun_array.push(...sun_seq)\n    if (up_down == 0) {\n        let t_tin_tin_gone_array = []\n        t_tin_tin_gone_array.push(...display_tin_tin_gone_array)\n        t_tin_tin_gone_array.reverse()\n\n        // \n\n        t_tin_tin_gone_array.forEach((t, idx) => {\n            if (t.indexOf(chun_gone) > -1)\n                shift_cnb = idx\n        })\n\n        // \n        t_sun_array = t_sun_array.reverse()\n        sun_seq_array = shiftLeft(t_sun_array, shift_cnb)\n    }\n    else {\n\n        display_tin_tin_gone_array.forEach((t, idx) => {\n            if (t.indexOf(chun_gone) > -1)\n                shift_cnb = idx\n        })\n        sun_seq_array = shiftRight(t_sun_array, shift_cnb)\n    }\n\n\n    // \n    return sun_seq_array\n}\n\nconst get_floor_sun_display = (display_floor_tin_gone_array, chun_gone, up_down) => {\n\n    let t_floor_tin_gone_display = []\n    t_floor_tin_gone_display.push(...display_floor_tin_gone_array)\n    t_floor_tin_gone_display.pop()\n\n    // \n\n    let shift_cnt = 0\n\n\n    let sun_seq_array = []\n\n    let t_sun_array = []\n    t_sun_array.push(...sun_seq)\n\n    if (up_down == 0) {\n        let t_floor_tin_gone_array = []\n        t_floor_tin_gone_array.push(...t_floor_tin_gone_display)\n        t_floor_tin_gone_array.reverse()\n\n        // \n        // shift_cnt = t_floor_tin_gone_array.indexOf(chun_gone)\n        t_floor_tin_gone_array.forEach((t, idx) => {\n            if (t['primary'] == chun_gone || t['second'] == chun_gone)\n                shift_cnt = idx\n        })\n\n        t_sun_array = t_sun_array.reverse()\n\n        // \n        sun_seq_array = shiftLeft(t_sun_array, shift_cnt)\n    }\n    else {\n        // shift_cnt = t_floor_tin_gone_display.indexOf(chun_gone)\n        t_floor_tin_gone_display.forEach((t, idx) => {\n            if (t['primary'] == chun_gone || t['second'] == chun_gone)\n                shift_cnt = idx\n        })\n        sun_seq_array = shiftRight(t_sun_array, shift_cnt)\n    }\n\n\n    // \n    return sun_seq_array\n}\n\nconst find_yan_gone = (tin_tin_gone_seq, time_gone, time_chi, door_tin_gone, chun_gone, yinyang, door_gong_idx) => {\n\n    let yan_gone_array = []\n    yan_gone_array.push(...tin_tin_gone_seq)\n    let yan_gone_obj_array = []\n\n    if (time_gone == \"甲\") {\n        let gone = \"\"\n        gak_time_gone.forEach((g) => {\n            if (g['gak'] == time_chi)\n                gone = g['gone']\n        })\n\n\n        time_gone = gone\n    }\n\n\n\n    if (door_tin_gone.indexOf(time_gone) > -1) {\n        let shifted_tin_gone_seq = []\n        shifted_tin_gone_seq.push(...tin_gone_seq)\n        let shift_cnt = 0\n        shifted_tin_gone_seq.forEach((t, idx) => {\n            if (t.indexOf(chun_gone) > -1) {\n\n                shift_cnt = idx\n            }\n        })\n\n        // shifted_tin_gone_seq = shiftLeft(shifted_tin_gone_seq, shift_cnt)\n        shifted_tin_gone_seq = shiftArray(shifted_tin_gone_seq, chun_gone)\n\n\n        if (yinyang == 0) {\n            yan_gone_array[3] = shifted_tin_gone_seq[1]\n            yan_gone_array[2] = shifted_tin_gone_seq[2]\n            yan_gone_array[5] = shifted_tin_gone_seq[3] + shifted_tin_gone_seq[0]\n            yan_gone_array[0] = shifted_tin_gone_seq[4]\n            yan_gone_array[4] = shifted_tin_gone_seq[5]\n            yan_gone_array[1] = shifted_tin_gone_seq[6]\n            yan_gone_array[6] = shifted_tin_gone_seq[7]\n            yan_gone_array[7] = shifted_tin_gone_seq[8]\n        }\n        else if (yinyang == 1) {\n            yan_gone_array[7] = shifted_tin_gone_seq[1]\n            yan_gone_array[6] = shifted_tin_gone_seq[2]\n            yan_gone_array[1] = shifted_tin_gone_seq[3]\n            yan_gone_array[4] = shifted_tin_gone_seq[4]\n            yan_gone_array[0] = shifted_tin_gone_seq[5]\n            yan_gone_array[5] = shifted_tin_gone_seq[6] + shifted_tin_gone_seq[0]\n            yan_gone_array[2] = shifted_tin_gone_seq[7]\n            yan_gone_array[3] = shifted_tin_gone_seq[8]\n        }\n    }\n    else {\n\n\n        let shift_cnt = 0;\n        let time_gone_idx = 0\n        // yan_gone_array.indexOf(time_gone)\n        yan_gone_array.forEach((y, idx) => {\n            if (y.indexOf(time_gone) > -1)\n                time_gone_idx = idx\n        })\n\n        if (time_gone_idx > door_gong_idx) {\n            shift_cnt = time_gone_idx - door_gong_idx\n            yan_gone_array = shiftLeft(yan_gone_array, shift_cnt)\n        }\n        else if (door_gong_idx > time_gone_idx) {\n            shift_cnt = door_gong_idx - time_gone_idx\n            yan_gone_array = shiftRight(yan_gone_array, shift_cnt)\n        }\n\n    }\n\n    yan_gone_array.forEach((y) => {\n        let gone = y.split('')\n        if (gone.length == 1) {\n            yan_gone_obj_array.push({ primary: gone[0], second: \"\" })\n        }\n        else if (gone.length == 2) {\n            yan_gone_obj_array.push({ primary: gone[0], second: gone[1] })\n        }\n    })\n\n\n\n    return yan_gone_obj_array\n}\n\nconst spinR = (dataSetObj, n) => {\n    let floor_tin_gone5 = dataSetObj.display_floor_tin_gone_array[8]\n    let temp_floor_tin_gone_array = dataSetObj.display_floor_tin_gone_array.filter((t, idx) => idx != 8)\n    temp_floor_tin_gone_array = shiftLeft(temp_floor_tin_gone_array, n)\n    let display_floor_tin_gone_array = [\n        temp_floor_tin_gone_array[0],\n        temp_floor_tin_gone_array[1],\n        temp_floor_tin_gone_array[2],\n        temp_floor_tin_gone_array[3],\n        temp_floor_tin_gone_array[4],\n        temp_floor_tin_gone_array[5],\n        temp_floor_tin_gone_array[6],\n        temp_floor_tin_gone_array[7],\n        floor_tin_gone5\n    ]\n\n    let returnObj = {\n        display_floor_tin_gone_array: display_floor_tin_gone_array,\n        display_tin_tin_gone_array: shiftLeft(dataSetObj.display_tin_tin_gone_array, n),\n        display_sun_array: shiftLeft(dataSetObj.display_sun_array, n),\n        display_floor_sun_array: shiftLeft(dataSetObj.display_floor_sun_array, n),\n        display_star_array: shiftLeft(dataSetObj.display_star_array, n),\n        display_door_array: shiftLeft(dataSetObj.display_door_array, n),\n        yan_gone_array: shiftLeft(dataSetObj.yan_gone_array, n)\n    }\n    return returnObj\n}\n\nconst spinL = (dataSetObj, n) => {\n    let floor_tin_gone5 = dataSetObj.display_floor_tin_gone_array[8]\n    let temp_floor_tin_gone_array = dataSetObj.display_floor_tin_gone_array.filter((t, idx) => idx != 8)\n    temp_floor_tin_gone_array = shiftRight(temp_floor_tin_gone_array, n)\n    let display_floor_tin_gone_array = [\n        temp_floor_tin_gone_array[0],\n        temp_floor_tin_gone_array[1],\n        temp_floor_tin_gone_array[2],\n        temp_floor_tin_gone_array[3],\n        temp_floor_tin_gone_array[4],\n        temp_floor_tin_gone_array[5],\n        temp_floor_tin_gone_array[6],\n        temp_floor_tin_gone_array[7],\n        floor_tin_gone5\n    ]\n\n    let returnObj = {\n        display_floor_tin_gone_array: display_floor_tin_gone_array,\n        display_tin_tin_gone_array: shiftRight(dataSetObj.display_tin_tin_gone_array, n),\n        display_sun_array: shiftRight(dataSetObj.display_sun_array, n),\n        display_floor_sun_array: shiftRight(dataSetObj.display_floor_sun_array, n),\n        display_star_array: shiftRight(dataSetObj.display_star_array, n),\n        display_door_array: shiftRight(dataSetObj.display_door_array, n),\n        yan_gone_array: shiftRight(dataSetObj.yan_gone_array, n)\n    }\n    return returnObj\n}\n\nconst spinGone = (left, right) => {\n    if (left > 0)\n        return shiftRight(door_sun_seq, left)\n    else if (right > 0)\n        return shiftLeft(door_sun_seq, right)\n    else\n        return door_sun_seq\n}\n\nconst shiftLeft = (arr, n) => {\n    let temp_array = []\n    temp_array.push(...arr)\n    for (let i = 0; i < n; i++) {\n        let temp = temp_array.shift();\n        temp_array.push(temp);\n    }\n    return temp_array;\n}\n\nconst shiftRight = (arr, n) => {\n    let temp_array = []\n    temp_array.push(...arr)\n    for (let i = temp_array.length; i > n; i--) {\n        let temp = temp_array.shift();\n        temp_array.push(temp);\n    }\n    return temp_array;\n}\n\nconst shiftArray = (arr, target) => {\n    return arr.concat(arr.splice(0, arr.indexOf(target)));\n}\n\nconst getSolarTerm = (year, index) => {\n    var termInfo = new Array(0, 21208, 42467, 63836, 85337, 107014, 128867, 150921, 173149, 195551, 218072, 240115, 263343, 285989, 308563, 331033, 353350, 375494, 397447, 419210, 440795, 462224, 483532, 504758);\n    var solarTerm = new Array(\"小寒\", \"大寒\", \"立春\", \"雨水\", \"惊蛰\", \"春分\", \"清明\", \"谷雨\", \"立夏\", \"小满\", \"芒种\", \"夏至\", \"小暑\", \"大暑\", \"立秋\", \"处暑\", \"白露\", \"秋分\", \"寒露\", \"霜降\", \"立冬\", \"小雪\", \"大雪\", \"冬至\");\n    var date = new Date((31556925974.7 * (year - 1900) + termInfo[index] * 60000) + Date.UTC(1900, 0, 6, 2, 5));\n    return date;\n}\n\nfunction removeItemOnce(arr, value) {\n    var index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n    }\n    return arr;\n}\n\nconst isHarmGone = (empty, grave, harm, bik, tin_gone, floor_gone) => {\n    let harms = empty || grave || harm || bik;\n    let theif_gok = theifs(tin_gone, floor_gone)\n    return harms || theif_gok\n}\n\nconst nearestDates = (d) => {\n    let dates = Array()\n    let now = new Date()\n    now.setHours(0)\n    now.setMinutes(0)\n    now.setSeconds(0)\n\n    let orig_d = d\n    let past = (now.getTime() - orig_d.toDate().getTime()) / (1000 * 3600 * 24) >= 9\n    let limit = past ? 30 : 30\n    if (past)\n        orig_d = lunisolar(now)\n\n    for (let i = 0; i < limit; i++) {\n        try {\n            let temp_d = orig_d.add(i, 'd')\n\n            let _gone = -1\n            gone_chi.forEach((g) => { if (g.chi.indexOf(temp_d.char8.day.branch.toString()) > -1) _gone = g.gone })\n\n            let temp_d_obj = temp_d.toDate()\n            temp_d_obj.setHours(0)\n            temp_d_obj.setMinutes(0)\n            temp_d_obj.setSeconds(0)\n            let orig_d_obj = orig_d.toDate()\n            orig_d_obj.setHours(0)\n            orig_d_obj.setMinutes(0)\n            orig_d_obj.setSeconds(0)\n\n            dates.push({\n                gone: _gone,\n                lunar_day_chi: temp_d.char8.day.branch.toString(),\n                date: temp_d.format('YYYY/MM/DD'),\n                best_before_date: (temp_d_obj.getTime() - orig_d_obj.getTime()) / (1000 * 3600 * 24) < 9 ? true : false,\n                yin_yang: floor12_str.indexOf(temp_d.char8.day.branch.toString()) % 2 == 0 ? '陽' : '陰',\n                animal: floor12_animarl[floor12_str.indexOf(temp_d.char8.day.branch.toString())],\n                past: past\n            })\n        } catch (error) {\n\n        }\n    }\n\n    return dates\n}\n\nconst findSameGone = (char8, d, yinyang) => {\n    let _set = new Set()\n    if (char8.year !== \"\" && char8.month !== \"\" && char8.day !== \"\" && char8.time !== \"\") {\n        let _year = char8['year'][0]\n        let _month = char8['month'][0]\n        let _day = char8['day'][0]\n        let _time = char8['time'][0]\n\n        let gok = find_gok(char8['year'][1], char8['month'][1], d.toDate().getHours() >= 23 ? lunisolar(new Date(d.toDate().getTime() + 3600000)).lunar.day : d.lunar.day, char8['time'][1])\n        let empty_and_chun = find_empty_and_chun(char8['time']);\n        let chun_gone = empty_and_chun['chun_gone']\n        let door_and_star = find_door_and_star(floor_tin_gone(gok, yinyang), chun_gone)\n        let floor_tin_gone_seq = floor_tin_gone(gok, yinyang)\n        let display_floor_tin_gone_array = get_floor_tin_gone_display(floor_tin_gone_seq)\n        let display_star_array = get_star_display(display_floor_tin_gone_array, char8['time'][0], char8['time'][1], door_and_star['star'])\n        let display_tin_tin_gone_array = get_tin_tin_gone_display(display_star_array, display_floor_tin_gone_array)\n\n        let doubleTinGone = \"\"\n\n        display_tin_tin_gone_array.forEach(g => {\n            if (g.length === 2) {\n                doubleTinGone = g\n            }\n        })\n\n        let repeatedCnt = 0\n        let repeatedSet = new Set()\n\n        if (_year === '甲')\n            _year = empty_and_chun['chun_gone']\n        if (_month === '甲')\n            _month = empty_and_chun['chun_gone']\n        if (_day === '甲')\n            _day = empty_and_chun['chun_gone']\n        if (_time === '甲')\n            _time = empty_and_chun['chun_gone']\n\n        if (doubleTinGone.indexOf(_year) > -1) {\n            repeatedCnt++\n            repeatedSet.add('year')\n        }\n        if (doubleTinGone.indexOf(_month) > -1) {\n            repeatedCnt++\n            repeatedSet.add('month')\n        }\n        if (doubleTinGone.indexOf(_day) > -1) {\n            repeatedCnt++\n            repeatedSet.add('day')\n        }\n        if (doubleTinGone.indexOf(_time) > -1) {\n            repeatedCnt++\n            repeatedSet.add('time')\n        }\n\n        if (repeatedCnt++ > 1)\n            repeatedSet.forEach(r => _set.add(r))\n\n        //year\n        if (_year === _month) {\n            _set.add('year')\n            _set.add('month')\n        }\n        if (_year === _day) {\n            _set.add('year')\n            _set.add('day')\n        }\n        if (_year === _time) {\n            _set.add('year')\n            _set.add('time')\n        }\n        //month\n        if (_month === _year) {\n            _set.add('month')\n            _set.add('year')\n        }\n        if (_month === _day) {\n            _set.add('month')\n            _set.add('day')\n        }\n        if (_month === _time) {\n            _set.add('month')\n            _set.add('time')\n        }\n        //day\n        if (_day === _year) {\n            _set.add('day')\n            _set.add('year')\n        }\n        if (_day === _month) {\n            _set.add('day')\n            _set.add('month')\n        }\n        if (_day === _time) {\n            _set.add('day')\n            _set.add('time')\n        }\n        //time\n        if (_time === _year) {\n            _set.add('time')\n            _set.add('year')\n        }\n        if (_time === _month) {\n            _set.add('time')\n            _set.add('month')\n        }\n        if (_time === _day) {\n            _set.add('time')\n            _set.add('day')\n        }\n    }\n\n    return _set\n}\n\nconst mainCalculation = (time_gone, time_chi, time_gone_chi, year_chi, month_chi, day, yinyang) => {\n    let empty_and_chun = find_empty_and_chun(time_gone_chi);\n    let gok = find_gok(year_chi, month_chi, day, time_chi)\n\n\n    let chun_gone = empty_and_chun['chun_gone']\n    let chun_chi = empty_and_chun['chun_chi']\n\n    let empty_gong1 = find_empty_gong(empty_and_chun['empty1'])\n    let empty_gong2 = find_empty_gong(empty_and_chun['empty2'])\n\n    let door_and_star = find_door_and_star(floor_tin_gone(gok, yinyang), chun_gone)\n\n    let floor_tin_gone_seq = floor_tin_gone(gok, yinyang)\n    let display_floor_tin_gone_array = get_floor_tin_gone_display(floor_tin_gone_seq)\n\n    let display_star_array = get_star_display(display_floor_tin_gone_array, time_gone, time_chi, door_and_star['star'])\n    let display_tin_tin_gone_array = get_tin_tin_gone_display(display_star_array, display_floor_tin_gone_array)\n\n    let display_door_array = get_door_display(display_floor_tin_gone_array, chun_gone, chun_chi, time_chi, yinyang, door_and_star['door'])\n\n    let display_sun_array = get_sun_display(display_tin_tin_gone_array, chun_gone, yinyang)\n    let display_floor_sun_array = get_floor_sun_display(display_floor_tin_gone_array, chun_gone, yinyang)\n\n    let horse = find_horse(time_chi)\n\n    let door_gong_idx = 0\n\n    display_door_array.forEach((d, idx) => {\n        if (d == door_and_star['door'])\n            door_gong_idx = idx\n    })\n\n    let yan_gone_array = find_yan_gone(display_tin_tin_gone_array, time_gone, time_chi, display_tin_tin_gone_array[door_gong_idx], chun_gone, yinyang, door_gong_idx)\n\n    let wong_gong = find_wong_gong(month_chi)\n\n    let door_fok = is_door_fok(display_door_array[0], door_seq[0]) ? \"八門伏吟\" : \"\"\n    let gone_fok = is_gone_fok(display_floor_tin_gone_array[0]['primary'], display_tin_tin_gone_array[0]) ? \"天干伏吟\" : \"\"\n    let door_fan = is_door_fan(display_door_array[0], door_seq[4]) ? \"八門反吟\" : \"\"\n    let gone_fan = is_gone_fan(display_floor_tin_gone_array[0]['primary'], display_tin_tin_gone_array[4]) ? \" 天干反吟\" : \"\"\n\n    let fanFok = door_fok || gone_fok || door_fan || gone_fan\n\n    let dataSetObj = {\n        gok: gok,\n        chun_gone: chun_gone,\n        chun_chi: chun_chi,\n        empty_gong1: empty_gong1,\n        empty_gong2: empty_gong2,\n        horse: horse,\n        wong_gong: wong_gong,\n        fanFok: fanFok,\n        door_and_star: door_and_star,\n        display_floor_tin_gone_array: display_floor_tin_gone_array,\n        display_tin_tin_gone_array: display_tin_tin_gone_array,\n        display_sun_array: display_sun_array,\n        display_floor_sun_array: display_floor_sun_array,\n        display_star_array: display_star_array,\n        display_door_array: display_door_array,\n        yan_gone_array: yan_gone_array\n    }\n\n    return dataSetObj\n}\n\nconst find_good_gok = async (d, td) => {\n    let returnSet = new Array()\n\n    while (d.toDate() < td.toDate()) {\n        // for (let i = 0; i < gokCnt; i++) {\n        // if (d.toDate().getHours() % 2 !== 0)\n        //     d = d.add(1, 'h')\n        let _temp_date = d.toDate()\n        _temp_date.setMinutes(0, 0)\n\n        // yyyy-mm-ddTHH:MM\n        let year = \"\" + _temp_date.getFullYear()\n        let month = \"\" + (_temp_date.getMonth() + 1)\n        month = month.padStart(2, '0')\n        let day = \"\" + _temp_date.getDate()\n        day = day.padStart(2, '0')\n        let hour = \"\" + _temp_date.getHours()\n        hour = hour.padStart(2, '0')\n        let min = \"\" + _temp_date.getMinutes()\n        min = min.padStart(2, '0')\n\n        let char8 = {\n            year: d.format('cY cM cD cH').split(\" \")[0],\n            month: d.format('cY cM cD cH').split(\" \")[1],\n            day: d.format('cY cM cD cH').split(\" \")[2],\n            time: d.format('cY cM cD cH').split(\" \")[3]\n        }\n\n        let haziDate = new Date().getTime()\n        let dongziDate = new Date().getTime()\n        let previousZit = new Date().getTime()\n        let currentZit = new Date().getTime()\n\n        let yinyang = 0\n\n        const fetchHazi = async () => {\n            const response = await find_solar_terms_offline(\"夏至\", _temp_date.getFullYear())\n            const _haziDate = response\n            haziDate = _haziDate\n        }\n\n        const fetchDongzi = async () => {\n            const response = await find_solar_terms_offline(\"冬至\", _temp_date.getFullYear())\n            const _dongziDate = response\n            dongziDate = _dongziDate\n        }\n        const fetchCurrentZit = async (datetime) => {\n            const response = await find_current_solar_terms_offline(_temp_date.getMonth(), _temp_date.getFullYear())\n            let first = response['first']\n            let second = response['second']\n            previousZit = first.getTime()\n            currentZit = second.getTime()\n\n        }\n\n\n        await fetchHazi()\n        await fetchDongzi()\n        await fetchCurrentZit(_temp_date)\n\n        if (_temp_date.getTime() < haziDate) {\n            yinyang = 1\n        }\n        else if (_temp_date.getTime() >= dongziDate) {\n            yinyang = 1\n        }\n        else if (_temp_date.getTime() >= haziDate && _temp_date.getTime() < dongziDate) {\n            yinyang = 0\n        }\n\n        let char8_splits = d.format('cY cM cD cH').split(\" \")\n\n        if (\n            roundToNearestMinute(_temp_date).getTime() <= roundToNearestMinute(new Date(currentZit)).getTime()\n        ) {\n            let t_c_splits = char8_splits[1].split(\"\")\n            let year_splits = char8_splits[0].split(\"\")\n\n\n            if (t_c_splits.length == 2) {\n                let gone_idx = tin_gone_10_str.indexOf(t_c_splits[0])\n                let chi_idx = floor12_str.indexOf(t_c_splits[1])\n\n                let new_gone = t_c_splits[0]\n                let new_chi = t_c_splits[1]\n\n                let year_gone_idx = tin_gone_10_str.indexOf(year_splits[0])\n                let year_chi_idx = floor12_str.indexOf(year_splits[1])\n\n                let new_year_gone = year_splits[0]\n                let new_year_chi = year_splits[1]\n\n                let currentZitDate = new Date(currentZit)\n\n                if (\n                    (\n                        _temp_date.getDate() == currentZitDate.getDate() - 1\n                        &&\n                        _temp_date.getHours() >= 23\n                    )\n                    ||\n                    (\n                        _temp_date.getDate() == currentZitDate.getDate()\n                        &&\n                        (\n                            _temp_date.getHours() < currentZitDate.getHours() ||\n                            (_temp_date.getHours() == currentZitDate.getHours() && _temp_date.getMinutes() <= currentZitDate.getMinutes())\n                        )\n                    )\n                ) {\n                    if (gone_idx == 0) {\n                        new_gone = tin_gone_10_str[tin_gone_10_str.length - 1]\n                    }\n                    else {\n                        if (d.lunar.month - 1 != gone_idx)\n                            new_gone = tin_gone_10_str[gone_idx - 1]\n                    }\n\n                    if (chi_idx == 0) {\n                        new_chi = floor12_str[floor12_str.length - 1]\n                    }\n                    else {\n                        if (d.lunar.month - 1 != gone_idx)\n                            new_chi = floor12_str[chi_idx - 1]\n                    }\n                    if (month === \"02\") {\n                        if (year_gone_idx == 0) {\n                            new_year_gone = tin_gone_10_str[tin_gone_10_str.length - 1]\n                        }\n                        else {\n                            if (11 != year_gone_idx)\n                                new_year_gone = tin_gone_10_str[year_gone_idx - 1]\n                        }\n\n                        if (year_chi_idx == 0) {\n                            new_year_chi = floor12_str[floor12_str.length - 1]\n                        }\n                        else {\n                            if (11 != year_gone_idx)\n                                new_year_chi = floor12_str[year_chi_idx - 1]\n                        }\n                    }\n                    char8_splits[0] = new_year_gone + new_year_chi\n                    char8_splits[1] = new_gone + new_chi\n                }\n            }\n\n            char8.year = char8_splits[0]\n            char8.month = char8_splits[1]\n            char8.day = char8_splits[2]\n            char8.time = char8_splits[3]\n        }\n        else {\n            char8.year = char8_splits[0]\n            char8.month = char8_splits[1]\n            char8.day = char8_splits[2]\n            char8.time = char8_splits[3]\n        }\n\n        let year_chi = char8['year'].charAt(1)\n        let month_chi = char8['month'].charAt(1)\n        let lunar_day = _temp_date.getHours() >= 23 ? lunisolar(new Date(_temp_date.getTime() + 3600000)).lunar.day : d.lunar.day\n        let year_gone = char8['year'].charAt(0)\n        let month_gone = char8['month'].charAt(0)\n        let day_gone = char8['day'].charAt(0)\n        let time_gone = d.char8.hour.stem.toString()\n        let time_chi = d.char8.hour.branch.toString()\n\n        let dataSetObj = mainCalculation(time_gone, time_chi, time_gone + time_chi, year_chi, month_chi, lunar_day, yinyang)\n\n        let _idx = -1\n\n        dataSetObj.display_tin_tin_gone_array.forEach((t, idx) => {\n            if (dataSetObj.display_sun_array[idx] === '符' && day_gone === '甲')\n                _idx = idx\n            else if (t.indexOf(day_gone) > -1)\n                _idx = idx\n        })\n\n        // console.log(`_idx=${_idx}`);\n        // console.log(`dataSetObj.display_tin_tin_gone_array=${dataSetObj.display_tin_tin_gone_array}`);\n\n        let empty = dataSetObj.empty_gong1 == door_sun_seq[_idx] || dataSetObj.empty_gong2 == door_sun_seq[_idx]\n        let harm = find_harm(door_sun_seq[_idx], dataSetObj.display_tin_tin_gone_array[_idx], dataSetObj.display_floor_tin_gone_array[_idx]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[_idx]['primary'] : dataSetObj.display_floor_tin_gone_array[_idx]['primary'] + dataSetObj.display_floor_tin_gone_array[_idx]['second'])\n        let grave = find_grave(door_sun_seq[_idx], dataSetObj.display_tin_tin_gone_array[_idx], dataSetObj.display_floor_tin_gone_array[_idx]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[_idx]['primary'] : dataSetObj.display_floor_tin_gone_array[_idx]['primary'] + dataSetObj.display_floor_tin_gone_array[_idx]['second'], dataSetObj.display_sun_array[_idx], dataSetObj.display_floor_sun_array[_idx])\n        let bik = find_bik(door_sun_seq[_idx], dataSetObj.display_door_array[_idx])\n        let tin_tin_gone = dataSetObj.display_tin_tin_gone_array[_idx]\n        let floor_tin_gone = dataSetObj.display_floor_tin_gone_array[_idx]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[_idx]['primary'] : dataSetObj.display_floor_tin_gone_array[_idx]['primary'] + dataSetObj.display_floor_tin_gone_array[_idx]['second']\n\n        let harms = isHarmGone(empty, grave, harm, bik, tin_tin_gone, floor_tin_gone)\n        let fan_or_fok = dataSetObj.fanFok\n        let selected = !harms && fan_or_fok === ''\n\n        // console.log(`empty=${empty} harm=${harm} grave=${grave} bik=${bik} tin_tin_gone=${tin_tin_gone} floor_tin_gone=${floor_tin_gone}`);\n\n        // console.log(`!harms && fan_or_fok === '' =${!harms && fan_or_fok === ''}`);\n\n\n\n        if (selected) {\n            let gong = door_sun_seq[_idx]\n            // console.log(`gong=${gong}`);\n            let filtered = five_elements.filter(f => f.gong.indexOf(gong) > -1)\n            // console.log(`filtered=${JSON.stringify(filtered)}`);\n            let sang_ohs = filtered.length === 1 ? filtered[0].sang_oh_gong : []\n\n            let origin_gong = `${dataSetObj.display_sun_array[_idx]}${dataSetObj.display_star_array[_idx]}${dataSetObj.display_door_array[_idx]} (${dataSetObj.display_tin_tin_gone_array[_idx]}) (${dataSetObj.display_floor_tin_gone_array[_idx]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[_idx]['primary'] : dataSetObj.display_floor_tin_gone_array[_idx]['primary'] + dataSetObj.display_floor_tin_gone_array[_idx]['second']})`\n            let sang_gong = new Array()\n\n            sang_ohs.forEach(s => {\n                let empty = dataSetObj.empty_gong1 == door_sun_seq[door_sun_seq.indexOf(s)] || dataSetObj.empty_gong2 == door_sun_seq[door_sun_seq.indexOf(s)]\n                let harm = find_harm(door_sun_seq[door_sun_seq.indexOf(s)], dataSetObj.display_tin_tin_gone_array[door_sun_seq.indexOf(s)], dataSetObj.display_floor_tin_gone_array[door_sun_seq.indexOf(s)]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[door_sun_seq.indexOf(s)]['primary'] : dataSetObj.display_floor_tin_gone_array[door_sun_seq.indexOf(s)]['primary'] + dataSetObj.display_floor_tin_gone_array[door_sun_seq.indexOf(s)]['second'])\n                let grave = find_grave(door_sun_seq[door_sun_seq.indexOf(s)], dataSetObj.display_tin_tin_gone_array[door_sun_seq.indexOf(s)], dataSetObj.display_floor_tin_gone_array[door_sun_seq.indexOf(s)]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[door_sun_seq.indexOf(s)]['primary'] : dataSetObj.display_floor_tin_gone_array[door_sun_seq.indexOf(s)]['primary'] + dataSetObj.display_floor_tin_gone_array[door_sun_seq.indexOf(s)]['second'], dataSetObj.display_sun_array[door_sun_seq.indexOf(s)], dataSetObj.display_floor_sun_array[door_sun_seq.indexOf(s)])\n                let bik = find_bik(door_sun_seq[door_sun_seq.indexOf(s)], dataSetObj.display_door_array[door_sun_seq.indexOf(s)])\n                let tin_tin_gone = dataSetObj.display_tin_tin_gone_array[door_sun_seq.indexOf(s)]\n                let floor_tin_gone = dataSetObj.display_floor_tin_gone_array[door_sun_seq.indexOf(s)]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[door_sun_seq.indexOf(s)]['primary'] : dataSetObj.display_floor_tin_gone_array[door_sun_seq.indexOf(s)]['primary'] + dataSetObj.display_floor_tin_gone_array[door_sun_seq.indexOf(s)]['second']\n\n                let harms = isHarmGone(empty, grave, harm, bik, tin_tin_gone, floor_tin_gone)\n                if (!harms) {\n                    let sang_oh_remarks = `${dataSetObj.display_sun_array[door_sun_seq.indexOf(s)]}${dataSetObj.display_star_array[door_sun_seq.indexOf(s)]}${dataSetObj.display_door_array[door_sun_seq.indexOf(s)]}(${dataSetObj.display_tin_tin_gone_array[door_sun_seq.indexOf(s)]}) (${dataSetObj.display_floor_tin_gone_array[door_sun_seq.indexOf(s)]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[door_sun_seq.indexOf(s)]['primary'] : dataSetObj.display_floor_tin_gone_array[door_sun_seq.indexOf(s)]['primary'] + dataSetObj.display_floor_tin_gone_array[door_sun_seq.indexOf(s)]['second']})`\n                    let _obj = {\n                        sun: dataSetObj.display_sun_array[door_sun_seq.indexOf(s)],\n                        star: dataSetObj.display_star_array[door_sun_seq.indexOf(s)],\n                        door: dataSetObj.display_door_array[door_sun_seq.indexOf(s)],\n                        tg: dataSetObj.display_tin_tin_gone_array[door_sun_seq.indexOf(s)],\n                        fg: dataSetObj.display_floor_tin_gone_array[door_sun_seq.indexOf(s)]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[door_sun_seq.indexOf(s)]['primary'] : dataSetObj.display_floor_tin_gone_array[door_sun_seq.indexOf(s)]['primary'] + dataSetObj.display_floor_tin_gone_array[door_sun_seq.indexOf(s)]['second'],\n                        remarks: sang_oh_remarks\n                    }\n                    sang_gong.push(_obj)\n                }\n            })\n\n\n            returnSet.push({\n                time: `${year}-${month}-${day}T${hour}:${min}`,\n                sun: dataSetObj.display_sun_array[_idx],\n                star: dataSetObj.display_star_array[_idx],\n                door: dataSetObj.display_door_array[_idx],\n                tg: dataSetObj.display_tin_tin_gone_array[_idx],\n                fg: dataSetObj.display_floor_tin_gone_array[_idx]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[_idx]['primary'] : dataSetObj.display_floor_tin_gone_array[_idx]['primary'] + dataSetObj.display_floor_tin_gone_array[_idx]['second'],\n                remarks: `${origin_gong}`,\n                sang_ohs: sang_gong,\n                cyear: char8.year,\n                cmonth: char8.month,\n                cday: char8.day,\n                ctime: char8.time\n            })\n        }\n        d = d.add(2, 'h') // increase lunar time\n    }\n\n    return returnSet\n}\n\nconst goodGokFiltering = (ggs, searchObj) => {\n\n    let f_origin_sun = searchObj.f_origin_sun\n    let f_origin_star = searchObj.f_origin_star\n    let f_origin_door = searchObj.f_origin_door\n    let f_origin_tg = searchObj.f_origin_tg\n    let f_origin_fg = searchObj.f_origin_fg\n    let f_sang_oh_sun = searchObj.f_sang_oh_sun\n    let f_sang_oh_star = searchObj.f_sang_oh_star\n    let f_sang_oh_door = searchObj.f_sang_oh_door\n    let f_sang_oh_tg = searchObj.f_sang_oh_tg\n    let f_sang_oh_fg = searchObj.f_sang_oh_fg\n    let f_time = searchObj.f_time\n    let f_cyear = searchObj.cyear\n    let f_cmonth = searchObj.cmonth\n    let f_cday = searchObj.cday\n    let f_ctime = searchObj.ctime\n\n    if (\n        f_origin_sun === \"\" &&\n        f_origin_star === \"\" &&\n        f_origin_door === \"\" &&\n        f_origin_tg === \"\" &&\n        f_origin_fg === \"\" &&\n        f_sang_oh_sun === \"\" &&\n        f_sang_oh_star === \"\" &&\n        f_sang_oh_door === \"\" &&\n        f_sang_oh_tg === \"\" &&\n        f_sang_oh_fg === \"\" &&\n        f_time === \"\" &&\n        f_cyear === \"\" &&\n        f_cmonth === \"\" &&\n        f_cday === \"\" &&\n        f_ctime === \"\"\n    )\n        return ggs\n\n    let filtered = ggs.filter(g => {\n        let _valid = true\n\n        if (f_origin_sun !== \"\" && f_origin_sun !== g.sun)\n            _valid = false\n\n        if (f_origin_star !== \"\" && f_origin_star !== g.star)\n            _valid = false\n\n        if (f_origin_door !== \"\" && f_origin_door !== g.door)\n            _valid = false\n\n        if (f_origin_tg !== \"\" && f_origin_tg !== g.tg)\n            _valid = false\n\n        if (f_origin_fg !== \"\" && f_origin_fg !== g.fg)\n            _valid = false\n\n        if (f_cyear !== \"\" && g.cyear.indexOf(f_cyear) < 0)\n            _valid = false\n        if (f_cmonth !== \"\" && g.cmonth.indexOf(f_cmonth) < 0)\n            _valid = false\n        if (f_cday !== \"\" && g.cday.indexOf(f_cday) < 0)\n            _valid = false\n        if (f_ctime !== \"\" && g.ctime.indexOf(f_ctime) < 0)\n            _valid = false\n\n        let sang_oh_filtered = g.sang_ohs.filter(s => {\n            let _valid2 = true\n\n            if (f_sang_oh_sun !== \"\" && f_sang_oh_sun !== s.sun)\n                _valid2 = false\n\n            if (f_sang_oh_star !== \"\" && f_sang_oh_star !== s.star)\n                _valid2 = false\n\n            if (f_sang_oh_door !== \"\" && f_sang_oh_door !== s.door)\n                _valid2 = false\n\n            if (f_sang_oh_tg !== \"\" && f_sang_oh_tg !== s.tg)\n                _valid2 = false\n\n            if (f_sang_oh_fg !== \"\" && f_sang_oh_fg !== s.fg)\n                _valid2 = false\n\n            return _valid2\n        })\n\n        if (f_time !== \"\" && g.time.indexOf(f_time) < 0)\n            _valid = false\n\n        if (f_sang_oh_sun !== \"\" || f_sang_oh_star !== \"\" || f_sang_oh_door !== \"\" || f_sang_oh_tg !== \"\" || f_sang_oh_fg !== \"\")\n            if (sang_oh_filtered.length === 0)\n                _valid = false\n\n        if (\n            _valid\n        )\n            return g\n    })\n\n    return filtered\n}\n\nconst savedGokFiltering = (sgs, filterKeyWords, savedRemarks) => {\n    let filtered = new Array()\n    sgs.forEach((g, idx) => {\n        filtered.push({ time: g, remarks: savedRemarks[idx] })\n    })\n\n    if (filterKeyWords === \"\")\n        return filtered\n\n    filterKeyWords = filterKeyWords.replaceAll(\"(\", \".*\").replaceAll(\")\", \".*\").replaceAll(\" \", \".*\")\n    const re = new RegExp(filterKeyWords, \"g\");\n\n    filtered = filtered.filter((f) => {\n        let t_matches = re.exec(f.time)\n        let r_matches = re.exec(f.remarks.replaceAll(\"(\", \"\").replaceAll(\")\", \"\").replaceAll(\" \", \"\"))\n\n        if (\n            t_matches != null ||\n            r_matches != null\n        )\n            return f\n    })\n\n    return filtered\n}\n\nexport {\n    tin_gone_10_str, floor12_str,\n    tin_gone_seq, star_seq, door_seq, door_sun_seq, sun_seq, gong_seq,\n    find_gok, floor_tin_gone, find_empty_and_chun, find_door_and_star,\n    get_floor_tin_gone_display, get_star_display, get_tin_tin_gone_display, get_door_display, get_sun_display, get_floor_sun_display,\n    find_empty_gong, find_harm, find_grave, find_bik, find_horse, find_yan_gone, find_wong_gong,\n    getSolarTerm, spinL, spinR, removeItemOnce, isHarmGone, spinGone, nearestDates, findSameGone,\n    mainCalculation, find_good_gok, goodGokFiltering, savedGokFiltering\n}","import React from 'react'\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport { isHarmGone } from '../js/main.js'\r\n\r\nexport default function Grid(props) {\r\n    let harms = isHarmGone(props.empty, props.grave, props.harm, props.bik, props.tin_tin_gone, props.floor_tin_gone)\r\n    let goodBadGoneColor = props.goodBadGoneColor\r\n    let goneCSS = props.styleName\r\n\r\n    let remarks = \"\"\r\n\r\n    if (goodBadGoneColor)\r\n        if (harms)\r\n            goneCSS = 'bad_gone'\r\n        else\r\n            goneCSS = 'good_gone'\r\n    if (props.yearGone == props.gone) {\r\n        remarks = '年干'\r\n    }\r\n    else if (props.monthGone == props.gone) {\r\n        remarks = '月干'\r\n    }\r\n    else if (props.dayGone == props.gone) {\r\n        remarks = '日干'\r\n    }\r\n    else if (props.timeGone == props.gone) {\r\n        remarks = '時干'\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={`grid ${goneCSS} ${props.wong ? 'wong_gong' : ''}`} onClick={() => props.updateGakGok(props.gak_gok)}>\r\n            <span className='dis_prop'>{props.empty ? \"空\" : \"\"}</span>\r\n            <span className='dis_prop'>{props.horse ? \"馬\" : \"\"}</span>\r\n            <span></span>\r\n            <span className={`\r\n                water_mark \r\n                ${remarks === '年干' && props.sameGone.has('year') ? 'same_year' : ''}\r\n                ${remarks === '月干' && props.sameGone.has('month') ? 'same_month' : ''}\r\n                ${remarks === '日干' && props.sameGone.has('day') ? 'same_day' : ''}\r\n                ${remarks === '時干' && props.sameGone.has('time') ? 'same_time' : ''}\r\n            `}>{remarks === '' ? props.gone : remarks}</span>\r\n            {/* <span className='wide_grid'>\r\n                <input type='text' className='grid_remarks' onClick={(e)=>{e.preventDefault()}} />\r\n            </span> */}\r\n\r\n            <span className='intro_prop'>{props.yan_gone_pri}</span>\r\n            <span className={\r\n                //main gone\r\n                props.sun === '符' && (\r\n                    props.day_gone === '甲'\r\n                )\r\n                    ?\r\n                    (harms || props.fan_or_fok ? 'harm_main_gone' : 'main_gone') : ''\r\n                        //targets\r\n                        + props.targets.length > 0 && props.targets.indexOf(props.sun) > -1 ? ' targets' : ''\r\n            }\r\n            >{props.sun}</span>\r\n            <span></span>\r\n            <span>{props.floor_sun}</span>\r\n\r\n            <span className='intro_prop'>{props.yan_gone_sec}</span>\r\n            <span className={props.targets.length > 0 && props.targets.indexOf(props.display_star) > -1 ? 'targets' : ''}>{props.display_star}</span>\r\n            <span className='dis_prop'>{props.grave ? \"墓\" : \"\"}</span>\r\n            <span className={\r\n                //main gone\r\n                props.tin_tin_gone.indexOf(props.day_gone) >= 0\r\n                    ?\r\n                    (harms || props.fan_or_fok ? 'harm_main_gone' : 'main_gone') : ''\r\n                        //targets\r\n                        + props.targets.length > 0 && props.targets.indexOf(props.tin_tin_gone) > -1 ? ' targets' : ''\r\n                            + props.targets.length > 0 && props.tin_tin_gone.length === 2 && (props.targets.indexOf(props.tin_tin_gone[0]) > -1 || props.targets.indexOf(props.tin_tin_gone[1]) > -1) ? ' targets' : ''\r\n            }>{props.tin_tin_gone}</span>\r\n\r\n            <span className='dis_prop'>{props.bik ? \"迫\" : \"\"}</span>\r\n            <span className={props.targets.length > 0 && props.targets.indexOf(props.door) > -1 ? 'targets' : ''}>{props.door}</span>\r\n            <span className='dis_prop'>{props.harm ? \"刑\" : \"\"}</span>\r\n            <span>{props.floor_tin_gone}</span>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Grid(props) {\r\n  const chi_int_str = ['一','二','三','四','五','六','七','八','九']\r\n  const chi_int = [1,2,3,4,5,6,7,8,9]\r\n\r\n  return (\r\n    <div className='grid' >\r\n        <span></span>\r\n        <span>{props.yinyang == 0 ? \"阴\":\"阳\"}</span>\r\n        <span>{chi_int_str[chi_int.indexOf(props.gok)]}</span>\r\n        <span>局</span>\r\n\r\n        <span>甲</span>\r\n        <span>{props.chun_chi}</span>\r\n        <span>{props.chun_gone}</span>\r\n        <span>旬</span>\r\n\r\n        <span></span>\r\n        <span>{props.time_gone}</span>\r\n        <span>{props.time_chi}</span>\r\n        <span>時</span>\r\n\r\n        <span>{props.door}</span>\r\n        <span>{props.star}</span>\r\n        <span></span>\r\n        <span>{props.floor_tin_gone}</span>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\nimport Grid from './Grid'\nimport DetailGrid from './DetailGrid'\nimport {\n  tin_gone_seq, star_seq, find_gok, floor_tin_gone, find_empty_and_chun, find_door_and_star,\n  get_floor_tin_gone_display, get_star_display, get_tin_tin_gone_display, get_door_display, get_sun_display, get_floor_sun_display,\n  find_empty_gong, find_harm, find_grave, find_bik, find_horse, find_yan_gone, find_wong_gong, door_seq,\n  spinL, spinR, door_sun_seq,spinGone,\n  mainCalculation\n} from \"../js/main.js\"\n\nimport {\n  is_door_fok, is_gone_fok, is_door_fan, is_gone_fan, find_gak_gok\n} from '../js/notes.js'\n\n\nexport default function GridBoard(props) {\n  let time_gone = props.time_gone\n  let time_chi = props.time_chi\n  let time_gone_chi = time_gone + time_chi\n\n  // let empty_and_chun = find_empty_and_chun(time_gone_chi);\n  // let gok = find_gok(props.year_chi, props.month_chi, props.day, props.time_chi)\n  let yinyang = props.yinyang\n\n\n\n  // let chun_gone = empty_and_chun['chun_gone']\n  // let chun_chi = empty_and_chun['chun_chi']\n\n  // let empty_gong1 = find_empty_gong(empty_and_chun['empty1'])\n  // let empty_gong2 = find_empty_gong(empty_and_chun['empty2'])\n\n  // let door_and_star = find_door_and_star(floor_tin_gone(gok, yinyang), chun_gone)\n\n  // let floor_tin_gone_seq = floor_tin_gone(gok, yinyang)\n  // let display_floor_tin_gone_array = get_floor_tin_gone_display(floor_tin_gone_seq)\n\n  // // \n\n  // let display_star_array = get_star_display(display_floor_tin_gone_array, time_gone, time_chi, door_and_star['star'])\n  // let display_tin_tin_gone_array = get_tin_tin_gone_display(display_star_array, display_floor_tin_gone_array)\n\n  // let display_door_array = get_door_display(display_floor_tin_gone_array, chun_gone, chun_chi, time_chi, yinyang, door_and_star['door'])\n\n  // let display_sun_array = get_sun_display(display_tin_tin_gone_array, chun_gone, yinyang)\n  // let display_floor_sun_array = get_floor_sun_display(display_floor_tin_gone_array, chun_gone, yinyang)\n\n  // let horse = find_horse(time_chi)\n\n  // let door_gong_idx = 0\n\n  // display_door_array.forEach((d, idx) => {\n  //   if (d == door_and_star['door'])\n  //     door_gong_idx = idx\n  // })\n\n\n\n  // let yan_gone_array = find_yan_gone(display_tin_tin_gone_array, time_gone, time_chi, dataSetObj.display_tin_tin_gone_array[door_gong_idx], chun_gone, yinyang, door_gong_idx)\n\n  // let wong_gong = find_wong_gong(props.month_chi)\n\n  // let door_fok = is_door_fok(dataSetObj.display_door_array[0], door_seq[0]) ? \"八門伏吟\" : \"\"\n  // let gone_fok = is_gone_fok(dataSetObj.display_floor_tin_gone_array[0]['primary'], dataSetObj.display_tin_tin_gone_array[0]) ? \"天干伏吟\" : \"\"\n  // let door_fan = is_door_fan(dataSetObj.display_door_array[0], door_seq[4]) ? \"八門反吟\" : \"\"\n  // let gone_fan = is_gone_fan(dataSetObj.display_floor_tin_gone_array[0]['primary'], dataSetObj.display_tin_tin_gone_array[4]) ? \" 天干反吟\" : \"\"\n\n  // let fanFok = door_fok || gone_fok || door_fan || gone_fan\n\n  // let dataSetObj = {\n  //   display_floor_tin_gone_array: display_floor_tin_gone_array,\n  //   display_tin_tin_gone_array: display_tin_tin_gone_array,\n  //   display_sun_array: display_sun_array,\n  //   display_floor_sun_array: display_floor_sun_array,\n  //   display_star_array: display_star_array,\n  //   display_door_array: display_door_array,\n  //   yan_gone_array: yan_gone_array\n  // }\n\n  let dataSetObj = mainCalculation(time_gone,time_chi,time_gone_chi,props.year_chi, props.month_chi, props.day,props.yinyang)\n\n  const updateDataSet = (obj) => {\n    dataSetObj.display_floor_tin_gone_array = obj.display_floor_tin_gone_array\n    dataSetObj.display_tin_tin_gone_array = obj.display_tin_tin_gone_array\n    dataSetObj.display_sun_array = obj.display_sun_array\n    dataSetObj.display_floor_sun_array = obj.display_floor_sun_array\n    dataSetObj.display_star_array = obj.display_star_array\n    dataSetObj.display_door_array = obj.display_door_array\n    dataSetObj.yan_gone_array = obj.yan_gone_array\n  }\n\n  if (!props.spin) {\n    props.initOriginalGridDataSet(dataSetObj)\n    updateDataSet(dataSetObj)\n\n  }\n  else {\n    if (props.spinLeftValue > 0 || props.spinRightValue > 0) {\n      if (props.spinLeftValue > 0) {\n        let dataSet = spinL(dataSetObj, props.spinLeftValue)\n        updateDataSet(dataSet)\n      }\n      else if (props.spinRightValue > 0) {\n        let dataSet = spinR(dataSetObj, props.spinRightValue)\n        updateDataSet(dataSet)\n      }\n    }\n    else {\n\n      updateDataSet(dataSetObj)\n    }\n  }\n\n  const gak_gok = find_gak_gok(dataSetObj.display_floor_tin_gone_array, dataSetObj.display_tin_tin_gone_array, door_sun_seq)\n\n  const gone_seq = spinGone(props.spinLeftValue,props.spinRightValue)\n\n  return (\n    <div className='grid_board'>\n      <Grid styleName='blue_grid' floor_tin_gone={dataSetObj.display_floor_tin_gone_array[3]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[3]['primary'] : dataSetObj.display_floor_tin_gone_array[3]['primary'] + dataSetObj.display_floor_tin_gone_array[3]['second']}\n        tin_tin_gone={dataSetObj.display_tin_tin_gone_array[3]}\n        sun={dataSetObj.display_sun_array[3]}\n        floor_sun={dataSetObj.display_floor_sun_array[3]}\n        display_star={dataSetObj.display_star_array[3]}\n        door={dataSetObj.display_door_array[3]}\n        empty={dataSetObj.empty_gong1 == 4 || dataSetObj.empty_gong2 == 4}\n        harm={find_harm(4, dataSetObj.display_tin_tin_gone_array[3], dataSetObj.display_floor_tin_gone_array[3]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[3]['primary'] : dataSetObj.display_floor_tin_gone_array[3]['primary'] + dataSetObj.display_floor_tin_gone_array[3]['second'])}\n        grave={find_grave(4, dataSetObj.display_tin_tin_gone_array[3], dataSetObj.display_floor_tin_gone_array[3]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[3]['primary'] : dataSetObj.display_floor_tin_gone_array[3]['primary'] + dataSetObj.display_floor_tin_gone_array[3]['second'], dataSetObj.display_sun_array[3], dataSetObj.display_floor_sun_array[3])}\n        bik={find_bik(4, dataSetObj.display_door_array[3])}\n        horse={dataSetObj.horse == 4}\n        yan_gone_pri={dataSetObj.yan_gone_array[3]['primary']}\n        yan_gone_sec={dataSetObj.yan_gone_array[3]['second']}\n        wong={dataSetObj.wong_gong.indexOf(4) > -1}\n        year_gone={props.year_gone}\n        month_gone={props.month_gone}\n        day_gone={props.day_gone}\n        time_gone={props.time_gone}\n        fan_or_fok={dataSetObj.fanFok}\n        targets={props.targets}\n        goodBadGoneColor={props.goodBadGoneColor}\n        gak_gok={gak_gok[3]}\n        updateGakGok={props.updateGakGok}\n        yearGone={props.yearGone}\n        monthGone={props.monthGone}\n        dayGone={props.dayGone}\n        timeGone={props.timeGone}\n        sameGone={props.sameGone}\n        gone={gone_seq[3]}\n      />\n      <Grid styleName='yellow_grid' floor_tin_gone={dataSetObj.display_floor_tin_gone_array[4]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[4]['primary'] : dataSetObj.display_floor_tin_gone_array[4]['primary'] + dataSetObj.display_floor_tin_gone_array[4]['second']}\n        tin_tin_gone={dataSetObj.display_tin_tin_gone_array[4]}\n        sun={dataSetObj.display_sun_array[4]}\n        floor_sun={dataSetObj.display_floor_sun_array[4]}\n        display_star={dataSetObj.display_star_array[4]}\n        door={dataSetObj.display_door_array[4]}\n        empty={dataSetObj.empty_gong1 == 9 || dataSetObj.empty_gong2 == 9}\n        harm={find_harm(9, dataSetObj.display_tin_tin_gone_array[4], dataSetObj.display_floor_tin_gone_array[4]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[4]['primary'] : dataSetObj.display_floor_tin_gone_array[4]['primary'] + dataSetObj.display_floor_tin_gone_array[4]['second'])}\n        grave={find_grave(9, dataSetObj.display_tin_tin_gone_array[4], dataSetObj.display_floor_tin_gone_array[4]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[4]['primary'] : dataSetObj.display_floor_tin_gone_array[4]['primary'] + dataSetObj.display_floor_tin_gone_array[4]['second'], dataSetObj.display_sun_array[4], dataSetObj.display_floor_sun_array[4])}\n        bik={find_bik(9, dataSetObj.display_door_array[4])}\n        horse={dataSetObj.horse == 9}\n        yan_gone_pri={dataSetObj.yan_gone_array[4]['primary']}\n        yan_gone_sec={dataSetObj.yan_gone_array[4]['second']}\n        wong={dataSetObj.wong_gong.indexOf(9) > -1}\n        year_gone={props.year_gone}\n        month_gone={props.month_gone}\n        day_gone={props.day_gone}\n        time_gone={props.time_gone}\n        fan_or_fok={dataSetObj.fanFok}\n        targets={props.targets}\n        goodBadGoneColor={props.goodBadGoneColor}\n        gak_gok={gak_gok[4]}\n        updateGakGok={props.updateGakGok}\n        yearGone={props.yearGone}\n        monthGone={props.monthGone}\n        dayGone={props.dayGone}\n        timeGone={props.timeGone}\n        sameGone={props.sameGone}\n        gone={gone_seq[4]}\n      />\n      <Grid styleName='blue_grid' floor_tin_gone={dataSetObj.display_floor_tin_gone_array[5]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[5]['primary'] : dataSetObj.display_floor_tin_gone_array[5]['primary'] + dataSetObj.display_floor_tin_gone_array[5]['second']}\n        tin_tin_gone={dataSetObj.display_tin_tin_gone_array[5]}\n        sun={dataSetObj.display_sun_array[5]}\n        floor_sun={dataSetObj.display_floor_sun_array[5]}\n        display_star={dataSetObj.display_star_array[5]}\n        door={dataSetObj.display_door_array[5]}\n        empty={dataSetObj.empty_gong1 == 2 || dataSetObj.empty_gong2 == 2}\n        harm={find_harm(2, dataSetObj.display_tin_tin_gone_array[5], dataSetObj.display_floor_tin_gone_array[5]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[5]['primary'] : dataSetObj.display_floor_tin_gone_array[5]['primary'] + dataSetObj.display_floor_tin_gone_array[5]['second'])}\n        grave={find_grave(2, dataSetObj.display_tin_tin_gone_array[5], dataSetObj.display_floor_tin_gone_array[5]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[5]['primary'] : dataSetObj.display_floor_tin_gone_array[5]['primary'] + dataSetObj.display_floor_tin_gone_array[5]['second'], dataSetObj.display_sun_array[5], dataSetObj.display_floor_sun_array[5])}\n        bik={find_bik(2, dataSetObj.display_door_array[5])}\n        horse={dataSetObj.horse == 2}\n        yan_gone_pri={dataSetObj.yan_gone_array[5]['primary']}\n        yan_gone_sec={dataSetObj.yan_gone_array[5]['second']}\n        wong={dataSetObj.wong_gong.indexOf(2) > -1}\n        year_gone={props.year_gone}\n        month_gone={props.month_gone}\n        day_gone={props.day_gone}\n        time_gone={props.time_gone}\n        fan_or_fok={dataSetObj.fanFok}\n        targets={props.targets}\n        goodBadGoneColor={props.goodBadGoneColor}\n        gak_gok={gak_gok[5]}\n        updateGakGok={props.updateGakGok}\n        yearGone={props.yearGone}\n        monthGone={props.monthGone}\n        dayGone={props.dayGone}\n        timeGone={props.timeGone}\n        sameGone={props.sameGone}\n        gone={gone_seq[5]}\n      />\n      <Grid styleName='yellow_grid' floor_tin_gone={dataSetObj.display_floor_tin_gone_array[2]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[2]['primary'] : dataSetObj.display_floor_tin_gone_array[2]['primary'] + dataSetObj.display_floor_tin_gone_array[2]['second']}\n        tin_tin_gone={dataSetObj.display_tin_tin_gone_array[2]}\n        sun={dataSetObj.display_sun_array[2]}\n        floor_sun={dataSetObj.display_floor_sun_array[2]}\n        display_star={dataSetObj.display_star_array[2]}\n        door={dataSetObj.display_door_array[2]}\n        empty={dataSetObj.empty_gong1 == 3 || dataSetObj.empty_gong2 == 3}\n        harm={find_harm(3, dataSetObj.display_tin_tin_gone_array[2], dataSetObj.display_floor_tin_gone_array[2]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[2]['primary'] : dataSetObj.display_floor_tin_gone_array[2]['primary'] + dataSetObj.display_floor_tin_gone_array[2]['second'])}\n        grave={find_grave(3, dataSetObj.display_tin_tin_gone_array[2], dataSetObj.display_floor_tin_gone_array[2]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[2]['primary'] : dataSetObj.display_floor_tin_gone_array[2]['primary'] + dataSetObj.display_floor_tin_gone_array[2]['second'], dataSetObj.display_sun_array[2], dataSetObj.display_floor_sun_array[2])}\n        bik={find_bik(3, dataSetObj.display_door_array[2])}\n        horse={dataSetObj.horse == 3}\n        yan_gone_pri={dataSetObj.yan_gone_array[2]['primary']}\n        yan_gone_sec={dataSetObj.yan_gone_array[2]['second']}\n        wong={dataSetObj.wong_gong.indexOf(3) > -1}\n        year_gone={props.year_gone}\n        month_gone={props.month_gone}\n        day_gone={props.day_gone}\n        time_gone={props.time_gone}\n        fan_or_fok={dataSetObj.fanFok}\n        targets={props.targets}\n        goodBadGoneColor={props.goodBadGoneColor}\n        gak_gok={gak_gok[2]}\n        updateGakGok={props.updateGakGok}\n        yearGone={props.yearGone}\n        monthGone={props.monthGone}\n        dayGone={props.dayGone}\n        timeGone={props.timeGone}\n        sameGone={props.sameGone}\n        gone={gone_seq[2]}\n      />\n      <DetailGrid\n        floor_tin_gone={dataSetObj.display_floor_tin_gone_array[8]['primary']}\n        door={dataSetObj.door_and_star['door']}\n        star={dataSetObj.door_and_star['star']}\n        yinyang={yinyang}\n        gok={dataSetObj.gok}\n        chun_chi={dataSetObj.chun_chi}\n        chun_gone={dataSetObj.chun_gone}\n        time_gone={time_gone}\n        time_chi={time_chi}\n      />\n      <Grid styleName='yellow_grid' floor_tin_gone={dataSetObj.display_floor_tin_gone_array[6]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[6]['primary'] : dataSetObj.display_floor_tin_gone_array[6]['primary'] + dataSetObj.display_floor_tin_gone_array[6]['second']}\n        tin_tin_gone={dataSetObj.display_tin_tin_gone_array[6]}\n        sun={dataSetObj.display_sun_array[6]}\n        floor_sun={dataSetObj.display_floor_sun_array[6]}\n        display_star={dataSetObj.display_star_array[6]}\n        door={dataSetObj.display_door_array[6]}\n        empty={dataSetObj.empty_gong1 == 7 || dataSetObj.empty_gong2 == 7}\n        harm={find_harm(7, dataSetObj.display_tin_tin_gone_array[6], dataSetObj.display_floor_tin_gone_array[6]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[6]['primary'] : dataSetObj.display_floor_tin_gone_array[6]['primary'] + dataSetObj.display_floor_tin_gone_array[6]['second'])}\n        grave={find_grave(7, dataSetObj.display_tin_tin_gone_array[6], dataSetObj.display_floor_tin_gone_array[6]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[6]['primary'] : dataSetObj.display_floor_tin_gone_array[6]['primary'] + dataSetObj.display_floor_tin_gone_array[6]['second'], dataSetObj.display_sun_array[6], dataSetObj.display_floor_sun_array[6])}\n        bik={find_bik(7, dataSetObj.display_door_array[6])}\n        horse={dataSetObj.horse == 7}\n        yan_gone_pri={dataSetObj.yan_gone_array[6]['primary']}\n        yan_gone_sec={dataSetObj.yan_gone_array[6]['second']}\n        wong={dataSetObj.wong_gong.indexOf(7) > -1}\n        year_gone={props.year_gone}\n        month_gone={props.month_gone}\n        day_gone={props.day_gone}\n        time_gone={props.time_gone}\n        fan_or_fok={dataSetObj.fanFok}\n        targets={props.targets}\n        goodBadGoneColor={props.goodBadGoneColor}\n        gak_gok={gak_gok[6]}\n        updateGakGok={props.updateGakGok}\n        yearGone={props.yearGone}\n        monthGone={props.monthGone}\n        dayGone={props.dayGone}\n        timeGone={props.timeGone}\n        sameGone={props.sameGone}\n        gone={gone_seq[6]}\n      />\n      <Grid styleName='blue_grid' floor_tin_gone={dataSetObj.display_floor_tin_gone_array[1]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[1]['primary'] : dataSetObj.display_floor_tin_gone_array[1]['primary'] + dataSetObj.display_floor_tin_gone_array[1]['second']}\n        tin_tin_gone={dataSetObj.display_tin_tin_gone_array[1]}\n        sun={dataSetObj.display_sun_array[1]}\n        floor_sun={dataSetObj.display_floor_sun_array[1]}\n        display_star={dataSetObj.display_star_array[1]}\n        door={dataSetObj.display_door_array[1]}\n        empty={dataSetObj.empty_gong1 == 8 || dataSetObj.empty_gong2 == 8}\n        harm={find_harm(8, dataSetObj.display_tin_tin_gone_array[1], dataSetObj.display_floor_tin_gone_array[1]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[1]['primary'] : dataSetObj.display_floor_tin_gone_array[1]['primary'] + dataSetObj.display_floor_tin_gone_array[1]['second'])}\n        grave={find_grave(8, dataSetObj.display_tin_tin_gone_array[1], dataSetObj.display_floor_tin_gone_array[1]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[1]['primary'] : dataSetObj.display_floor_tin_gone_array[1]['primary'] + dataSetObj.display_floor_tin_gone_array[1]['second'], dataSetObj.display_sun_array[1], dataSetObj.display_floor_sun_array[1])}\n        bik={find_bik(8, dataSetObj.display_door_array[1])}\n        horse={dataSetObj.horse == 8}\n        yan_gone_pri={dataSetObj.yan_gone_array[1]['primary']}\n        yan_gone_sec={dataSetObj.yan_gone_array[1]['second']}\n        wong={dataSetObj.wong_gong.indexOf(8) > -1}\n        year_gone={props.year_gone}\n        month_gone={props.month_gone}\n        day_gone={props.day_gone}\n        time_gone={props.time_gone}\n        fan_or_fok={dataSetObj.fanFok}\n        targets={props.targets}\n        goodBadGoneColor={props.goodBadGoneColor}\n        gak_gok={gak_gok[1]}\n        updateGakGok={props.updateGakGok}\n        yearGone={props.yearGone}\n        monthGone={props.monthGone}\n        dayGone={props.dayGone}\n        timeGone={props.timeGone}\n        sameGone={props.sameGone}\n        gone={gone_seq[1]}\n      />\n      <Grid styleName='yellow_grid' floor_tin_gone={dataSetObj.display_floor_tin_gone_array[0]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[0]['primary'] : dataSetObj.display_floor_tin_gone_array[0]['primary'] + dataSetObj.display_floor_tin_gone_array[0]['second']}\n        tin_tin_gone={dataSetObj.display_tin_tin_gone_array[0]}\n        sun={dataSetObj.display_sun_array[0]}\n        floor_sun={dataSetObj.display_floor_sun_array[0]}\n        display_star={dataSetObj.display_star_array[0]}\n        door={dataSetObj.display_door_array[0]}\n        empty={dataSetObj.empty_gong1 == 1 || dataSetObj.empty_gong2 == 1}\n        harm={find_harm(1, dataSetObj.display_tin_tin_gone_array[0], dataSetObj.display_floor_tin_gone_array[0]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[0]['primary'] : dataSetObj.display_floor_tin_gone_array[0]['primary'] + dataSetObj.display_floor_tin_gone_array[0]['second'])}\n        grave={find_grave(1, dataSetObj.display_tin_tin_gone_array[0], dataSetObj.display_floor_tin_gone_array[0]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[0]['primary'] : dataSetObj.display_floor_tin_gone_array[0]['primary'] + dataSetObj.display_floor_tin_gone_array[0]['second'], dataSetObj.display_sun_array[0], dataSetObj.display_floor_sun_array[0])}\n        bik={find_bik(1, dataSetObj.display_door_array[0])}\n        horse={dataSetObj.horse == 1}\n        yan_gone_pri={dataSetObj.yan_gone_array[0]['primary']}\n        yan_gone_sec={dataSetObj.yan_gone_array[0]['second']}\n        wong={dataSetObj.wong_gong.indexOf(1) > -1}\n        year_gone={props.year_gone}\n        month_gone={props.month_gone}\n        day_gone={props.day_gone}\n        time_gone={props.time_gone}\n        fan_or_fok={dataSetObj.fanFok}\n        targets={props.targets}\n        goodBadGoneColor={props.goodBadGoneColor}\n        gak_gok={gak_gok[0]}\n        updateGakGok={props.updateGakGok}\n        yearGone={props.yearGone}\n        monthGone={props.monthGone}\n        dayGone={props.dayGone}\n        timeGone={props.timeGone}\n        sameGone={props.sameGone}\n        gone={gone_seq[0]}\n      />\n      <Grid styleName='blue_grid' floor_tin_gone={dataSetObj.display_floor_tin_gone_array[7]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[7]['primary'] : dataSetObj.display_floor_tin_gone_array[7]['primary'] + dataSetObj.display_floor_tin_gone_array[7]['second']}\n        tin_tin_gone={dataSetObj.display_tin_tin_gone_array[7]}\n        sun={dataSetObj.display_sun_array[7]}\n        floor_sun={dataSetObj.display_floor_sun_array[7]}\n        display_star={dataSetObj.display_star_array[7]}\n        door={dataSetObj.display_door_array[7]}\n        empty={dataSetObj.empty_gong1 == 6 || dataSetObj.empty_gong2 == 6}\n        harm={find_harm(6, dataSetObj.display_tin_tin_gone_array[7], dataSetObj.display_floor_tin_gone_array[7]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[7]['primary'] : dataSetObj.display_floor_tin_gone_array[7]['primary'] + dataSetObj.display_floor_tin_gone_array[7]['second'])}\n        grave={find_grave(6, dataSetObj.display_tin_tin_gone_array[7], dataSetObj.display_floor_tin_gone_array[7]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[7]['primary'] : dataSetObj.display_floor_tin_gone_array[7]['primary'] + dataSetObj.display_floor_tin_gone_array[7]['second'], dataSetObj.display_sun_array[7], dataSetObj.display_floor_sun_array[7])}\n        bik={find_bik(6, dataSetObj.display_door_array[7])}\n        horse={dataSetObj.horse == 6}\n        yan_gone_pri={dataSetObj.yan_gone_array[7]['primary']}\n        yan_gone_sec={dataSetObj.yan_gone_array[7]['second']}\n        wong={dataSetObj.wong_gong.indexOf(6) > -1}\n        year_gone={props.year_gone}\n        month_gone={props.month_gone}\n        day_gone={props.day_gone}\n        time_gone={props.time_gone}\n        fan_or_fok={dataSetObj.fanFok}\n        targets={props.targets}\n        goodBadGoneColor={props.goodBadGoneColor}\n        gak_gok={gak_gok[7]}\n        updateGakGok={props.updateGakGok}\n        yearGone={props.yearGone}\n        monthGone={props.monthGone}\n        dayGone={props.dayGone}\n        timeGone={props.timeGone}\n        sameGone={props.sameGone}\n        gone={gone_seq[7]}\n      />\n\n    </div>\n  )\n}\n","import React from 'react'\r\nimport {\r\n  tin_gone_seq, star_seq, door_seq, door_sun_seq,\r\n  find_gok, floor_tin_gone, find_empty_and_chun, find_door_and_star,\r\n  get_floor_tin_gone_display, get_star_display, get_tin_tin_gone_display, get_door_display, get_sun_display, get_floor_sun_display,\r\n  find_empty_gong, find_harm, find_grave, find_bik, find_horse, find_yan_gone,\r\n  spinL,spinR\r\n} from \"../js/main.js\"\r\n\r\nimport {\r\n  is_door_fok, is_gone_fok, is_door_fan, is_gone_fan, is_tin_gone_conflicts, is_tin_gone_merges,\r\n  is_theif_gok,is_change_gok,is_leave_gok,find_gak_gok\r\n} from '../js/notes.js'\r\n\r\nexport default function Notes(props) {\r\n  let time_gone = props.time_gone\r\n  let time_chi = props.time_chi\r\n  let time_gone_chi = time_gone + time_chi\r\n\r\n  let empty_and_chun = find_empty_and_chun(time_gone_chi);\r\n  let gok = find_gok(props.year_chi, props.month_chi, props.day, props.time_chi)\r\n  let yinyang = props.yinyang\r\n\r\n\r\n\r\n  let chun_gone = empty_and_chun['chun_gone']\r\n  let chun_chi = empty_and_chun['chun_chi']\r\n\r\n  let empty_gong1 = find_empty_gong(empty_and_chun['empty1'])\r\n  let empty_gong2 = find_empty_gong(empty_and_chun['empty2'])\r\n\r\n  let door_and_star = find_door_and_star(floor_tin_gone(gok, yinyang), chun_gone)\r\n\r\n  let floor_tin_gone_seq = floor_tin_gone(gok, yinyang)\r\n  let display_floor_tin_gone_array = get_floor_tin_gone_display(floor_tin_gone_seq)\r\n\r\n  // \r\n\r\n  let display_star_array = get_star_display(display_floor_tin_gone_array, time_gone, time_chi, door_and_star['star'])\r\n  let display_tin_tin_gone_array = get_tin_tin_gone_display(display_star_array, display_floor_tin_gone_array)\r\n\r\n  let display_door_array = get_door_display(display_floor_tin_gone_array, chun_gone, chun_chi, time_chi, yinyang, door_and_star['door'])\r\n\r\n  let display_sun_array = get_sun_display(display_tin_tin_gone_array, chun_gone, yinyang)\r\n  let display_floor_sun_array = get_floor_sun_display(display_floor_tin_gone_array, chun_gone, yinyang)\r\n\r\n  let horse = find_horse(time_chi)\r\n\r\n  let door_gong_idx = 0\r\n\r\n  display_door_array.forEach((d, idx) => {\r\n    if (d == door_and_star['door'])\r\n      door_gong_idx = idx\r\n  })\r\n\r\n\r\n\r\n  let yan_gone_array = find_yan_gone(display_tin_tin_gone_array, time_gone, time_chi, display_tin_tin_gone_array[door_gong_idx], chun_gone, yinyang, door_gong_idx)\r\n\r\n  //for remarks\r\n  let dataSetObj = {\r\n    display_floor_tin_gone_array:display_floor_tin_gone_array,\r\n    display_tin_tin_gone_array:display_tin_tin_gone_array,\r\n    display_sun_array:display_sun_array,\r\n    display_floor_sun_array:display_floor_sun_array,\r\n    display_star_array:display_star_array,\r\n    display_door_array:display_door_array,\r\n    yan_gone_array:yan_gone_array\r\n  }\r\n\r\n  const updateDataSet = (obj) =>{\r\n    display_floor_tin_gone_array=obj.display_floor_tin_gone_array\r\n    display_tin_tin_gone_array=obj.display_tin_tin_gone_array\r\n    display_sun_array=obj.display_sun_array\r\n    display_floor_sun_array=obj.display_floor_sun_array\r\n    display_star_array=obj.display_star_array\r\n    display_door_array=obj.display_door_array\r\n    yan_gone_array=obj.yan_gone_array\r\n  }\r\n\r\n  if(!props.spin){\r\n    props.initOriginalGridDataSet(dataSetObj)\r\n    updateDataSet(dataSetObj)\r\n  }\r\n  else{\r\n    if(props.spinLeftValue > 0 || props.spinRightValue > 0){\r\n      if(props.spinLeftValue > 0){\r\n        updateDataSet(spinL(dataSetObj,props.spinLeftValue))\r\n      }\r\n      else if(props.spinRightValue > 0){\r\n        \r\n        updateDataSet(spinR(dataSetObj,props.spinRightValue))\r\n      }\r\n    }\r\n    else{\r\n      \r\n      updateDataSet(dataSetObj)\r\n    }\r\n  }\r\n  let door_fok = is_door_fok(display_door_array[0], door_seq[0]) ? \"八門伏吟\" : \"\"\r\n\r\n  let gone_fok = is_gone_fok(display_floor_tin_gone_array[0]['primary'], display_tin_tin_gone_array[0]) ? \"天干伏吟\" : \"\"\r\n\r\n  let door_fan = is_door_fan(display_door_array[0], door_seq[4]) ? \"八門反吟\" : \"\"\r\n  let gone_fan = is_gone_fan(display_floor_tin_gone_array[0]['primary'], display_tin_tin_gone_array[4]) ? \" 天干反吟\" : \"\"\r\n\r\n  const notes = [door_fok, gone_fok, door_fan, gone_fan]\r\n  const conflicts = is_tin_gone_conflicts(display_floor_tin_gone_array, display_tin_tin_gone_array, door_sun_seq)\r\n  const merges = is_tin_gone_merges(display_floor_tin_gone_array, display_tin_tin_gone_array, display_sun_array, display_floor_sun_array, door_sun_seq)\r\n  const theifs = is_theif_gok(display_floor_tin_gone_array,display_tin_tin_gone_array,door_sun_seq)\r\n  const changes = is_change_gok(display_floor_tin_gone_array,display_tin_tin_gone_array,door_sun_seq)\r\n  const leaves = is_leave_gok(display_floor_tin_gone_array,display_tin_tin_gone_array,door_sun_seq)\r\n\r\n  return (\r\n    <div className='alert alert-warning'>\r\n      <div className='message'>\r\n        {\r\n          notes.map((n) => {\r\n            if (n != \"\")\r\n              return (\r\n                <span className='harm_notes' key={`notes_${n}`}>{n}</span>\r\n              )\r\n          })\r\n        }\r\n      </div>\r\n      <div className='message'>\r\n        {\r\n          conflicts.map((n) => {\r\n            if (n != \"\")\r\n              return (\r\n                <span key={`conflicts_${n}`}>[{n}] 天干相沖</span>\r\n              )\r\n          })\r\n        }\r\n      </div>\r\n      <div className='message'>\r\n        {\r\n          merges.map((n) => {\r\n            if (n != \"\")\r\n              return (\r\n                <span key={`merges_${n}`}>[{n}] 天干相合</span>\r\n              )\r\n          })\r\n        }\r\n      </div>\r\n      <div className='message'>\r\n        {\r\n          theifs.map((n) => {\r\n            if (n != \"\")\r\n              return (\r\n                <span className='harm_notes' key={`theifs_${n}`}>[{n}] 賊局</span>\r\n              )\r\n          })\r\n        }\r\n      </div>\r\n      <div className='message'>\r\n        {\r\n          changes.map((n) => {\r\n            if (n != \"\")\r\n              return (\r\n                  <span key={`changes_${n}`}>[{n}] 換</span>\r\n              )\r\n          })\r\n        }\r\n      </div>\r\n      <div className='message'>\r\n        {\r\n          leaves.map((n) => {\r\n            if (n != \"\")\r\n              return (\r\n                <span className='harm_notes' key={`leaves_${n}`}>[{n}] 離散</span>\r\n              )\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import logo from './logo.svg';\nimport packageJson from '../package.json';\nimport './App.css';\nimport './css/main.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport { version_info } from './js/version_info.js'\nimport Accordion from 'react-bootstrap/Accordion';\nimport Modal from 'react-bootstrap/Modal';\nimport Alert from 'react-bootstrap/Alert';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport GridBoard from './Component/GridBoard';\nimport Notes from './Component/Notes'\nimport lunisolar from 'lunisolar'\nimport React, { useState, useEffect, useRef } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFilter, faMagnifyingGlass } from '@fortawesome/free-solid-svg-icons'\nimport ReactLoading from 'react-loading';\nimport { tin_gone_10_str, floor12_str, getSolarTerm, door_seq, star_seq, sun_seq, tin_gone_seq, removeItemOnce, gong_seq, nearestDates, findSameGone, find_good_gok, goodGokFiltering, savedGokFiltering } from './js/main.js'\nimport { find_solar_terms, find_current_solar_terms, find_solar_terms_offline, find_current_solar_terms_offline, roundToNearestMinute } from './js/solarTerms.js'\nimport { FormGroup, FormLabel, InputGroup } from 'react-bootstrap';\n\nfunction App() {\n  const yearMin = 1900\n  const yearMax = 2099\n  // const [dateInput, setDateInput] = useState(new Date())\n  const [d, setD] = useState(lunisolar(new Date()))\n  const [yinyang, setYinyang] = useState(1)\n  const [char8, setChar8] = useState(\n    d.toDate().getFullYear() < yearMin || d.toDate().getFullYear() > yearMax ?\n      {\n        year: \"\",\n        month: \"\",\n        day: \"\",\n        time: \"\"\n      }\n      :\n      {\n        year: d.format('cY cM cD cH').split(\" \")[0],\n        month: d.format('cY cM cD cH').split(\" \")[1],\n        day: d.format('cY cM cD cH').split(\" \")[2],\n        time: d.format('cY cM cD cH').split(\" \")[3]\n      })\n\n  let originalDataSetObj = {\n    display_floor_tin_gone_array: [],\n    display_tin_tin_gone_array: [],\n    display_sun_array: [],\n    display_floor_sun_array: [],\n    display_star_array: [],\n    display_door_array: [],\n    yan_gone_array: []\n  }\n\n  const [haziDate, setHaziDate] = useState(new Date())\n  const [dongziDate, setDongziDate] = useState(new Date())\n  const [previousZit, setPreviousZit] = useState(new Date().getTime())\n  const [currentZit, setCurrentZit] = useState(new Date().getTime())\n  const [dateUpdated, setDateUpdated] = useState(false)\n  const [yearUpdated, setYearUpdated] = useState(false)\n  const [fan_or_fok, setFan_or_fok] = useState(false)\n  const [spin, setSpin] = useState(false)\n  const [spinLeftValue, setSpinLeftValue] = useState(0)\n  const [spinRightValue, setSpinRightValue] = useState(0)\n  const [targets, setTargets] = useState([])\n  const [showTargets, setShowTargets] = useState(false)\n  const [goodBadGoneColor, setGoodBadGoneColor] = useState(false)\n  const [selectedGone, setSelectedGone] = useState(-1)\n  const [gakgokDesc, setGakgokDesc] = useState([])\n  const [showModal, setShowModal] = useState(false);\n  const [yearGone, setYearGone] = useState(-1)\n  const [monthGone, setMonthGone] = useState(-1)\n  const [dayGone, setDayGone] = useState(-1)\n  const [timeGone, setTimeGone] = useState(-1)\n  const [savedTime, setSavedTime] = useState(JSON.parse(localStorage.getItem(\"savedTime\")) || [])\n  const [savedRemarks, setSavedRemarks] = useState(JSON.parse(localStorage.getItem(\"savedRemarks\")) || [])\n  const [key, setKey] = useState('main')\n  const [visibleAlert, setVisibleAlert] = useState(false)\n  const [importAlert, setImportAlert] = useState(false)\n  const [removeAllAlert, setRemoveAllAlert] = useState(false)\n  const [showVersionInfo, setShowVersionInfo] = useState(true)\n  const [importError, setImportError] = useState(false)\n  const [searchError, setSearchError] = useState(false)\n  const [sameGone, setSameGone] = useState(new Set())\n  const [goodGok, setGoodGok] = useState([])\n  const [goodGokFiltered, setGoodGokFiltered] = useState([])\n  const [validInput, setValidInput] = useState(true)\n  const [filterKeyWords, setFilterKeyWords] = useState(\"\")\n  const [filterSavedKeyWords, setFilterSavedKeyWords] = useState(\"\")\n  const [showFilterModal, setShowFilterModal] = useState(false)\n  const [searchOriginSun, setSearchOriginSun] = useState(\"\")\n  const [searchOriginStar, setSearchOriginStar] = useState(\"\")\n  const [searchOriginDoor, setSearchOriginDoor] = useState(\"\")\n  const [searchOriginTg, setSearchOriginTg] = useState(\"\")\n  const [searchOriginFg, setSearchOriginFg] = useState(\"\")\n  const [searchSangOhSun, setSearchSangOhSun] = useState(\"\")\n  const [searchSangOhStar, setSearchSangOhStar] = useState(\"\")\n  const [searchSangOhDoor, setSearchSangOhDoor] = useState(\"\")\n  const [searchSangOhTg, setSearchSangOhTg] = useState(\"\")\n  const [searchSangOhFg, setSearchSangOhFg] = useState(\"\")\n  const [searchTime, setSearchTime] = useState(\"\")\n  const [searchCYear, setSearchCYear] = useState(\"\")\n  const [searchCMonth, setSearchCMonth] = useState(\"\")\n  const [searchCDay, setSearchCDay] = useState(\"\")\n  const [searchCTime, setSearchCTime] = useState(\"\")\n\n  const handleClose = () => setShowModal(false);\n  const handleShow = () => setShowModal(true);\n\n  const dateInput = useRef(\"\")\n  const remarksRef = useRef(null)\n  const filterRef = useRef(null)\n  const fileRef = useRef(null)\n  const dayCntsRef = useRef(null)\n  const yearGoneInput = useRef(null)\n  const monthGoneInput = useRef(null)\n  const dayGoneInput = useRef(null)\n  const timeGoneInput = useRef(null)\n  const f_origin_sun = useRef(\"\")\n  const f_origin_star = useRef(\"\")\n  const f_origin_door = useRef(\"\")\n  const f_origin_tg = useRef(\"\")\n  const f_origin_fg = useRef(\"\")\n  const f_sang_oh_sun = useRef(\"\")\n  const f_sang_oh_star = useRef(\"\")\n  const f_sang_oh_door = useRef(\"\")\n  const f_sang_oh_tg = useRef(\"\")\n  const f_sang_oh_fg = useRef(\"\")\n  const f_time = useRef(\"\")\n  const f_cyear = useRef(\"\")\n  const f_cmonth = useRef(\"\")\n  const f_cday = useRef(\"\")\n  const f_ctime = useRef(\"\")\n  const searchFromDateRef = useRef(\"\")\n  const searchToDateRef = useRef(\"\")\n  const [goneDates, setGoneDates] = useState(nearestDates(d))\n\n  const resetFilterGoodGok = () => {\n\n    setSearchOriginSun(\"\")\n    setSearchOriginStar(\"\")\n    setSearchOriginDoor(\"\")\n    setSearchOriginTg(\"\")\n    setSearchOriginFg(\"\")\n    setSearchSangOhSun(\"\")\n    setSearchSangOhStar(\"\")\n    setSearchSangOhDoor(\"\")\n    setSearchSangOhTg(\"\")\n    setSearchSangOhFg(\"\")\n    setSearchTime(\"\")\n    setSearchCYear(\"\")\n    setSearchCMonth(\"\")\n    setSearchCDay(\"\")\n    setSearchCTime(\"\")\n\n    f_origin_sun.current.value = \"\";\n    f_origin_star.current.value = \"\";\n    f_origin_door.current.value = \"\";\n    f_origin_tg.current.value = \"\";\n    f_origin_fg.current.value = \"\";\n    f_sang_oh_sun.current.value = \"\";\n    f_sang_oh_star.current.value = \"\";\n    f_sang_oh_door.current.value = \"\";\n    f_sang_oh_tg.current.value = \"\";\n    f_sang_oh_fg.current.value = \"\";\n    f_cyear.current.value = \"\";\n    f_cmonth.current.value = \"\";\n    f_cday.current.value = \"\";\n    f_ctime.current.value = \"\";\n\n  }\n\n  const filterGoodGok = () => {\n    const origin_sun = f_origin_sun.current.value;\n    const origin_star = f_origin_star.current.value;\n    const origin_door = f_origin_door.current.value;\n    const originTg = f_origin_tg.current.value;\n    const originFg = f_origin_fg.current.value;\n    const sang_oh_sun = f_sang_oh_sun.current.value;\n    const sang_oh_star = f_sang_oh_star.current.value;\n    const sang_oh_door = f_sang_oh_door.current.value;\n    const sang_oh_tg = f_sang_oh_tg.current.value;\n    const sang_oh_fg = f_sang_oh_fg.current.value;\n    const time = f_time.current.value;\n    const cyear = f_cyear.current.value;\n    const cmonth = f_cmonth.current.value;\n    const cday = f_cday.current.value;\n    const ctime = f_ctime.current.value;\n\n\n    setSearchOriginSun(origin_sun)\n    setSearchOriginStar(origin_star)\n    setSearchOriginDoor(origin_door)\n    setSearchOriginTg(originTg)\n    setSearchOriginFg(originFg)\n    setSearchSangOhSun(sang_oh_sun)\n    setSearchSangOhStar(sang_oh_star)\n    setSearchSangOhDoor(sang_oh_door)\n    setSearchSangOhTg(sang_oh_tg)\n    setSearchSangOhFg(sang_oh_fg)\n    setSearchTime(time)\n    setSearchCYear(cyear)\n    setSearchCMonth(cmonth)\n    setSearchCDay(cday)\n    setSearchCTime(ctime)\n\n    let searchObj = {\n      f_origin_sun: origin_sun,\n      f_origin_star: origin_star,\n      f_origin_door: origin_door,\n      f_origin_tg: originTg,\n      f_origin_fg: originFg,\n      f_sang_oh_sun: sang_oh_sun,\n      f_sang_oh_star: sang_oh_star,\n      f_sang_oh_door: sang_oh_door,\n      f_sang_oh_tg: sang_oh_tg,\n      f_sang_oh_fg: sang_oh_fg,\n      f_time: time,\n      cyear: cyear,\n      cmonth: cmonth,\n      cday: cday,\n      ctime: ctime\n    }\n\n    let _goks = goodGokFiltering(goodGok, searchObj)\n    setGoodGokFiltered(_goks)\n    setShowFilterModal(false)\n  }\n\n  const fetchGoodGok = async () => {\n    // let _input = dayCntsRef.current.value\n    let _from = searchFromDateRef.current.value\n    let _to = searchToDateRef.current.value\n\n    if (_from !== \"\" && _to !== \"\" && _to >= _from) {\n      let fromD = new Date(_from)\n      let toD = new Date(_to)\n      fromD.setHours(0, 0, 0)\n      toD.setHours(23, 59, 59)\n\n      if (\n        fromD.getFullYear() >= yearMin && fromD.getFullYear() <= yearMax &&\n        fromD.getFullYear() >= yearMin && fromD.getFullYear() <= yearMax\n      ) {\n        let d = lunisolar(fromD)\n        let td = lunisolar(toD)\n\n        let diffTime = Math.abs(td - d);\n        let diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\n        let gokCnt = diffDays\n\n        const response = await find_good_gok(d, td)\n        const _goodGok = response\n        setGoodGok(_goodGok);\n        setGoodGokFiltered(_goodGok)\n      }\n      else {\n        setSearchError(true)\n      }\n\n    }\n    else {\n      setSearchError(true)\n    }\n  }\n\n  const importButton = (e) => {\n    fileRef.current.click();\n  }\n\n  const showImportModal = (e) => setImportAlert(true)\n  const hideImportModal = (e) => setImportAlert(false)\n  const showRemoveAllModal = (e) => setRemoveAllAlert(true)\n  const hideRemoveAllModal = (e) => setRemoveAllAlert(false)\n\n  const clearAllButton = () => {\n    setGoodGok([])\n    setGoodGokFiltered([])\n    setFilterKeyWords(\"\")\n  }\n\n  const removmAllButton = () => {\n    setSavedTime([])\n    setSavedRemarks([])\n    setFilterSavedKeyWords(\"\")\n    localStorage.setItem(\"savedTime\", JSON.stringify([]));\n    localStorage.setItem(\"savedRemarks\", JSON.stringify([]));\n    hideRemoveAllModal()\n  }\n\n  const exportData = () => {\n    let objArray = []\n    savedTime.forEach((t, idx) => {\n      objArray.push({\n        time: t,\n        remarks: savedRemarks[idx]\n      })\n    });\n\n    const jsonString = `data:text/json;chatset=utf-8,${encodeURIComponent(\n      JSON.stringify(objArray)\n    )}`;\n    const link = document.createElement(\"a\");\n    link.href = jsonString;\n    link.download = \"saved.json\";\n\n    link.click();\n  };\n\n  const exportGoodData = () => {\n    let objArray = []\n    goodGokFiltered.forEach((t) => {\n      let sang_oh = \"\"\n      if (t.sang_ohs.length > 0) {\n        t.sang_ohs.forEach(s => sang_oh += `${s.sun} ${s.star} ${s.door} (${s.tg})(${s.fg}) `)\n        sang_oh += \"生 \"\n      }\n\n\n      objArray.push({\n        time: t.time,\n        remarks: sang_oh + t.remarks\n      })\n    });\n\n    const jsonString = `data:text/json;chatset=utf-8,${encodeURIComponent(\n      JSON.stringify(objArray)\n    )}`;\n    const link = document.createElement(\"a\");\n    link.href = jsonString;\n    link.download = \"催運.json\";\n\n    link.click();\n  };\n\n  const importData = (e) => {\n    const fileReader = new FileReader();\n    fileReader.readAsText(e.target.files[0], \"UTF-8\");\n    fileReader.onload = e => {\n      try {\n        let jsonArray = JSON.parse(e.target.result)\n\n        let t_savedTime = []\n        let t_savedRemarks = []\n\n        jsonArray.forEach(obj => {\n          let t = obj.time\n          let r = obj.remarks\n\n          t_savedTime.push(t)\n          t_savedRemarks.push(r)\n        })\n\n        if (t_savedTime.length > 0) {\n          setSavedTime(t_savedTime)\n          setSavedRemarks(t_savedRemarks)\n          localStorage.setItem(\"savedTime\", JSON.stringify(t_savedTime));\n          localStorage.setItem(\"savedRemarks\", JSON.stringify(t_savedRemarks));\n        }\n      }\n      catch (e) {\n        setImportError(true)\n      }\n    };\n\n    hideImportModal()\n  };\n\n  const saveTimeAlert = () => {\n    setVisibleAlert(true)\n    setTimeout(() => {\n      setVisibleAlert(false)\n    }, 2000);\n  }\n\n  const saveTime = () => {\n    let t = dateInput.current.value\n    let r = remarksRef.current.value\n    if (savedTime.indexOf(t) < 0) {\n      setSavedTime([...savedTime, t])\n      setSavedRemarks([...savedRemarks, r === '' ? \"沒有備註\" : r])\n      saveTimeAlert()\n      localStorage.setItem(\"savedTime\", JSON.stringify([...savedTime, t]));\n      localStorage.setItem(\"savedRemarks\", JSON.stringify([...savedRemarks, r === '' ? \"沒有備註\" : r]));\n    }\n    else {\n      savedRemarks[savedTime.indexOf(t)] = r === '' ? \"沒有備註\" : r\n      setSavedRemarks(savedRemarks)\n      saveTimeAlert()\n      localStorage.setItem(\"savedTime\", JSON.stringify(savedTime));\n      localStorage.setItem(\"savedRemarks\", JSON.stringify(savedRemarks));\n    }\n  }\n\n  const removeTime = (t) => {\n    let temp_array = []\n    let temp_remarks_array = []\n    if (savedTime.length > 1) {\n      let idx = savedTime.indexOf(t)\n      temp_array = removeItemOnce(savedTime, t)\n      temp_remarks_array = removeItemOnce(savedRemarks, savedRemarks[idx])\n      setSavedTime([...temp_array])\n      setSavedRemarks([...temp_remarks_array])\n      localStorage.setItem(\"savedTime\", JSON.stringify([...savedTime]));\n      localStorage.setItem(\"savedRemarks\", JSON.stringify([...savedRemarks]));\n    }\n    else {\n      setSavedTime([])\n      setSavedRemarks([])\n      localStorage.setItem(\"savedTime\", JSON.stringify([]));\n      localStorage.setItem(\"savedRemarks\", JSON.stringify([]));\n    }\n\n  }\n\n  const loadTime = (t, r) => {\n    dateInput.current.value = t\n    remarksRef.current.value = r\n    setD(lunisolar(new Date(t)))\n    updateDateStr()\n\n    setKey('main')\n  }\n\n  const updateGakGok = (gakgok) => {\n    // console.log(`gakgok=${JSON.stringify(gakgok)}`);\n    setSelectedGone(gakgok.seq)\n    setGakgokDesc(gakgok.gakgok)\n    handleShow()\n  }\n\n  const initOriginalGridDataSet = (dataSetObj) => {\n\n    originalDataSetObj = dataSetObj\n  }\n\n  const showHideTargets = (event) => {\n    setShowTargets(!showTargets)\n  }\n\n  const goneColor = (event) => {\n    setGoodBadGoneColor(!goodBadGoneColor)\n  }\n\n  const updateTargets = (event) => {\n    if (targets.indexOf(event.target.text) > -1) {\n      let temp_array = []\n      if (targets.length > 1) {\n        temp_array = removeItemOnce(targets, event.target.text)\n        setTargets([...targets, temp_array])\n      }\n      else\n        setTargets([])\n    }\n    else {\n      setTargets([...targets, event.target.text])\n    }\n    /*\n    if (event.target.checked)\n      setTargets([...targets, event.target.value])\n    else {\n      let temp_array = []\n      if (targets.length > 1) {\n        temp_array = removeItemOnce(targets, event.target.value)\n        setTargets(...temp_array)\n      }\n      else\n        setTargets([])\n    }\n    */\n  }\n\n  const clearTargets = (event) => {\n    setTargets([])\n\n  }\n\n  // yyyy-mm-ddTHH:MM\n  let year = \"\" + d.toDate().getFullYear()\n  let month = \"\" + (d.toDate().getMonth() + 1)\n  month = month.padStart(2, '0')\n  let day = \"\" + d.toDate().getDate()\n  day = day.padStart(2, '0')\n  let hour = \"\" + d.toDate().getHours()\n  hour = hour.padStart(2, '0')\n  let min = \"\" + d.toDate().getMinutes()\n  min = min.padStart(2, '0')\n\n  // const [dateTimeStr, setDateTimeStr] = useState()\n\n\n\n  // var yinyang = 0\n\n  const resetGones = () => {\n    setYearGone(-1)\n    setMonthGone(-1)\n    setDayGone(-1)\n    setTimeGone(-1)\n    yearGoneInput.current.value = -1\n    monthGoneInput.current.value = -1\n    dayGoneInput.current.value = -1\n    timeGoneInput.current.value = -1\n  }\n\n  const updateDateStr = () => {\n    setSelectedGone(-1)\n    setGakgokDesc([])\n    setDateUpdated(false)\n    resetGones()\n\n    year = \"\" + d.toDate().getFullYear()\n    month = \"\" + (d.toDate().getMonth() + 1)\n    month = month.padStart(2, '0')\n    day = \"\" + d.toDate().getDate()\n    day = day.padStart(2, '0')\n    hour = \"\" + d.toDate().getHours()\n    hour = hour.padStart(2, '0')\n    min = \"\" + d.toDate().getMinutes()\n    min = min.padStart(2, '0')\n  }\n\n  const inputChange = (event) => {\n    if (!isNaN(new Date(event.target.value))) {\n      setD(lunisolar(new Date(event.target.value)))\n      updateDateStr()\n    }\n    remarksRef.current.value = \"\"\n  }\n\n  const addDayClick = (event) => {\n    let date = d.toDate()\n    date.setDate(date.getDate() + 1)\n    setD(lunisolar(new Date(date)))\n\n    updateDateStr()\n    remarksRef.current.value = \"\"\n\n  }\n\n  const reduceDayClick = (event) => {\n    let date = d.toDate()\n    date.setDate(date.getDate() - 1)\n    setD(lunisolar(new Date(date)))\n\n    updateDateStr()\n    remarksRef.current.value = \"\"\n\n  }\n\n  const addHourClick = (event) => {\n    let date = d.toDate()\n    if (date.getHours() % 2 == 0) {\n      date.setHours(date.getHours() + 1)\n    }\n    else\n      date.setHours(date.getHours() + 2)\n\n    setD(lunisolar(new Date(date)))\n\n    updateDateStr()\n    remarksRef.current.value = \"\"\n\n  }\n\n  const reduceHourClick = (event) => {\n    let date = d.toDate()\n    if (date.getHours() % 2 == 0) {\n      date.setHours(date.getHours() - 3)\n    }\n    else\n      date.setHours(date.getHours() - 2)\n\n    setD(lunisolar(new Date(date)))\n\n    updateDateStr()\n    remarksRef.current.value = \"\"\n\n  }\n\n  const resetNowClick = (event) => {\n    setD(lunisolar(new Date()))\n    updateDateStr()\n    remarksRef.current.value = \"\"\n  }\n\n  const originalClick = (event) => {\n    setSpin(false)\n    setSpinLeftValue(0)\n    setSpinRightValue(0)\n    setSelectedGone(-1)\n    setGakgokDesc([])\n  }\n\n  const spinLeft = (event) => {\n    setSpin(true)\n    setSpinRightValue(0)\n\n    if (spinLeftValue + 1 >= 8)\n      setSpinLeftValue(0)\n    else\n      setSpinLeftValue(spinLeftValue + 1)\n\n    setSelectedGone(-1)\n    setGakgokDesc([])\n  }\n\n  const spinRight = (event) => {\n    setSpin(true)\n    setSpinLeftValue(0)\n\n    if (spinRightValue + 1 >= 8)\n      setSpinRightValue(0)\n    else\n      setSpinRightValue(spinRightValue + 1)\n\n    setSelectedGone(-1)\n    setGakgokDesc([])\n  }\n\n\n  useEffect(() => {\n    // let haziDate = getSolarTerm(d.toDate().getFullYear(), 11);\n    // let currentZit = getSolarTerm(d.toDate().getFullYear(), (d.toDate().getMonth()) * 2)\n    const fetchHazi = async () => {\n      const response = await find_solar_terms_offline(\"夏至\", d.toDate().getFullYear())\n      // .then((result) => haziDate = new Date(result))\n      const _haziDate = response\n      setHaziDate(_haziDate)\n    }\n\n    const fetchDongzi = async () => {\n      const response = await find_solar_terms_offline(\"冬至\", d.toDate().getFullYear())\n      // .then((result) => haziDate = new Date(result))\n      const _dongziDate = response\n      setDongziDate(_dongziDate)\n    }\n\n    const fetchCurrentZit = async (datetime) => {\n      const response = await find_current_solar_terms_offline(d.toDate().getMonth(), d.toDate().getFullYear())\n      // .then((result) => currentZit = new Date(result))\n      let first = response['first']\n      let second = response['second']\n      // if (roundToNearestMinute(datetime).getTime() >= roundToNearestMinute(first).getTime()) {\n\n      //   setCurrentZit(first.getTime())\n      // }\n\n      setPreviousZit(first.getTime())\n      // if (roundToNearestMinute(datetime).getTime() >= roundToNearestMinute(second).getTime()) {\n      setCurrentZit(second.getTime())\n      // }\n      // \n    }\n\n\n\n    let char8_splits = {}\n    if (d.toDate().getFullYear() >= yearMin && d.toDate().getFullYear() < yearMax) {\n      fetchHazi()\n      fetchDongzi()\n      fetchCurrentZit(d.toDate())\n\n      // let hazi = lunisolar.SolarTerm.findDate(d.toDate().getFullYear(), 9, {})\n      // let haziDate = new Date(hazi[0], hazi[1], hazi[2])\n      // let donzi = lunisolar.SolarTerm.findDate(d.toDate().getFullYear(), 21, {})\n      // let donziDate = new Date(donzi[0], donzi[1], donzi[2])\n      if (d.toDate().getTime() < haziDate) {\n        setYinyang(1)\n      }\n      else if (d.toDate().getTime() >= dongziDate) {\n        setYinyang(1)\n      }\n      else if (d.toDate().getTime() >= haziDate && d.toDate().getTime() < dongziDate) {\n        setYinyang(0)\n      }\n      char8_splits = d.format('cY cM cD cH').split(\" \")\n\n      if (\n        roundToNearestMinute(d.toDate()).getTime() <= roundToNearestMinute(new Date(currentZit)).getTime()\n      ) {\n        let t_c_splits = char8_splits[1].split(\"\")\n        let year_splits = char8_splits[0].split(\"\")\n\n\n        if (t_c_splits.length == 2) {\n          let gone_idx = tin_gone_10_str.indexOf(t_c_splits[0])\n          let chi_idx = floor12_str.indexOf(t_c_splits[1])\n\n          let new_gone = t_c_splits[0]\n          let new_chi = t_c_splits[1]\n\n          let year_gone_idx = tin_gone_10_str.indexOf(year_splits[0])\n          let year_chi_idx = floor12_str.indexOf(year_splits[1])\n\n          let new_year_gone = year_splits[0]\n          let new_year_chi = year_splits[1]\n\n          // if(month === \"01\"){\n          let currentZitDate = new Date(currentZit)\n\n\n          // console.log(`currentZitDate=${currentZitDate}`);\n          // console.log(`d.toDate()=${d.toDate()}`);\n          // console.log(`d.toDate().getDate() = ${d.toDate().getDate()}`);\n          // console.log(`currentZitDate.getDate() = ${currentZitDate.getDate()}`);\n          // console.log(`d.toDate().getHours() = ${d.toDate().getHours()}`);\n          // console.log(`d.toDate().getDate() == currentZitDate.getDate() = ${d.toDate().getDate() == currentZitDate.getDate()}`);\n          // console.log(`d.toDate().getHours() <= currentZitDate.getHours() = ${d.toDate().getHours() <= currentZitDate.getHours()}`);\n          // console.log(`d.toDate().getMinutes() <= currentZitDate.getMinutes() = ${d.toDate().getMinutes() <= currentZitDate.getMinutes()}`);\n          if (\n            (\n              d.toDate().getDate() == currentZitDate.getDate() - 1\n              &&\n              d.toDate().getHours() >= 23\n            )\n            ||\n            (\n              d.toDate().getDate() == currentZitDate.getDate()\n              &&\n              (\n                d.toDate().getHours() < currentZitDate.getHours() ||\n                (d.toDate().getHours() == currentZitDate.getHours() && d.toDate().getMinutes() <= currentZitDate.getMinutes())\n              )\n            )\n          ) {\n            if (gone_idx == 0) {\n              // if (roundToNearestMinute(d.toDate()).getTime() < previousZit)\n              new_gone = tin_gone_10_str[tin_gone_10_str.length - 1]\n            }\n            else {\n              if (d.lunar.month - 1 != gone_idx)\n                new_gone = tin_gone_10_str[gone_idx - 1]\n            }\n\n            if (chi_idx == 0) {\n              // if (roundToNearestMinute(d.toDate()).getTime() < previousZit)\n              new_chi = floor12_str[floor12_str.length - 1]\n            }\n            else {\n              if (d.lunar.month - 1 != gone_idx)\n                new_chi = floor12_str[chi_idx - 1]\n            }\n            // console.log(`month=${month}`);\n            if (month === \"02\") {\n              // console.log(`year_gone_idx=${year_gone_idx} year_chi_idx=${year_chi_idx}`);\n              if (year_gone_idx == 0) {\n                new_year_gone = tin_gone_10_str[tin_gone_10_str.length - 1]\n              }\n              else {\n                if (11 != year_gone_idx)\n                  new_year_gone = tin_gone_10_str[year_gone_idx - 1]\n              }\n\n              if (year_chi_idx == 0) {\n                new_year_chi = floor12_str[floor12_str.length - 1]\n              }\n              else {\n                if (11 != year_gone_idx)\n                  new_year_chi = floor12_str[year_chi_idx - 1]\n              }\n            }\n            // console.log(`new_year_gone=${new_year_gone} new_year_chi=${new_year_chi}`);\n          }\n          // }\n          // else {\n          //     // if(oldMonth !== char8_splits[1]){\n\n          //         if (gone_idx == 0) {\n          //           // if (roundToNearestMinute(d.toDate()).getTime() < previousZit)\n          //             new_gone = tin_gone_10_str[tin_gone_10_str.length - 1]\n          //         }\n          //         else {\n          //           if (d.lunar.month - 1 != gone_idx)\n          //             new_gone = tin_gone_10_str[gone_idx - 1]\n          //         }\n\n          //         if (chi_idx == 0) {\n          //           // if (roundToNearestMinute(d.toDate()).getTime() < previousZit)\n          //             new_chi = floor12_str[floor12_str.length - 1]\n          //         }\n          //         else { \n          //           if (d.lunar.month - 1 != gone_idx)\n          //             new_chi = floor12_str[chi_idx - 1]\n          //         }\n\n\n          //       // }\n\n          //   }\n          char8_splits[0] = new_year_gone + new_year_chi\n          char8_splits[1] = new_gone + new_chi\n\n          setChar8({ year: char8_splits[0], month: char8_splits[1], day: char8_splits[2], time: char8_splits[3] })\n        }\n      }\n      else {\n        setChar8({ year: char8_splits[0], month: char8_splits[1], day: char8_splits[2], time: char8_splits[3] })\n      }\n      setDateUpdated(true)\n      setGoneDates(nearestDates(d))\n\n      setSameGone(findSameGone(char8, d, yinyang))\n    }\n    else {\n      setValidInput(false)\n      setChar8({ year: \"\", month: \"\", day: \"\", time: \"\" })\n    }\n\n\n  }, [d.toDate().getTime(), char8.year, char8.month, char8.day, char8.time, haziDate.getTime(), currentZit, dateUpdated, spinLeftValue, spinRightValue, targets, showTargets, yearGone, monthGone, dayGone, timeGone])\n\n  return (\n    <div className=\"App\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"></meta>\n      <Tabs\n        defaultActiveKey=\"main\"\n        activeKey={key}\n        onSelect={(k) => setKey(k)}\n        id=\"justify-tab-example\"\n        className=\"mb-3 tabPage\"\n        justify\n      >\n        <Tab eventKey=\"main\" title=\"開盤\">\n          <div className='top_message_div'>\n            <Alert variant='warning' dismissible>親愛的師兄弟姐妹們：請緊記一切以師父Excel顯示的為最準確。</Alert>\n          </div>\n          <div className='header_div'>\n            <Container>\n              <Row>\n                <Col xs={3} ><label>本局備註：</label></Col>\n                <Col><input className='form-control' ref={remarksRef} type='text' placeholder='人在/人不在/催財局/etc.' /></Col>\n              </Row>\n              <Row>\n                <Col xs={3}><label>日期 ：</label></Col>\n                <Col><input ref={dateInput} onChange={(e) => inputChange(e)} className='form-control' type=\"datetime-local\" name=\"dateInput\"\n                  value={`${year}-${month}-${day}T${hour}:${min}`}\n                  min={`${yearMin}-01-01T00:00`}\n                  max={`${yearMax}-12-31T23:59`}\n                /></Col>\n              </Row>\n              <Row>\n                <Col>\n                  <div className='button_row'>\n                    <input type='button' className='btn btn-secondary' onClick={(e) => resetNowClick(e)} value=\"現在時間\" />\n                    <input type='button' className='btn btn-secondary' onClick={(e) => originalClick(e)} value=\"原來宮位\" />\n                    <input type='button' className='btn btn-secondary' onClick={(e) => reduceDayClick(e)} value=\"上一日\" />\n                    <input type='button' className='btn btn-secondary' onClick={(e) => addDayClick(e)} value=\"下一日\" />\n                    <input type='button' className='btn btn-secondary' onClick={(e) => reduceHourClick(e)} value=\"上一時辰\" />\n                    <input type='button' className='btn btn-secondary' onClick={(e) => addHourClick(e)} value=\"下一時辰\" />\n                    <input type='button' className='btn btn-secondary' onClick={(e) => spinLeft(e)} value={`順轉 [${spinLeftValue}]`} />\n                    <input type='button' className='btn btn-secondary' onClick={(e) => spinRight(e)} value={`逆轉 [${spinRightValue}]`} />\n                    <input type='button' className={`btn ${showTargets ? 'btn-warning' : 'btn-dark'}`} onClick={showHideTargets} value=\"用神落宮標示\" />\n                    <input type='button' className={`btn ${goodBadGoneColor ? 'btn-warning' : 'btn-dark'}`} onClick={goneColor} value=\"宮位吉凶標示\" />\n                  </div>\n                </Col>\n                <Col>\n                  <div className='char8_day'>\n                    <span className={`char8 ${sameGone.has('year') ? 'same_year' : ''}`}>年 {char8['year']}</span>\n                    <span className={`char8 ${sameGone.has('month') ? 'same_month' : ''}`}>月 {char8['month']}</span>\n                    <span className={`char8 ${sameGone.has('day') ? 'same_day' : ''}`}>日 {char8['day']}</span>\n                    <span className={`char8 ${sameGone.has('time') ? 'same_time' : ''}`}>時 {char8['time']}</span>\n                  </div>\n                  <div className='char8_day'>\n                    <span className='char8 year_gone'>年干 <select ref={yearGoneInput} onChange={(e) => setYearGone(e.target.value)}><option value=\"-1\">請選擇</option>{gong_seq.map(g => <option key={`year_${g}`} value={g}>{g}宮</option>)}</select></span>\n                    <span className='char8 month_gone'>月干 <select ref={monthGoneInput} onChange={(e) => setMonthGone(e.target.value)}><option value=\"-1\">請選擇</option>{gong_seq.map(g => <option key={`month_${g}`} value={g}>{g}宮</option>)}</select></span>\n                    <span className='char8 day_gone'>日干 <select ref={dayGoneInput} onChange={(e) => setDayGone(e.target.value)}><option value=\"-1\">請選擇</option>{gong_seq.map(g => <option key={`day_${g}`} value={g}>{g}宮</option>)}</select></span>\n                    <span className='char8 time_gone'>時干 <select ref={timeGoneInput} onChange={(e) => setTimeGone(e.target.value)}><option value=\"-1\">請選擇</option>{gong_seq.map(g => <option key={`time_${g}`} value={g}>{g}宮</option>)}</select></span>\n                    <br />\n                    <input type='button' className='btn btn-success' onClick={(e) => saveTime()} value={`儲存此局`} />\n                  </div>\n                </Col>\n              </Row>\n            </Container>\n            <div className='targets_div alert alert-warning' style={{ display: showTargets ? '' : 'none' }}>\n              <div className='targets_row'>\n                {\n                  door_seq.map(d => <span className='targets_span'> <a href=\"#!\" key={`door_targets_${d}`} onClick={(e) => updateTargets(e)} className={`btn ${targets.indexOf(d) > -1 ? 'btn-warning' : 'btn-dark'}`}>{d}</a></span>)\n                }\n              </div>\n              <div className='targets_row'>\n                {\n                  star_seq.map(d => <span className='targets_span'> <a href=\"#!\" key={`star_targets_${d}`} onClick={(e) => updateTargets(e)} className={`btn ${targets.indexOf(d) > -1 ? 'btn-warning' : 'btn-dark'}`}>{d}</a></span>)\n                }\n              </div>\n              <div className='targets_row'>\n                {\n                  sun_seq.map(d => <span className='targets_span'> <a href=\"#!\" key={`sun_targets_${d}`} onClick={(e) => updateTargets(e)} className={`btn ${targets.indexOf(d) > -1 ? 'btn-warning' : 'btn-dark'}`}>{d}</a></span>)\n                }\n              </div>\n              <div className='targets_row'>\n                {\n                  tin_gone_seq.map(d => <span className='targets_span'> <a href=\"#!\" key={`tin_gone_targets_${d}`} onClick={(e) => updateTargets(e)} className={`btn ${targets.indexOf(d) > -1 ? 'btn-warning' : 'btn-dark'}`}>{d}</a></span>)\n                }\n              </div>\n            </div>\n          </div>\n          <div className='top_message_div'>\n            <Alert variant='success' show={visibleAlert} >已儲存此局。</Alert>\n            <Alert variant='danger' show={!validInput} onClose={() => setValidInput(true)} dismissible >請輸入正確日期（年份需介乎{`${yearMin} - ${yearMax}`}年之間）。</Alert>\n          </div>\n          {\n            dateUpdated ?\n              <div className='header_div'>\n                <div className='grid_board_div'>\n                  <div className='logo_water_mark'></div>\n                  <GridBoard\n                    year_chi={char8['year'].charAt(1)}\n                    month_chi={char8['month'].charAt(1)}\n                    day={d.toDate().getHours() >= 23 ? lunisolar(new Date(d.toDate().getTime() + 3600000)).lunar.day : d.lunar.day}\n                    year_gone={char8['year'].charAt(0)}\n                    month_gone={char8['month'].charAt(0)}\n                    day_gone={char8['day'].charAt(0)}\n                    time_gone={d.char8.hour.stem.toString()}\n                    time_chi={d.char8.hour.branch.toString()}\n                    yinyang={yinyang}\n                    initOriginalGridDataSet={initOriginalGridDataSet}\n                    originalDataSetObj={originalDataSetObj}\n                    spin={spin}\n                    spinLeftValue={spinLeftValue}\n                    spinRightValue={spinRightValue}\n                    targets={targets}\n                    goodBadGoneColor={goodBadGoneColor}\n                    updateGakGok={updateGakGok}\n                    yearGone={yearGone}\n                    monthGone={monthGone}\n                    dayGone={dayGone}\n                    timeGone={timeGone}\n                    sameGone={sameGone}\n                  />\n                </div>\n                <Modal show={showModal} onHide={handleClose} centered>\n                  <Modal.Header closeButton>\n                    <Modal.Title>宮位資訊[{selectedGone === -1 ? \"請點宮位選擇\" : selectedGone}]</Modal.Title>\n                  </Modal.Header>\n                  <Modal.Body>\n                    <Alert variant='primary'>\n                      <span>{selectedGone === -1 ? \"請點宮位選擇\" : ''}</span>\n                      <Alert.Heading>參考格局</Alert.Heading>\n                      <div className='gakgok'>\n                        {gakgokDesc.map((g) => {\n                          return (\n                            <Row>\n                              <Col xs={4}>\n                                <span className='gakgok_title'>{g.title}<br /> [{g.primary_tin_gone}+{g.secondary_tin_gone}]</span>\n                              </Col>\n                              <Col>\n                                <span className='gakgok_desc'>{g.desc}</span>\n                              </Col>\n                            </Row>\n                          )\n                        })}\n                      </div>\n                    </Alert>\n                    <Alert variant='warning'>\n                      <span>{selectedGone === -1 ? \"請點宮位選擇\" : ''}</span>\n                      <Alert.Heading>未來地支最近日期(30天內)</Alert.Heading>\n                      <div className='gakgok'>\n                        {goneDates.map((g) => {\n                          if (g.gone === selectedGone)\n                            return (\n                              <Row>\n                                <Col xs={3}>\n                                  <span className='gakgok_title'>{g.lunar_day_chi}({g.yin_yang})({g.animal})</span>\n                                </Col>\n                                <Col>\n                                  <Alert variant={`${g.best_before_date && !g.past ? 'success' : 'danger'}`}>\n                                    {g.date}\n                                  </Alert>\n                                </Col>\n                              </Row>\n                            )\n                        })}\n                      </div>\n                    </Alert>\n                    {\n                      d.toDate().getFullYear() < yearMin || d.toDate().getFullYear() > yearMax\n                        ?\n                        <Container></Container>\n                        :\n                        <Alert variant='success'>\n                          <span>{selectedGone === -1 ? \"請點宮位選擇\" : ''}</span>\n                          <Alert.Heading>本局最佳化解日子</Alert.Heading>\n                          <div className='gakgok'>\n                            <Row>\n                              <Col>\n                                <span>{d.toDate().toISOString().split('T')[0].replaceAll('-', '/')} - {new Date(d.toDate().setDate(d.toDate().getDate() + 8)).toISOString().split('T')[0].replaceAll('-', '/')}</span>\n                                {/* <span>{d.format('YYYY/MM/DD')} - {d.add(8, 'd').format('YYYY/MM/DD')}</span> */}\n                              </Col>\n                            </Row>\n                          </div>\n                        </Alert>\n                    }\n\n                  </Modal.Body>\n                </Modal>\n                <Modal show={importAlert} onHide={hideImportModal} centered>\n                  <Modal.Header closeButton>\n                    <Modal.Title>匯入</Modal.Title>\n                  </Modal.Header>\n                  <Modal.Body>\n                    <div className='alert alert-warning'>\n                      <span>從檔案匯入已儲存的局數，會取代現有所有局數。<br />請緊記先匯出需要的局數再匯入。</span>\n                    </div>\n                  </Modal.Body>\n                  <Modal.Footer>\n                    <Button variant='success' onClick={(e) => importButton()}>匯入</Button>\n                    <Button variant='danger' onClick={hideImportModal}>取消</Button>\n                  </Modal.Footer>\n                </Modal>\n                <Modal show={removeAllAlert} onHide={hideRemoveAllModal} centered>\n                  <Modal.Header closeButton>\n                    <Modal.Title>清除全部</Modal.Title>\n                  </Modal.Header>\n                  <Modal.Body>\n                    <div className='alert alert-danger'>\n                      <span>確認清全列表內所有局數。<br />請緊記先匯出需要的局數再匯入。</span>\n                    </div>\n                  </Modal.Body>\n                  <Modal.Footer>\n                    <Button variant='success' onClick={(e) => removmAllButton()}>清除</Button>\n                    <Button variant='danger' onClick={hideRemoveAllModal}>取消</Button>\n                  </Modal.Footer>\n                </Modal>\n                <div className='notes_div'>\n                  <Accordion defaultActiveKey={['0']} alwaysOpen>\n                    <Accordion.Item eventKey=\"0\">\n                      <Accordion.Header>備註</Accordion.Header>\n                      <Accordion.Body>\n                        <Notes\n                          year_chi={char8['year'].charAt(1)}\n                          month_chi={char8['month'].charAt(1)}\n                          day={d.toDate().getHours() >= 23 ? lunisolar(new Date(d.toDate().getTime() + 3600000)).lunar.day : d.lunar.day}\n                          time_gone={d.char8.hour.stem.toString()}\n                          time_chi={d.char8.hour.branch.toString()}\n                          yinyang={yinyang}\n                          initOriginalGridDataSet={initOriginalGridDataSet}\n                          originalDataSetObj={originalDataSetObj}\n                          spin={spin}\n                          spinLeftValue={spinLeftValue}\n                          spinRightValue={spinRightValue}\n                        />\n                      </Accordion.Body>\n                    </Accordion.Item>\n                  </Accordion>\n                </div>\n              </div>\n              :\n              <Container></Container>\n            // <div className='grid_board_div'>\n            //   <ReactLoading type=\"bubbles\" color=\"#000\" height={'200px'} width={'200px'} />\n            // </div>\n          }\n          <Container>\n            <Row>\n              <Col>\n                <span>雲清子奇門陰遁甲課程 輔助開盤程式 v{packageJson.version}</span>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <span>Copyright © 2024 elvischan91 all rights reserved</span>\n              </Col>\n            </Row>\n          </Container>\n          <Modal show={showVersionInfo} onHide={(e) => setShowVersionInfo(false)} centered>\n            <Modal.Header closeButton>版本更新</Modal.Header>\n            <Modal.Body>\n              <Alert variant='success'>\n                {\n                  version_info.map(v => {\n                    return <div>{v.version_number} {v.updates}</div>\n                  })\n                }\n              </Alert>\n            </Modal.Body>\n          </Modal>\n        </Tab>\n        <Tab eventKey=\"saved\" title=\"已儲存局數\">\n          <Alert variant='danger' show={importError} onClose={() => setImportError(false)} dismissible>\n            只接受匯入指定JSON檔。\n          </Alert>\n          <Container>\n            <Row className='savedButtonRow'>\n              <Col xs={3}>\n                <Button variant='success' onClick={(e) => exportData()}>匯出</Button>\n              </Col>\n              <Col>\n                <span>共{savedGokFiltering(savedTime, filterSavedKeyWords, savedRemarks).length}局</span>\n              </Col>\n              <Col xs={3}>\n                <input ref={fileRef} type='file' accept=\"application/JSON\" onChange={(e) => importData(e)} style={{ display: 'none' }} />\n                <Button variant='primary' onClick={(e) => showImportModal(e)}>匯入</Button>\n              </Col>\n            </Row>\n            {\n              savedTime.length == 0 ?\n                \"\" :\n                <Row className='searchRow'>\n                  <Col>\n                    <input type='text' className='form-control' onChange={(e) => setFilterSavedKeyWords(e.target.value)} placeholder='搜尋關鍵字...'></input>\n                  </Col>\n                </Row>\n            }\n            <Row className='tableHeaderRow'>\n              <Col xs={2} className=''></Col>\n              <Col xs={5} className=''>描述</Col>\n              <Col xs={3} className=''>時間</Col>\n              <Col xs={2} className=''></Col>\n            </Row>\n            {\n              savedTime.length == 0 ?\n                <Row><Col>沒有已儲存局數</Col></Row>\n                :\n                savedGokFiltering(savedTime, filterSavedKeyWords, savedRemarks).map((t, idx) => {\n                  return (\n                    <Row className={`savedTimeRow ${idx % 2 === 0 ? 'even_row' : 'odd_row'}`}>\n                      <Col xs={2}>\n                        <Button variant=\"danger\" onClick={(e) => removeTime(t.time)}>移除</Button>\n                      </Col>\n                      <Col xs={5} className='savedTime'>{t.remarks}</Col>\n                      <Col xs={3} className='savedTime'><span>{`${t.time.substr(0, 10)} ${t.time.substr(11, 6)}`}</span>\n                      </Col>\n                      <Col xs={2}><Button variant=\"primary\" onClick={(e) => loadTime(t.time, t.remarks)}>載入</Button></Col>\n                    </Row>\n                  )\n                })\n            }\n            <Row className='savedButtonRow'>\n              <Col>\n                <Button variant='danger' onClick={(e) => setRemoveAllAlert(true)}>清除全部</Button>\n              </Col>\n            </Row>\n\n          </Container>\n\n        </Tab>\n        <Tab eventKey=\"goodGok\" title=\"可催運局數\">\n          <Alert variant='danger' show={searchError} onClose={() => setSearchError(false)} dismissible>\n            只輸入正確日期範圍。\n          </Alert>\n          <Alert variant='danger' show>\n            請注意日干落宮門星神組合自行判斷是否適用於你催運所需。<br />(例：心傷,離散格局也包含在列表中。)\n          </Alert>\n          <Container fluid>\n            <Row className='savedButtonRow'>\n              <Col xs={3}>\n                <Button variant='success' onClick={(e) => exportGoodData()}>匯出</Button>\n              </Col>\n              <Col>\n                <span>共{goodGokFiltered.length}局</span>\n              </Col>\n              <Col xs={4}>\n                <Button variant='danger' onClick={(e) => clearAllButton()}>清除全部</Button>\n              </Col>\n            </Row>\n            <Row className='searchRow'>\n              <InputGroup className=\"\">\n                <Button variant='secondary' onClick={() => setShowFilterModal(true)} disabled={goodGok.length > 0 ? '' : 'disabled'}>\n                  <FontAwesomeIcon icon={faFilter} />\n                </Button>\n                <Form.Control type='date' min={`${yearMin}-01-01`} max={`${yearMax}-12-31`} ref={searchFromDateRef}></Form.Control>\n                <InputGroup.Text id=\"\">至</InputGroup.Text>\n                <Form.Control type='date' min={`${yearMin}-01-01`} max={`${yearMax}-12-31`} ref={searchToDateRef}></Form.Control>\n                <InputGroup.Text id=\"\">吉局</InputGroup.Text>\n                <Button variant='primary' onClick={(e) => fetchGoodGok()}><FontAwesomeIcon icon={faMagnifyingGlass} /></Button>\n              </InputGroup>\n            </Row>\n            <Row className='tableHeaderRow'>\n              <Col xs={2} className=''>本宮</Col>\n              <Col xs={2} className=''>生我</Col>\n              <Col xs={2} className=''>四柱</Col>\n              <Col xs={4} className=''><span>時間</span></Col>\n              <Col xs={1} className=''></Col>\n            </Row>\n            {\n              goodGokFiltered.length == 0 ?\n                <Row><Col>沒有可催運局數</Col></Row>\n                :\n                goodGokFiltered.map((t, idx) => {\n                  return (\n                    <Row className={`tableBodyRow ${idx % 2 === 0 ? 'even_row' : 'odd_row'}`}>\n                      <Col xs={2} className='original_gong'><span>{t.remarks}</span></Col>\n                      <Col xs={2} className='sangs'>{t.sang_ohs.length > 0 ? t.sang_ohs.map((s) => { return (<div className='sang_oh'>{s.remarks}</div>) }) : \"\"}</Col>\n                      <Col xs={2} className=''><span className='year_gone'>{t.cyear}</span><br /><span className='month_gone'>{t.cmonth}</span><br /><span className='day_gone'>{t.cday}</span><br /><span className='time_gone'>{t.ctime}</span></Col>\n                      <Col xs={4} className='savedTime'><span>{`${t.time.substr(0, 10)} ${t.time.substr(11, 6)}`}</span>\n                      </Col>\n                      <Col xs={1}><Button variant=\"primary\" onClick={(e) => loadTime(t.time, t.remarks)}>載入</Button></Col>\n                    </Row>\n\n                  )\n                })\n            }\n            <Modal show={showFilterModal} onHide={() => setShowFilterModal(false)} centered>\n              <Modal.Header closeButton>\n                <Modal.Title>搜尋關鍵字</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <Form>\n                  <Row>\n                    <Form.Label>本宮</Form.Label>\n                    <Form.Group className='mb-3' as={Col}>\n                      <Form.Select ref={f_origin_sun} defaultValue={searchOriginSun}>\n                        <option value=\"\">神</option>\n                        {\n                          sun_seq.map(s => <option value={s}>{s}</option>)\n                        }\n                      </Form.Select>\n                    </Form.Group>\n                    <Form.Group className='mb-3' as={Col}>\n                      <Form.Select ref={f_origin_star} defaultValue={searchOriginStar}>\n                        <option value=\"\">星</option>\n                        {\n                          star_seq.map(s => <option value={s}>{s}</option>)\n                        }\n                      </Form.Select>\n                    </Form.Group>\n                    <Form.Group className='mb-3' as={Col}>\n                      <Form.Select ref={f_origin_door} defaultValue={searchOriginDoor}>\n                        <option value=\"\">門</option>\n                        {\n                          door_seq.map(d => <option value={d}>{d}</option>)\n                        }\n                      </Form.Select>\n                    </Form.Group>\n                  </Row>\n                  <Row>\n                    <Form.Group className='mb-3' as={Col}>\n                      <Form.Select ref={f_origin_tg} defaultValue={searchOriginTg}>\n                        <option value=\"\">天盤干</option>\n                        {\n                          tin_gone_seq.map(t => <option value={t}>{t}</option>)\n                        }\n                      </Form.Select>\n                    </Form.Group>\n                    <Form.Group className='mb-3' as={Col}>\n                      <Form.Select ref={f_origin_fg} defaultValue={searchOriginFg}>\n                        <option value=\"\">地盤干</option>\n                        {\n                          tin_gone_seq.map(t => <option value={t}>{t}</option>)\n                        }\n                      </Form.Select>\n                    </Form.Group>\n                  </Row>\n                  <Row>\n                    <Form.Label>生我宮位</Form.Label>\n                    <Form.Group className='mb-3' as={Col}>\n                      <Form.Select ref={f_sang_oh_sun} defaultValue={searchSangOhSun}>\n                        <option value=\"\">神</option>\n                        {\n                          sun_seq.map(s => <option value={s}>{s}</option>)\n                        }\n                      </Form.Select>\n                    </Form.Group>\n                    <Form.Group className='mb-3' as={Col}>\n                      <Form.Select ref={f_sang_oh_star} defaultValue={searchSangOhStar}>\n                        <option value=\"\">星</option>\n                        {\n                          star_seq.map(s => <option value={s}>{s}</option>)\n                        }\n                      </Form.Select>\n                    </Form.Group>\n                    <Form.Group className='mb-3' as={Col}>\n                      <Form.Select ref={f_sang_oh_door} defaultValue={searchSangOhDoor}>\n                        <option value=\"\">門</option>\n                        {\n                          door_seq.map(d => <option value={d}>{d}</option>)\n                        }\n                      </Form.Select>\n                    </Form.Group>\n                  </Row>\n                  <Row>\n                    <Form.Group className='mb-3' as={Col}>\n                      <Form.Select ref={f_sang_oh_tg} defaultValue={searchSangOhTg}>\n                        <option value=\"\">天盤干</option>\n                        {\n                          tin_gone_seq.map(t => <option value={t}>{t}</option>)\n                        }\n                      </Form.Select>\n                    </Form.Group>\n                    <Form.Group className='mb-3' as={Col}>\n                      <Form.Select ref={f_sang_oh_fg} defaultValue={searchSangOhFg}>\n                        <option value=\"\">地盤干</option>\n                        {\n                          tin_gone_seq.map(t => <option value={t}>{t}</option>)\n                        }\n                      </Form.Select>\n                    </Form.Group>\n                  </Row>\n                  <Row>\n                    <Form.Label>四柱</Form.Label>\n                    <Form.Group className='mb-3' as={Col}>\n                      <Form.Label>年柱</Form.Label>\n                      <Form.Control ref={f_cyear} type='text' maxLength={2} placeholder='甲/辰/甲辰' defaultValue={searchCYear}></Form.Control>\n                    </Form.Group>\n                    <Form.Group className='mb-3' as={Col}>\n                      <Form.Label>月柱</Form.Label>\n                      <Form.Control ref={f_cmonth} type='text' maxLength={2} placeholder='丙/寅/丙寅' defaultValue={searchCMonth}></Form.Control>\n                    </Form.Group>\n                    <Form.Group className='mb-3' as={Col}>\n                      <Form.Label>日柱</Form.Label>\n                      <Form.Control ref={f_cday} type='text' maxLength={2} placeholder='甲/子/甲子' defaultValue={searchCDay}></Form.Control>\n                    </Form.Group>\n                    <Form.Group className='mb-3' as={Col}>\n                      <Form.Label>時柱</Form.Label>\n                      <Form.Control ref={f_ctime} type='text' maxLength={2} placeholder='乙/丑/乙丑' defaultValue={searchCTime}></Form.Control>\n                    </Form.Group>\n                  </Row>\n                  <Form.Group>\n                    <Form.Label>時間</Form.Label>\n                    <Form.Control ref={f_time} type='text' placeholder='e.g.:2024-01-01, 2024, 02-01, etc...' defaultValue={searchTime}></Form.Control>\n                  </Form.Group>\n                </Form>\n              </Modal.Body>\n              <Modal.Footer>\n                <Button variant='primary' onClick={(e) => resetFilterGoodGok()}>重設</Button>\n                <Button variant='success' onClick={(e) => filterGoodGok()}>搜尋</Button>\n                <Button variant='danger' onClick={() => setShowFilterModal(false)}>取消</Button>\n              </Modal.Footer>\n            </Modal>\n\n          </Container>\n\n        </Tab>\n\n      </Tabs>\n\n\n\n    </div >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}