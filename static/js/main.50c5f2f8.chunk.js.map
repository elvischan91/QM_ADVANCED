{"version":3,"sources":["logo.svg","js/version_info.js","js/notes.js","js/main.js","Component/Grid.js","Component/DetailGrid.js","Component/GridBoard.js","Component/Notes.js","js/solarTerms.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","version_info","version_number","updates","conflicts_gone","main","target","merge_gone","gak_gok_81","primary_tin_gone","secondary_tin_gone","title","desc","theif_gok","change_gok","leave_gok","doors_equals","door","door2","gone_equals","gone","gone2","is_door_fok","origin_door","is_gone_fok","is_door_fan","is_gone_fan","theifs","tin_gone","floor_gone","result","indexOf","gakgoks","forEach","g","length","push","is_tin_gone_conflicts","tins","floors","door_sun_seq","t_tin","pop","t","idx","conflicts","c","is_tin_gone_merges","tin_suns","floor_suns","merges","tin_sun","floor_sun","is_change_gok","changes","is_leave_gok","leaves","tin_gone_seq","door_seq","star_seq","sun_seq","gong_seq","floor12_str","floor12_month_str","floor12_int","floor12_animarl","tin_gone_10_str","chun6_seq","chun6_chi_seq","gone_chi","chi","gongs","gong","wong_sheung_gong","gak_time_gone","gak","hill24","harm","grave","sun","bik","horse","horse_gong","find_gok","year_chi","month_chi","day","time_chi","cnt","gok","floor_tin_gone","number","up_down","floor_seq_array","val","find_empty_and_chun","time_gone_chi","end","empty1","empty2","find_chun","find_chun_chi","find_empty_gong","empty","hill","includes","find_harm","harmful","h","find_grave","is_grave","find_bik","is_bik","b","find_horse","chun6","chun6_idx","find_door_and_star","chun","chun_gung_idx","door_sun_seq_idx","get_floor_tin_gone_display","floor_tin_gone_seq","display_floor_tin_gone_array","primary","second","get_star_display","floor_tin_gone_display","time_gone","star","start_gong","tg","star_seq_array","shift_cnb","shiftRight","shiftLeft","get_tin_tin_gone_display","star_display_seq","t_floor_tin_gone_display","start_idx","tin_tin_gone_seq","tin_tin_gone_str_seq","hasOwnProperty","get_door_display","chun_gone","chun_chi","chun_gong","chun_chi_idx","time_chi_idx","door_seq_array","diff","door_start_idx","get_sun_display","display_tin_tin_gone_array","sun_seq_array","t_sun_array","t_tin_tin_gone_array","reverse","get_floor_sun_display","shift_cnt","t_floor_tin_gone_array","find_yan_gone","door_tin_gone","yinyang","door_gong_idx","yan_gone_array","yan_gone_obj_array","shifted_tin_gone_seq","shiftArray","time_gone_idx","y","split","spinR","dataSetObj","n","floor_tin_gone5","temp_floor_tin_gone_array","filter","display_sun_array","display_floor_sun_array","display_star_array","display_door_array","spinL","arr","temp_array","i","temp","shift","concat","splice","removeItemOnce","value","index","nearestDates","d","dates","Array","now","Date","setHours","setMinutes","setSeconds","orig_d","past","getTime","toDate","lunisolar","temp_d","add","_gone","char8","branch","toString","temp_d_obj","orig_d_obj","lunar_day_chi","date","format","best_before_date","yin_yang","animal","Grid","props","harms","isHarmGone","tin_tin_gone","goodBadGoneColor","goneCSS","styleName","remarks","yearGone","monthGone","dayGone","timeGone","React","createElement","className","wong","onClick","updateGakGok","gak_gok","sameGone","has","yan_gone_pri","day_gone","fan_or_fok","targets","yan_gone_sec","display_star","GridBoard","empty_and_chun","empty_gong1","empty_gong2","door_and_star","wong_gong","f","find_wong_gong","door_fok","gone_fok","door_fan","gone_fan","fanFok","updateDataSet","obj","spin","spinLeftValue","spinRightValue","initOriginalGridDataSet","find_gak_gok","seq","gakgok","gone_seq","left","right","spinGone","undefined","year_gone","month_gone","DetailGrid","Notes","notes","is_theif_gok","map","key","find_solar_terms_offline","async","terms","year","data","solar","roundToNearestMinute","Math","round","App","setD","useState","setYinyang","setChar8","month","time","originalDataSetObj","haziDate","setHaziDate","dongziDate","setDongziDate","previousZit","setPreviousZit","currentZit","setCurrentZit","dateUpdated","setDateUpdated","yearUpdated","setYearUpdated","setFan_or_fok","setSpin","setSpinLeftValue","setSpinRightValue","setTargets","showTargets","setShowTargets","setGoodBadGoneColor","selectedGone","setSelectedGone","gakgokDesc","setGakgokDesc","showModal","setShowModal","setYearGone","setMonthGone","setDayGone","setTimeGone","savedTime","setSavedTime","JSON","parse","localStorage","getItem","savedRemarks","setSavedRemarks","setKey","visibleAlert","setVisibleAlert","importAlert","setImportAlert","showVersionInfo","setShowVersionInfo","importError","setImportError","setSameGone","Set","dateInput","useRef","remarksRef","fileRef","yearGoneInput","monthGoneInput","dayGoneInput","timeGoneInput","goneDates","setGoneDates","hideImportModal","e","saveTime","current","r","setTimeout","setItem","stringify","updateTargets","event","text","getFullYear","getMonth","padStart","getDate","hour","getHours","min","getMinutes","updateDateStr","useEffect","response","fetchHazi","fetchDongzi","months","last_year_data","last_year_last_st","array_current_year","t_date","first","find_current_solar_terms_offline","fetchCurrentZit","char8_splits","t_c_splits","year_splits","gone_idx","chi_idx","new_gone","new_chi","year_gone_idx","year_chi_idx","new_year_gone","new_year_chi","currentZitDate","lunar","findSameGone","_set","_year","_month","_day","_time","doubleTinGone","console","log","repeatedCnt","repeatedSet","name","content","Tabs","defaultActiveKey","activeKey","onSelect","k","id","justify","Tab","eventKey","Alert","variant","dismissible","Container","Row","Col","xs","ref","type","placeholder","onChange","inputChange","isNaN","max","setDate","reduceDayClick","addDayClick","reduceHourClick","addHourClick","style","display","href","show","charAt","stem","Modal","onHide","handleClose","centered","Header","closeButton","Title","Body","Heading","Footer","Button","click","Accordion","alwaysOpen","Item","packageJson","version","ReactLoading","color","height","width","v","onClose","exportData","objArray","jsonString","encodeURIComponent","link","document","download","accept","fileReader","FileReader","readAsText","files","onload","jsonArray","t_savedTime","t_savedRemarks","importData","temp_remarks_array","removeTime","substr","loadTime","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.50c5f2f8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","const version_info = [\r\n    { version_number : \"v1.0.6\", updates:\"新增 年月日時干重疊顏色標記\"},\r\n    { version_number : \"v1.0.5\", updates:\"新增 宮位地支 最近三十天化解日期/陰陽/生肖提示\"},\r\n    { version_number : \"v1.0.4\", updates:\"新增 匯入及匯出已儲存局數至JSON檔功能\"},\r\n    { version_number : \"v1.0.3\", updates:\"新增 局數儲存功能\"},\r\n    { version_number : \"v1.0.2\", updates:\"新增 轉宮功能\"},\r\n    { version_number : \"v1.0.1\", updates:\"新增 點選宮位顯示 81天干格局\"},\r\n    { version_number : \"v1.0.0\", updates:\"穩定版本\"}\r\n]\r\n\r\nexport {\r\n    version_info\r\n}","const conflicts_gone = [\r\n    { main: \"辛\", target: [\"乙\", \"戊\"] },\r\n    { main: \"壬\", target: [\"丙\", \"己\"] },\r\n    { main: \"癸\", target: [\"丁\", \"庚\"] }\r\n]\r\n\r\nconst merge_gone = [\r\n    { main: \"符\", target: \"己\" },\r\n    { main: \"乙\", target: \"庚\" },\r\n    { main: \"丙\", target: \"辛\" },\r\n    { main: \"丁\", target: \"壬\" },\r\n    { main: \"戊\", target: \"癸\" },\r\n    { main: \"己\", target: \"符\" },\r\n    { main: \"庚\", target: \"乙\" },\r\n    { main: \"辛\", target: \"丙\" },\r\n    { main: \"壬\", target: \"丁\" },\r\n    { main: \"癸\", target: \"戊\" },\r\n\r\n]\r\n\r\nconst gak_gok_81 = [\r\n    //乙\r\n    { primary_tin_gone: \"乙\", secondary_tin_gone: \"乙\", title: \"日奇伏吟\", desc: \"不宜見貴要求名利，只宜安份守己\" },\r\n    { primary_tin_gone: \"乙\", secondary_tin_gone: \"丙\", title: \"奇儀順遂\", desc: \"吉星升官晉職，凶星反目別離\" },\r\n    { primary_tin_gone: \"乙\", secondary_tin_gone: \"丁\", title: \"奇儀相助\", desc: \"最利文書考試，百事可為\" },\r\n    { primary_tin_gone: \"乙\", secondary_tin_gone: \"戊\", title: \"陰害陽門\", desc: \"利陰人陰事，門吉尚可謀為，門凶迫則破財傷人\" },\r\n    { primary_tin_gone: \"乙\", secondary_tin_gone: \"己\", title: \"日奇入墓\", desc: \"被土暗昧，門凶事必凶，得生門二吉門為地遁\" },\r\n    { primary_tin_gone: \"乙\", secondary_tin_gone: \"庚\", title: \"日奇被刑\", desc: \"為爭訟財產，夫妻懷有私意\" },\r\n    { primary_tin_gone: \"乙\", secondary_tin_gone: \"辛\", title: \"青龍折足\", desc: \"人亡財破，奴僕拐帶，六畜自傷\" },\r\n    { primary_tin_gone: \"乙\", secondary_tin_gone: \"壬\", title: \"日奇入地\", desc: \"尊卑悖亂，官訟是非，有人謀害之事\" },\r\n    { primary_tin_gone: \"乙\", secondary_tin_gone: \"癸\", title: \"華蓋蓬星\", desc: \"遁跡藏形，修仙修道躲災難為吉\" },\r\n    //丙\r\n    { primary_tin_gone: \"丙\", secondary_tin_gone: \"乙\", title: \"日月並行\", desc: \"公私皆為吉\" },\r\n    { primary_tin_gone: \"丙\", secondary_tin_gone: \"丙\", title: \"月奇悖師\", desc: \"文書逼迫，破耗遺失，主單據，証件不明遺失\" },\r\n    { primary_tin_gone: \"丙\", secondary_tin_gone: \"丁\", title: \"星奇朱雀\", desc: \"貴人文書吉利，常人平靜安樂\" },\r\n    { primary_tin_gone: \"丙\", secondary_tin_gone: \"戊\", title: \"飛鳥跌穴\", desc: \"百事吉可謀大事\" },\r\n    { primary_tin_gone: \"丙\", secondary_tin_gone: \"己\", title: \"火悖入刑\", desc: \"囚人刑仗，文書不通，吉門得吉，凶門轉凶\" },\r\n    { primary_tin_gone: \"丙\", secondary_tin_gone: \"庚\", title: \"熒入太白\", desc: \"門戶破敗，盗賊耗失，事業亦凶\" },\r\n    { primary_tin_gone: \"丙\", secondary_tin_gone: \"辛\", title: \"月奇相合\", desc: \"謀事能成，病人不凶\" },\r\n    { primary_tin_gone: \"丙\", secondary_tin_gone: \"壬\", title: \"火入天羅\", desc: \"為客不利，是非多\" },\r\n    { primary_tin_gone: \"丙\", secondary_tin_gone: \"癸\", title: \"華蓋悖師\", desc: \"陰人害事，災禍頻生\" },\r\n    //丁\r\n    { primary_tin_gone: \"丁\", secondary_tin_gone: \"乙\", title: \"人遁吉格\", desc: \"貴人加官晉爵，常人婚姻財帛\" },\r\n    { primary_tin_gone: \"丁\", secondary_tin_gone: \"丙\", title: \"星隨月轉\", desc: \"貴人越級高升，常人樂極生悲\" },\r\n    { primary_tin_gone: \"丁\", secondary_tin_gone: \"丁\", title: \"星奇入太陰\", desc: \"文書証件即至，喜事事從心萬事如意\" },\r\n    { primary_tin_gone: \"丁\", secondary_tin_gone: \"戊\", title: \"青龍轉光\", desc: \"官人升遷，常人威昌\" },\r\n    { primary_tin_gone: \"丁\", secondary_tin_gone: \"己\", title: \"火入勾陳\", desc: \"奸仇冤，事因女人\" },\r\n    { primary_tin_gone: \"丁\", secondary_tin_gone: \"庚\", title: \"文書阻隔\", desc: \"行人必歸\" },\r\n    { primary_tin_gone: \"丁\", secondary_tin_gone: \"辛\", title: \"朱雀入獄\", desc: \"罪人釋囚，官人失位\" },\r\n    { primary_tin_gone: \"丁\", secondary_tin_gone: \"壬\", title: \"貴人恩詔\", desc: \"訟獄公平，測婚多為苟合\" },\r\n    { primary_tin_gone: \"丁\", secondary_tin_gone: \"癸\", title: \"朱雀投江\", desc: \"文書口舌是非，經官動府，詞訟不利，音信沈溺不定\" },\r\n    //戊\r\n    { primary_tin_gone: \"戊\", secondary_tin_gone: \"乙\", title: \"青龍和合\", desc: \"門吉事也吉，門凶事也凶\" },\r\n    { primary_tin_gone: \"戊\", secondary_tin_gone: \"丙\", title: \"青龍回首\", desc: \"為事所謀，大吉大利，若逢墓迫擊刑，吉事也凶\" },\r\n    { primary_tin_gone: \"戊\", secondary_tin_gone: \"丁\", title: \"青龍耀明\", desc: \"宜見貴求名利，若逢墓迫，招惹是非\" },\r\n    { primary_tin_gone: \"戊\", secondary_tin_gone: \"戊\", title: \"雙木成林\", desc: \"甲甲伏吟，凡事不利，道路閉塞，以守為佳\" },\r\n    { primary_tin_gone: \"戊\", secondary_tin_gone: \"己\", title: \"貴人入獄\", desc: \"公私皆不利\" },\r\n    { primary_tin_gone: \"戊\", secondary_tin_gone: \"庚\", title: \"值符飛官\", desc: \"吉事不吉，凶事更凶，求財沒利益，測病也凶\" },\r\n    { primary_tin_gone: \"戊\", secondary_tin_gone: \"辛\", title: \"青龍折足\", desc: \"吉門有幫助，尚可謀事，若逢凶門主招災失財，足疾折傷\" },\r\n    { primary_tin_gone: \"戊\", secondary_tin_gone: \"壬\", title: \"青龍入天牢\", desc: \"凡陰陽事皆不吉利\" },\r\n    { primary_tin_gone: \"戊\", secondary_tin_gone: \"癸\", title: \"青龍華蓋\", desc: \"逢吉門為吉，可招福臨門，逢凶門，事多不利為凶\" },\r\n    //己\r\n    { primary_tin_gone: \"己\", secondary_tin_gone: \"乙\", title: \"地戶逢星\", desc: \"宜遁跡藏刑為利\" },\r\n    { primary_tin_gone: \"己\", secondary_tin_gone: \"丙\", title: \"火悖地戶\", desc: \"男人冤冤相害，女人必致淫污\" },\r\n    { primary_tin_gone: \"己\", secondary_tin_gone: \"丁\", title: \"朱雀入墓\", desc: \"文書詞訟，先曲後直\" },\r\n    { primary_tin_gone: \"己\", secondary_tin_gone: \"戊\", title: \"犬還青龍\", desc: \"門吉為謀望遂意，上人見喜，若門凶，枉費心機\" },\r\n    { primary_tin_gone: \"己\", secondary_tin_gone: \"己\", title: \"地戶逢鬼\", desc: \"病者必發凶或必死，百事不遂暫不為謀，謀則為凶\" },\r\n    { primary_tin_gone: \"己\", secondary_tin_gone: \"庚\", title: \"刑格返名\", desc: \"詞訟先動者不利，如臨陰星，則有謀害之情\" },\r\n    { primary_tin_gone: \"己\", secondary_tin_gone: \"辛\", title: \"游魂入屋\", desc: \"易遭陰邪鬼魅作祟\" },\r\n    { primary_tin_gone: \"己\", secondary_tin_gone: \"壬\", title: \"地網高張\", desc: \"狡童佚女，姦情傷殺凶\" },\r\n    { primary_tin_gone: \"己\", secondary_tin_gone: \"癸\", title: \"地刑玄武\", desc: \"男女疾病重危，有困獄詞訟之災\" },\r\n    //庚\r\n    { primary_tin_gone: \"庚\", secondary_tin_gone: \"乙\", title: \"太白蓬星\", desc: \"退吉進凶，謀為不利\" },\r\n    { primary_tin_gone: \"庚\", secondary_tin_gone: \"丙\", title: \"太白入熒\", desc: \"賊必來，為客進利為主破財\" },\r\n    { primary_tin_gone: \"庚\", secondary_tin_gone: \"丁\", title: \"亭亭之格\", desc: \"因私匿或男女關係主官司是非，門吉有救\" },\r\n    { primary_tin_gone: \"庚\", secondary_tin_gone: \"戊\", title: \"天乙伏宮\", desc: \"百事不可謀，大凶\" },\r\n    { primary_tin_gone: \"庚\", secondary_tin_gone: \"己\", title: \"官符刑格\", desc: \"主有官司又舌，因官訟被判刑，住牢獄更\" },\r\n    { primary_tin_gone: \"庚\", secondary_tin_gone: \"庚\", title: \"戰格\", desc: \"官災橫禍，兄弟朋友相沖，不利為事 戰格，兄弟相爭，朋友相沖，官災橫禍\" },\r\n    { primary_tin_gone: \"庚\", secondary_tin_gone: \"辛\", title: \"白虎干格\", desc: \"不宜遠行，車折馬傷，求財更為大凶\" },\r\n    { primary_tin_gone: \"庚\", secondary_tin_gone: \"壬\", title: \"遠行道路迷失\", desc: \"男女音信難通\" },\r\n    { primary_tin_gone: \"庚\", secondary_tin_gone: \"癸\", title: \"大格\", desc: \"主車禍，行人不致，官事不止，日育母子，俱傷大凶\" },\r\n    //辛\r\n    { primary_tin_gone: \"辛\", secondary_tin_gone: \"乙\", title: \"白虎猖狂\", desc: \"家破人亡，遠行多遭殃，測婚離散，主因男人\" },\r\n    { primary_tin_gone: \"辛\", secondary_tin_gone: \"丙\", title: \"干合悖師\", desc: \"門吉事也吉，門凶事也凶，測事易因財物致訟\" },\r\n    { primary_tin_gone: \"辛\", secondary_tin_gone: \"丁\", title: \"獄神得奇\", desc: \"經商求財獲利倍增，囚人逢天赦釋色\" },\r\n    { primary_tin_gone: \"辛\", secondary_tin_gone: \"戊\", title: \"困龍被傷\", desc: \"主官司破財，屈抑守份尚可，妄動帶來禍\" },\r\n    { primary_tin_gone: \"辛\", secondary_tin_gone: \"己\", title: \"入獄自刑\", desc: \"奴僕背主，有苦訴訟難申\" },\r\n    { primary_tin_gone: \"辛\", secondary_tin_gone: \"庚\", title: \"白虎出力\", desc: \"刀刃相交，主客相戰，遜讓退步稍可，強進血濺衣衫\" },\r\n    { primary_tin_gone: \"辛\", secondary_tin_gone: \"辛\", title: \"伏吟天庭\", desc: \"公廢私就，訟獄自羅罪名\" },\r\n    { primary_tin_gone: \"辛\", secondary_tin_gone: \"壬\", title: \"凶蛇入獄\", desc: \"兩男爭女，訟獄不息，先動失理\" },\r\n    { primary_tin_gone: \"辛\", secondary_tin_gone: \"癸\", title: \"天牢華蓋\", desc: \"日月失明，誤入天網，動止乖張\" },\r\n    //壬\r\n    { primary_tin_gone: \"壬\", secondary_tin_gone: \"乙\", title: \"小蛇得勢\", desc: \"男人通達，女人柔順，測孕育生子，祿馬光華\" },\r\n    { primary_tin_gone: \"壬\", secondary_tin_gone: \"丙\", title: \"水蛇入火\", desc: \"主官災刑禁，絡繹不絕\" },\r\n    { primary_tin_gone: \"壬\", secondary_tin_gone: \"丁\", title: \"干合蛇刑\", desc: \"文書牽連，貴人匆匆，男吉女凶\" },\r\n    { primary_tin_gone: \"壬\", secondary_tin_gone: \"戊\", title: \"小蛇化龍\", desc: \"男人發達，女人產嬰童\" },\r\n    { primary_tin_gone: \"壬\", secondary_tin_gone: \"己\", title: \"反吟蛇刑\", desc: \"官訟敗訴，大禍將至，順守可吉\" },\r\n    { primary_tin_gone: \"壬\", secondary_tin_gone: \"庚\", title: \"太白擒蛇\", desc: \"刑獄公平，立剖邪正\" },\r\n    { primary_tin_gone: \"壬\", secondary_tin_gone: \"辛\", title: \"騰蛇相纏\", desc: \"縱得吉門，亦不能安守，若有謀望，被人欺騙\" },\r\n    { primary_tin_gone: \"壬\", secondary_tin_gone: \"壬\", title: \"蛇入地羅\", desc: \"外人纏繞，內事縈縈，吉門則吉\" },\r\n    { primary_tin_gone: \"壬\", secondary_tin_gone: \"癸\", title: \"幼女奸淫\", desc: \"主有家醜外揚之事發生，門吉星凶易反福為禍\" },\r\n    //癸\r\n    { primary_tin_gone: \"癸\", secondary_tin_gone: \"乙\", title: \"華蓋蓬星\", desc: \"貴人祿位，常人平安，門吉則吉，門凶則凶\" },\r\n    { primary_tin_gone: \"癸\", secondary_tin_gone: \"丙\", title: \"華蓋悖師\", desc: \"貴賤逢之皆不利，唯上人見喜\" },\r\n    { primary_tin_gone: \"癸\", secondary_tin_gone: \"丁\", title: \"騰蛇夭嬌\", desc: \"文書官司，火焚也逃不掉\" },\r\n    { primary_tin_gone: \"癸\", secondary_tin_gone: \"戊\", title: \"天乙會合\", desc: \"吉門宜求財，婚姻喜美，吉人贊助成吉，若門凶則反禍官非\" },\r\n    { primary_tin_gone: \"癸\", secondary_tin_gone: \"己\", title: \"華蓋天牢\", desc: \"男女測之，音信皆阻，此格躲災避難方為吉\" },\r\n    { primary_tin_gone: \"癸\", secondary_tin_gone: \"庚\", title: \"太白入網\", desc: \"主以暴力爭訟，自羅罪責\" },\r\n    { primary_tin_gone: \"癸\", secondary_tin_gone: \"辛\", title: \"網蓋天牢\", desc: \"主官司敗訴，死罪難逃，測病亦大凶\" },\r\n    { primary_tin_gone: \"癸\", secondary_tin_gone: \"壬\", title: \"復見騰蛇\", desc: \"主嫁娶重婚，後嫁無子，不保年華\" },\r\n    { primary_tin_gone: \"癸\", secondary_tin_gone: \"癸\", title: \"天網四張\", desc: \"主行人失伴，病訴皆傷\" },\r\n]\r\n\r\nconst theif_gok = [\"庚\", \"丙\"]\r\nconst change_gok = [\"庚\", \"戊\"]\r\nconst leave_gok = [\"乙\", \"辛\"]\r\n\r\nconst doors_equals = (door, door2) => {\r\n    return door == door2\r\n}\r\n\r\n\r\nconst gone_equals = (gone, gone2) => {\r\n    return gone == gone2\r\n}\r\n\r\nconst is_door_fok = (door, origin_door, gone, gone2) => {\r\n    return doors_equals(door, origin_door)\r\n}\r\n\r\nconst is_gone_fok = (gone, gone2) => {\r\n    return gone_equals(gone, gone2)\r\n}\r\n\r\nconst is_door_fan = (door, origin_door) => {\r\n    return doors_equals(door, origin_door)\r\n}\r\n\r\nconst is_gone_fan = (gone, gone2) => {\r\n    return gone_equals(gone, gone2)\r\n}\r\n\r\nconst conflicts = (tin_gone, floor_gone) => {\r\n    let result = false\r\n\r\n    conflicts_gone.forEach((c) => {\r\n        if (tin_gone.indexOf(c.main) > -1 || floor_gone.indexOf(c.main) > -1) {\r\n            c.target.forEach((t) => {\r\n\r\n\r\n\r\n                if (tin_gone.indexOf(t) > -1 || floor_gone.indexOf(t) > -1)\r\n                    result = true\r\n            })\r\n        }\r\n    })\r\n\r\n    return result\r\n\r\n}\r\n\r\nconst merges = (tin_gone, floor_gone, tin_sun, floor_sun) => {\r\n    let result = false\r\n\r\n    merge_gone.forEach((c) => {\r\n        if (tin_gone.indexOf(c.main) > -1 || floor_gone.indexOf(c.main) > -1 ||\r\n            tin_sun.indexOf(c.main) > -1 || floor_sun.indexOf(c.main) > -1\r\n        ) {\r\n            if (tin_gone.indexOf(c.target) > -1 || floor_gone.indexOf(c.target) > -1)\r\n                result = true\r\n        }\r\n    })\r\n\r\n    return result\r\n\r\n}\r\n\r\nconst theifs = (tin_gone, floor_gone) => {\r\n    let result = false\r\n\r\n    if (tin_gone.indexOf(theif_gok[0]) > -1 && tin_gone.indexOf(theif_gok[1]) > -1) //天自成賊局\r\n        result = true\r\n    else if (floor_gone.indexOf(theif_gok[0]) > -1 && floor_gone.indexOf(theif_gok[1]) > -1)//地自成賊局\r\n        result = true\r\n    else if (tin_gone.indexOf(theif_gok[0]) > -1 && floor_gone.indexOf(theif_gok[1]) > -1)\r\n        result = true\r\n    else if (tin_gone.indexOf(theif_gok[1]) > -1 && floor_gone.indexOf(theif_gok[0]) > -1)\r\n        result = true\r\n\r\n    return result\r\n}\r\n\r\nconst changes = (tin_gone, floor_gone) => {\r\n    let result = false\r\n\r\n    if (tin_gone.indexOf(change_gok[0]) > -1 && tin_gone.indexOf(change_gok[1]) > -1) //天自成賊局\r\n        result = true\r\n    else if (floor_gone.indexOf(change_gok[0]) > -1 && floor_gone.indexOf(change_gok[1]) > -1)//地自成賊局\r\n        result = true\r\n    else if (tin_gone.indexOf(change_gok[0]) > -1 && floor_gone.indexOf(change_gok[1]) > -1)\r\n        result = true\r\n    else if (tin_gone.indexOf(change_gok[1]) > -1 && floor_gone.indexOf(change_gok[0]) > -1)\r\n        result = true\r\n\r\n    return result\r\n}\r\n\r\nconst leaves = (tin_gone, floor_gone) => {\r\n    let result = false\r\n\r\n    if (tin_gone.indexOf(leave_gok[0]) > -1 && tin_gone.indexOf(leave_gok[1]) > -1) //天自成賊局\r\n        result = true\r\n    else if (floor_gone.indexOf(leave_gok[0]) > -1 && floor_gone.indexOf(leave_gok[1]) > -1)//地自成賊局\r\n        result = true\r\n    else if (tin_gone.indexOf(leave_gok[0]) > -1 && floor_gone.indexOf(leave_gok[1]) > -1)\r\n        result = true\r\n    else if (tin_gone.indexOf(leave_gok[1]) > -1 && floor_gone.indexOf(leave_gok[0]) > -1)\r\n        result = true\r\n\r\n    return result\r\n}\r\n\r\nconst gakgoks = (tin_gone, floor_gone) => {\r\n    let result = []\r\n\r\n    gak_gok_81.forEach(g => {\r\n        if\r\n            (\r\n            tin_gone.length === 2 &&\r\n            (tin_gone.indexOf(g.primary_tin_gone) === 0 && tin_gone.indexOf(g.secondary_tin_gone) === 1)\r\n        )\r\n            result.push(g)\r\n        else if (\r\n            floor_gone.length === 2 &&\r\n            (floor_gone.indexOf(g.primary_tin_gone) === 0 && floor_gone.indexOf(g.secondary_tin_gone) === 1)\r\n        )\r\n            result.push(g)\r\n        else {\r\n            if (tin_gone.indexOf(g.primary_tin_gone) > -1 && floor_gone.indexOf(g.secondary_tin_gone) > -1)\r\n                result.push(g)\r\n        }\r\n    })\r\n\r\n    return result\r\n}\r\n\r\n\r\nconst is_tin_gone_conflicts = (tins, floors, door_sun_seq) => {\r\n    let result = []\r\n    let t_tin = []\r\n    t_tin.push(...tins)\r\n    t_tin.pop()\r\n\r\n    t_tin.forEach((t, idx) => {\r\n        if (conflicts(t['primary'] + t['second'], floors[idx]))\r\n            result.push(door_sun_seq[idx])\r\n    })\r\n\r\n    return result;\r\n}\r\n\r\nconst is_tin_gone_merges = (tins, floors, tin_suns, floor_suns, door_sun_seq) => {\r\n    let result = []\r\n    let t_tin = []\r\n    t_tin.push(...tins)\r\n    t_tin.pop()\r\n\r\n    t_tin.forEach((t, idx) => {\r\n        if (merges(t['primary'] + t['second'], floors[idx], tin_suns[idx], floor_suns[idx]))\r\n            result.push(door_sun_seq[idx])\r\n    })\r\n\r\n    return result;\r\n}\r\n\r\nconst is_theif_gok = (tins, floors, door_sun_seq) => {\r\n    let result = []\r\n    let t_tin = []\r\n    t_tin.push(...tins)\r\n    t_tin.pop()\r\n\r\n    t_tin.forEach((t, idx) => {\r\n        if (theifs(floors[idx], t['primary'] + t['second']))\r\n            result.push(door_sun_seq[idx])\r\n    })\r\n\r\n    return result;\r\n}\r\n\r\nconst is_change_gok = (tins, floors, door_sun_seq) => {\r\n    let result = []\r\n    let t_tin = []\r\n    t_tin.push(...tins)\r\n    t_tin.pop()\r\n\r\n    t_tin.forEach((t, idx) => {\r\n        if (changes(floors[idx], t['primary'] + t['second']))\r\n            result.push(door_sun_seq[idx])\r\n    })\r\n\r\n    return result;\r\n}\r\n\r\nconst is_leave_gok = (tins, floors, door_sun_seq) => {\r\n    let result = []\r\n    let t_tin = []\r\n    t_tin.push(...tins)\r\n    t_tin.pop()\r\n\r\n    t_tin.forEach((t, idx) => {\r\n        if (leaves(floors[idx], t['primary'] + t['second']))\r\n            result.push(door_sun_seq[idx])\r\n    })\r\n\r\n    return result;\r\n}\r\n\r\nconst find_gak_gok = (tins, floors, door_sun_seq) => {\r\n    let result = []\r\n    let t_tin = []\r\n    t_tin.push(...tins)\r\n    t_tin.pop()\r\n\r\n    t_tin.forEach((t, idx) => {\r\n        result.push({\r\n            seq: door_sun_seq[idx],\r\n            gakgok: gakgoks(floors[idx], t['primary'] + t['second'])\r\n        })\r\n    })\r\n\r\n    return result;\r\n}\r\n\r\nexport {\r\n    is_door_fok, is_gone_fok, is_door_fan, is_gone_fan, is_tin_gone_conflicts, is_tin_gone_merges,\r\n    is_theif_gok, is_change_gok, is_leave_gok, theifs, find_gak_gok\r\n}","import { theifs } from './notes.js'\nimport lunisolar from 'lunisolar'\nconst tin_gone_seq = [\"戊\", \"己\", \"庚\", \"辛\", \"壬\", \"癸\", \"丁\", \"丙\", \"乙\"]\nconst door_seq = [\"休\", \"生\", \"伤\", \"杜\", \"景\", \"死\", \"惊\", \"开\"]\nconst star_seq = [\"蓬\", \"任\", \"冲\", \"辅\", \"英\", \"芮\", \"柱\", \"心\"]\nconst sun_seq = [\"符\", \"蛇\", \"阴\", \"合\", \"虎\", \"武\", \"九\", \"天\"]\nconst door_sun_seq = [1, 8, 3, 4, 9, 2, 7, 6]\nconst gong_seq = [1, 2, 3, 4, 6, 7, 8, 9]\nconst floor12_str = [\"子\", \"丑\", \"寅\", \"卯\", \"辰\", \"巳\", \"午\", \"未\", \"申\", \"酉\", \"戌\", \"亥\"]\nconst floor12_month_str = [\"寅\", \"卯\", \"辰\", \"巳\", \"午\", \"未\", \"申\", \"酉\", \"戌\", \"亥\", \"子\", \"丑\"]\nconst floor12_int = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\nconst floor12_animarl = [\"鼠\", \"牛\", \"虎\", \"兔\", \"龍\", \"蛇\", \"馬\", \"羊\", \"猴\", \"雞\", \"狗\", \"豬\"]\nconst tin_gone_10_str = [\"甲\", \"乙\", \"丙\", \"丁\", \"戊\", \"己\", \"庚\", \"辛\", \"壬\", \"癸\"]\nconst chun6_seq = [\"戊\", \"己\", \"庚\", \"辛\", \"壬\", \"癸\"]\nconst chun6_chi_seq = [\"子\", \"戌\", \"申\", \"午\", \"辰\", \"寅\"]\nconst gone_chi = [\n    {\n        gone: 1,\n        chi: ['子']\n    },\n    {\n        gone: 8,\n        chi: ['丑', '寅']\n    },\n    {\n        gone: 3,\n        chi: ['卯']\n    },\n    {\n        gone: 4,\n        chi: ['辰', '巳']\n    },\n    {\n        gone: 9,\n        chi: ['午']\n    },\n    {\n        gone: 2,\n        chi: ['未', '申']\n    },\n    {\n        gone: 7,\n        chi: ['酉']\n    },\n    {\n        gone: 6,\n        chi: ['戌', '亥']\n    },\n]\n\nconst five_elements = [\n    { name: \"木\", sik_sheung: \"火\", choi: \"土\", guen_sak: \"金\", yan: \"水\", gong: [3, 4], chi: [\"寅\", \"卯\"], wong_sheung_gong: [3, 4, 9] },\n    { name: \"火\", sik_sheung: \"土\", choi: \"金\", guen_sak: \"水\", yan: \"木\", gong: [9], chi: [\"巳\", \"午\"], wong_sheung_gong: [9, 2, 8] },\n    { name: \"土\", sik_sheung: \"金\", choi: \"水\", guen_sak: \"木\", yan: \"火\", gong: [2, 8], chi: [\"辰\", \"戌\", \"丑\", \"未\"], wong_sheung_gong: [2, 8, 6, 7] },\n    { name: \"金\", sik_sheung: \"水\", choi: \"木\", guen_sak: \"火\", yan: \"土\", gong: [6, 7], chi: [\"申\", \"酉\"], wong_sheung_gong: [6, 7, 1] },\n    { name: \"水\", sik_sheung: \"木\", choi: \"火\", guen_sak: \"土\", yan: \"金\", gong: [1], chi: [\"子\", \"亥\"], wong_sheung_gong: [1, 3, 4] }\n]\n\nconst gongs = [\n    { gong: [1], chi: [\"子\"], wong_sheung_gong: [1, 3, 4] },\n    { gong: [1], chi: [\"丑\"], wong_sheung_gong: [8, 2, 6, 7] },\n    { gong: [1], chi: [\"寅\"], wong_sheung_gong: [8, 3, 4, 9] },\n    { gong: [1], chi: [\"卯\"], wong_sheung_gong: [3, 4, 9] },\n    { gong: [1], chi: [\"辰\"], wong_sheung_gong: [4, 2, 8, 6, 7] },\n    { gong: [1], chi: [\"巳\"], wong_sheung_gong: [4, 9, 2, 8] },\n    { gong: [1], chi: [\"午\"], wong_sheung_gong: [9, 2, 8] },\n    { gong: [1], chi: [\"未\"], wong_sheung_gong: [2, 8, 6, 7] },\n    { gong: [1], chi: [\"申\"], wong_sheung_gong: [2, 6, 7, 1] },\n    { gong: [1], chi: [\"酉\"], wong_sheung_gong: [7, 6, 1] },\n    { gong: [1], chi: [\"戌\"], wong_sheung_gong: [6, 7, 2, 8] },\n    { gong: [1], chi: [\"亥\"], wong_sheung_gong: [6, 3, 4, 1] },\n]\n\nconst gak_time_gone = [\n    { gak: \"子\", gone: \"戊\" },\n    { gak: \"戌\", gone: \"己\" },\n    { gak: \"申\", gone: \"庚\" },\n    { gak: \"午\", gone: \"辛\" },\n    { gak: \"辰\", gone: \"壬\" },\n    { gak: \"寅\", gone: \"癸\" },\n]\n\nconst hill24 = [\n    { gong: 1, chi: [\"壬\", \"子\", \"癸\"] },\n    { gong: 8, chi: [\"丑\", \"艮\", \"寅\"] },\n    { gong: 3, chi: [\"甲\", \"卯\", \"乙\"] },\n    { gong: 4, chi: [\"辰\", \"巽\", \"巳\"] },\n    { gong: 9, chi: [\"丙\", \"午\", \"丁\"] },\n    { gong: 2, chi: [\"未\", \"坤\", \"申\"] },\n    { gong: 7, chi: [\"庚\", \"酉\", \"辛\"] },\n    { gong: 6, chi: [\"戌\", \"乾\", \"亥\"] },\n]\nconst harm = [\n    { gong: 8, chi: [\"庚\"] },\n    { gong: 3, chi: [\"戊\"] },\n    { gong: 4, chi: [\"壬\", \"癸\"] },\n    { gong: 9, chi: [\"辛\"] },\n    { gong: 2, chi: [\"己\"] },\n    { gong: \"special\", chi: [\"辛\"] },\n    { gong: \"special\", chi: [\"壬\"] },\n]\n\nconst grave = [\n    { gong: 8, chi: [\"丁\", \"己\", \"庚\"], sun: [] },\n    { gong: 4, chi: [\"壬\", \"辛\"], sun: [] },\n    { gong: 6, chi: [\"乙\", \"丙\", \"戊\"], sun: [] },\n    { gong: 2, chi: [\"乙\", \"癸\"], sun: [\"符\"] }\n]\n\nconst bik = [\n    { gong: 1, door: [\"生\", \"死\"] },\n    { gong: 8, door: [\"伤\", \"杜\"] },\n    { gong: 3, door: [\"惊\", \"开\"] },\n    { gong: 4, door: [\"惊\", \"开\"] },\n    { gong: 9, door: [\"休\"] },\n    { gong: 2, door: [\"伤\", \"杜\"] },\n    { gong: 7, door: [\"景\"] },\n    { gong: 6, door: [\"景\"] },\n]\n\nconst horse = [\n    { chi: [\"申\", \"子\", \"辰\"], horse_gong: 8 },\n    { chi: [\"寅\", \"午\", \"戌\"], horse_gong: 2 },\n    { chi: [\"巳\", \"酉\", \"丑\"], horse_gong: 6 },\n    { chi: [\"亥\", \"卯\", \"未\"], horse_gong: 4 }\n]\n\nconst find_wong_gong = (month_chi) => {\n    let result = []\n    gongs.forEach((f) => {\n        if (f.chi.indexOf(month_chi) > -1) {\n            result.push(...f.wong_sheung_gong)\n        }\n    })\n\n    return result\n}\n\nconst find_gok = (year_chi, month_chi, day, time_chi) => {\n    // console.log(`year_chi = ${year_chi} month_chi=${month_chi} day=${day} time_chi=${time_chi}`);\n\n    let cnt = 0\n    cnt += floor12_int[floor12_str.indexOf(year_chi)]\n    // \n    cnt += floor12_int[floor12_month_str.indexOf(month_chi)]\n    // \n    cnt += day\n    // \n    cnt += floor12_int[floor12_str.indexOf(time_chi)]\n    // \n\n\n    let gok = cnt % 9\n    gok = gok == 0 ? 9 : gok\n\n    return gok\n}\n\nconst floor_tin_gone = (number, up_down) => {\n    let floor_seq_array = []\n    let cnt = 1\n    floor_seq_array[0] = number\n\n    if (up_down == 0) {\n        while (cnt <= 8) {\n\n            let val = floor_seq_array[cnt - 1] - 1\n            if (val < 1) {\n                val = 9\n            }\n\n            floor_seq_array[cnt] = val\n            cnt++\n        }\n    }\n    else if (up_down == 1) {\n        while (cnt <= 8) {\n\n            let val = floor_seq_array[cnt - 1] + 1\n            if (val > 9) {\n                val = 1\n            }\n\n            floor_seq_array[cnt] = val\n            cnt++\n        }\n    }\n\n    return floor_seq_array\n}\n\nconst find_empty_and_chun = (time_gone_chi) => {\n    let gone = time_gone_chi[0]\n    let chi = time_gone_chi[1]\n\n\n    let end = 9 - tin_gone_10_str.indexOf(gone)\n\n    let empty1 = end + 1 + floor12_str.indexOf(chi)\n    let empty2 = end + 2 + floor12_str.indexOf(chi)\n\n    empty1 = empty1 >= 12 ? empty1 - 12 : empty1\n    empty2 = empty2 >= 12 ? empty2 - 12 : empty2\n\n\n    let empty = {\n        \"empty1\": floor12_str[empty1],\n        \"empty2\": floor12_str[empty2],\n        \"chun_gone\": find_chun(empty2),\n        \"chun_chi\": find_chun_chi(empty2)\n    }\n\n    return empty\n}\n\nconst find_empty_gong = (empty) => {\n\n    let gong = \"\"\n    hill24.forEach((hill) => {\n        if (hill['chi'].includes(empty))\n            gong = hill['gong']\n    })\n\n    return gong\n\n}\n\nconst find_harm = (gong, tin_gone, floor_gone) => {\n    let harmful = false\n    harm.forEach((h) => {\n        if (h['gong'] == gong) {\n            h['chi'].forEach((h) => {\n                if (tin_gone.indexOf(h) > -1 || floor_gone.indexOf(h) > -1)\n                    harmful = true\n            })\n        }\n    })\n\n    if (tin_gone.indexOf(\"辛\") > -1 && floor_gone.indexOf(\"辛\") > -1)\n        harmful = true\n    if (tin_gone.indexOf(\"壬\") > -1 && floor_gone.indexOf(\"壬\") > -1)\n        harmful = true\n\n    return harmful\n}\n\nconst find_grave = (gong, tin_gone, floor_gone, sun, floor_sun) => {\n    let is_grave = false\n    grave.forEach((g) => {\n        if (g['gong'] == gong) {\n            g['chi'].forEach((g) => {\n                if (tin_gone.indexOf(g) > -1 || floor_gone.indexOf(g) > -1)\n                    is_grave = true\n            })\n\n            if (g['sun'].includes(sun) || g['sun'].includes(floor_sun))\n                is_grave = true\n        }\n    })\n\n    return is_grave\n}\n\nconst find_bik = (gong, door) => {\n    let is_bik = false\n    bik.forEach((b) => {\n        if (b['gong'] == gong)\n            if (b['door'].includes(door))\n                is_bik = true\n    })\n\n    return is_bik\n}\n\nconst find_horse = (time_chi) => {\n    let horse_gong = 0\n    horse.forEach((h) => {\n        if (h['chi'].includes(time_chi))\n            horse_gong = h['horse_gong']\n    })\n\n    return horse_gong\n}\n\n\nconst find_chun = (empty2) => {\n    let chun6 = empty2 + 1 >= 12 ? floor12_str[empty2 + 1 - 12] : floor12_str[empty2 + 1]\n    let chun6_idx = chun6_chi_seq.indexOf(chun6)\n    return chun6_seq[chun6_idx]\n}\n\nconst find_chun_chi = (empty2) => {\n    let chun6 = empty2 + 1 >= 12 ? floor12_str[empty2 + 1 - 12] : floor12_str[empty2 + 1]\n    return chun6\n}\n\nconst find_door_and_star = (floor_seq_array, chun) => {\n    let chun_gung_idx = floor_seq_array[tin_gone_seq.indexOf(chun)]\n    chun_gung_idx = chun_gung_idx == 5 ? 2 : chun_gung_idx\n    let door_sun_seq_idx = door_sun_seq.indexOf(chun_gung_idx)\n\n    let door_and_star = {\n        \"door\": door_seq[door_sun_seq_idx],\n        \"star\": star_seq[door_sun_seq_idx],\n    }\n    // \n    return door_and_star\n}\n\nconst get_floor_tin_gone_display = (floor_tin_gone_seq) => {\n    let display_floor_tin_gone_array = []\n    display_floor_tin_gone_array[3] = { primary: tin_gone_seq[floor_tin_gone_seq.indexOf(4)] }\n    display_floor_tin_gone_array[4] = { primary: tin_gone_seq[floor_tin_gone_seq.indexOf(9)] }\n    display_floor_tin_gone_array[5] = { primary: tin_gone_seq[floor_tin_gone_seq.indexOf(2)], second: tin_gone_seq[floor_tin_gone_seq.indexOf(5)] }\n    display_floor_tin_gone_array[2] = { primary: tin_gone_seq[floor_tin_gone_seq.indexOf(3)] }\n    display_floor_tin_gone_array[8] = { primary: tin_gone_seq[floor_tin_gone_seq.indexOf(5)] }\n    display_floor_tin_gone_array[6] = { primary: tin_gone_seq[floor_tin_gone_seq.indexOf(7)] }\n    display_floor_tin_gone_array[1] = { primary: tin_gone_seq[floor_tin_gone_seq.indexOf(8)] }\n    display_floor_tin_gone_array[0] = { primary: tin_gone_seq[floor_tin_gone_seq.indexOf(1)] }\n    display_floor_tin_gone_array[7] = { primary: tin_gone_seq[floor_tin_gone_seq.indexOf(6)] }\n    return display_floor_tin_gone_array\n}\n\nconst get_star_display = (floor_tin_gone_display, time_gone, time_chi, star) => {\n    // \n    let start_gong = 0\n\n\n    if (time_gone == \"甲\") {\n        let gone = \"\"\n        gak_time_gone.forEach((g) => {\n            if (g['gak'] == time_chi)\n                gone = g['gone']\n        })\n\n\n        floor_tin_gone_display.forEach((tg, idx) => { if (tg['primary'] == gone) start_gong = idx })\n    }\n    else\n        floor_tin_gone_display.forEach((tg, idx) => { if (tg['primary'] == time_gone) start_gong = idx })\n\n    if (start_gong == 8)\n        start_gong = 5\n    let star_seq_array = []\n    // \n    if (star_seq.indexOf(star) != start_gong) {\n        let shift_cnb = start_gong > star_seq.indexOf(star) ? start_gong - star_seq.indexOf(star) : star_seq.indexOf(star) - start_gong\n        // \n\n        star_seq_array = start_gong > star_seq.indexOf(star) ? shiftRight(star_seq, shift_cnb) : shiftLeft(star_seq, shift_cnb)\n    }\n    else {\n        star_seq_array.push(...star_seq)\n    }\n    // \n    return star_seq_array\n}\n\nconst get_tin_tin_gone_display = (star_display_seq, floor_tin_gone_display) => {\n    let t_floor_tin_gone_display = []\n    t_floor_tin_gone_display.push(...floor_tin_gone_display)\n    t_floor_tin_gone_display.pop()\n    // \n    let start_idx = star_display_seq.indexOf(star_seq[0])\n    // \n    let tin_tin_gone_seq = []\n    let shift_cnb = start_idx\n    tin_tin_gone_seq = shiftRight(t_floor_tin_gone_display, shift_cnb)\n\n    let tin_tin_gone_str_seq = []\n    tin_tin_gone_seq.forEach((t, idx) => {\n        if (t.hasOwnProperty('second')) {\n            tin_tin_gone_str_seq.push(t['primary'] + t['second'])\n        }\n        else {\n            tin_tin_gone_str_seq.push(t['primary'])\n        }\n    })\n\n\n\n    // \n    return tin_tin_gone_str_seq\n}\n\nconst get_door_display = (display_floor_tin_gone_array, chun_gone, chun_chi, time_chi, up_down, door) => {\n    // \n    // \n    let chun_gong = 0;\n\n    display_floor_tin_gone_array.forEach((t, idx) => {\n        if (t['primary'] == chun_gone) {\n            if (idx == 8)\n                chun_gong = 5\n            else\n                chun_gong = door_sun_seq[idx]\n        }\n    })\n\n    let chun_chi_idx = floor12_str.indexOf(chun_chi);\n    let time_chi_idx = floor12_str.indexOf(time_chi);\n\n    let door_seq_array = []\n\n    if (chun_chi != time_chi_idx) {\n        if (up_down == 0) {\n\n            let diff = 0;\n\n\n\n            if (chun_chi_idx == time_chi_idx)\n                diff = 0\n            else if (time_chi_idx < 12 && time_chi_idx > chun_chi_idx)\n                diff = time_chi_idx - chun_chi_idx\n            else\n                diff = floor12_str.length - chun_chi_idx + time_chi_idx;\n\n\n            // if (time_chi_idx < chun_chi_idx) {\n            //     \n            //     \n            //     diff = chun_chi_idx - time_chi_idx\n            // }\n            // else if (time_chi_idx > chun_chi_idx) {\n            //     diff = time_chi_idx - chun_chi_idx\n            // }\n\n            // \n\n\n\n            let door_start_idx = 0\n            // if (chun_gong > diff)\n            //     door_start_idx = door_sun_seq.indexOf(chun_gong - diff)\n            // else \n            if (diff >= chun_gong)\n                chun_gong += 9\n\n\n\n            if (chun_gong - diff > 0)\n                door_start_idx = door_sun_seq.indexOf(chun_gong - diff)\n\n            if (door_start_idx == -1)\n                door_start_idx = 5\n\n\n\n\n            let fuk = door == door_seq[door_start_idx]\n\n\n\n\n            if (!fuk && door_sun_seq[door_start_idx] != chun_gong) {\n                let shift_cnb = 0\n                if (door_seq.indexOf(door) > door_start_idx) {\n                    shift_cnb = door_seq.indexOf(door) - door_start_idx\n                    door_seq_array = shiftLeft(door_seq, shift_cnb)\n                }\n                else if (door_start_idx > door_seq.indexOf(door)) {\n                    shift_cnb = door_start_idx - door_seq.indexOf(door)\n                    door_seq_array = shiftRight(door_seq, shift_cnb)\n                }\n            }\n            else {\n                door_seq_array.push(...door_seq)\n            }\n        }\n        else if (up_down == 1) {\n\n            let diff = 0;\n\n\n\n            if (chun_chi_idx == time_chi_idx)\n                diff = 0\n            else if (time_chi_idx < 12 && time_chi_idx > chun_chi_idx)\n                diff = time_chi_idx - chun_chi_idx\n            else\n                diff = floor12_str.length - chun_chi_idx + time_chi_idx;\n\n\n            // if (time_chi_idx < chun_chi_idx) {\n            //     diff = chun_chi_idx + (floor12_str.length - chun_chi_idx) - time_chi_idx\n            // }\n            // else if (time_chi_idx > chun_chi_idx) {\n            //     diff = time_chi_idx - chun_chi_idx\n            // }\n\n\n\n\n            let door_start_idx = 0\n            // if (chun_gong > diff)\n            //     door_start_idx = door_sun_seq.indexOf(chun_gong - diff)\n            // else \n            if (chun_gong + diff > 9)\n                chun_gong -= 9\n\n\n\n            if (chun_gong + diff > 0)\n                door_start_idx = door_sun_seq.indexOf(chun_gong + diff)\n\n            if (door_start_idx == -1)\n                door_start_idx = 5\n\n\n\n\n\n\n            let fuk = door == door_seq[door_start_idx]\n\n            if (!fuk && door_sun_seq[door_start_idx] != chun_gong) {\n                let shift_cnb = 0\n                if (door_seq.indexOf(door) > door_start_idx) {\n                    shift_cnb = door_seq.indexOf(door) - door_start_idx\n                    door_seq_array = shiftLeft(door_seq, shift_cnb)\n                }\n                else if (door_start_idx > door_seq.indexOf(door)) {\n                    shift_cnb = door_start_idx - door_seq.indexOf(door)\n                    door_seq_array = shiftRight(door_seq, shift_cnb)\n                }\n\n            }\n            else {\n                door_seq_array.push(...door_seq)\n            }\n        }\n    }\n    else {\n        door_seq_array.push(...door_seq)\n    }\n    // \n    return door_seq_array\n\n\n}\n\nconst get_sun_display = (display_tin_tin_gone_array, chun_gone, up_down) => {\n    let shift_cnb = 0\n\n\n    let sun_seq_array = []\n\n    let t_sun_array = []\n    t_sun_array.push(...sun_seq)\n    if (up_down == 0) {\n        let t_tin_tin_gone_array = []\n        t_tin_tin_gone_array.push(...display_tin_tin_gone_array)\n        t_tin_tin_gone_array.reverse()\n\n        // \n\n        t_tin_tin_gone_array.forEach((t, idx) => {\n            if (t.indexOf(chun_gone) > -1)\n                shift_cnb = idx\n        })\n\n        // \n        t_sun_array = t_sun_array.reverse()\n        sun_seq_array = shiftLeft(t_sun_array, shift_cnb)\n    }\n    else {\n\n        display_tin_tin_gone_array.forEach((t, idx) => {\n            if (t.indexOf(chun_gone) > -1)\n                shift_cnb = idx\n        })\n        sun_seq_array = shiftRight(t_sun_array, shift_cnb)\n    }\n\n\n    // \n    return sun_seq_array\n}\n\nconst get_floor_sun_display = (display_floor_tin_gone_array, chun_gone, up_down) => {\n\n    let t_floor_tin_gone_display = []\n    t_floor_tin_gone_display.push(...display_floor_tin_gone_array)\n    t_floor_tin_gone_display.pop()\n\n    // \n\n    let shift_cnt = 0\n\n\n    let sun_seq_array = []\n\n    let t_sun_array = []\n    t_sun_array.push(...sun_seq)\n\n    if (up_down == 0) {\n        let t_floor_tin_gone_array = []\n        t_floor_tin_gone_array.push(...t_floor_tin_gone_display)\n        t_floor_tin_gone_array.reverse()\n\n        // \n        // shift_cnt = t_floor_tin_gone_array.indexOf(chun_gone)\n        t_floor_tin_gone_array.forEach((t, idx) => {\n            if (t['primary'] == chun_gone || t['second'] == chun_gone)\n                shift_cnt = idx\n        })\n\n        t_sun_array = t_sun_array.reverse()\n\n        // \n        sun_seq_array = shiftLeft(t_sun_array, shift_cnt)\n    }\n    else {\n        // shift_cnt = t_floor_tin_gone_display.indexOf(chun_gone)\n        t_floor_tin_gone_display.forEach((t, idx) => {\n            if (t['primary'] == chun_gone || t['second'] == chun_gone)\n                shift_cnt = idx\n        })\n        sun_seq_array = shiftRight(t_sun_array, shift_cnt)\n    }\n\n\n    // \n    return sun_seq_array\n}\n\nconst find_yan_gone = (tin_tin_gone_seq, time_gone, time_chi, door_tin_gone, chun_gone, yinyang, door_gong_idx) => {\n\n    let yan_gone_array = []\n    yan_gone_array.push(...tin_tin_gone_seq)\n    let yan_gone_obj_array = []\n\n    if (time_gone == \"甲\") {\n        let gone = \"\"\n        gak_time_gone.forEach((g) => {\n            if (g['gak'] == time_chi)\n                gone = g['gone']\n        })\n\n\n        time_gone = gone\n    }\n\n\n\n    if (door_tin_gone.indexOf(time_gone) > -1) {\n        let shifted_tin_gone_seq = []\n        shifted_tin_gone_seq.push(...tin_gone_seq)\n        let shift_cnt = 0\n        shifted_tin_gone_seq.forEach((t, idx) => {\n            if (t.indexOf(chun_gone) > -1) {\n\n                shift_cnt = idx\n            }\n        })\n\n        // shifted_tin_gone_seq = shiftLeft(shifted_tin_gone_seq, shift_cnt)\n        shifted_tin_gone_seq = shiftArray(shifted_tin_gone_seq, chun_gone)\n\n\n        if (yinyang == 0) {\n            yan_gone_array[3] = shifted_tin_gone_seq[1]\n            yan_gone_array[2] = shifted_tin_gone_seq[2]\n            yan_gone_array[5] = shifted_tin_gone_seq[3] + shifted_tin_gone_seq[0]\n            yan_gone_array[0] = shifted_tin_gone_seq[4]\n            yan_gone_array[4] = shifted_tin_gone_seq[5]\n            yan_gone_array[1] = shifted_tin_gone_seq[6]\n            yan_gone_array[6] = shifted_tin_gone_seq[7]\n            yan_gone_array[7] = shifted_tin_gone_seq[8]\n        }\n        else if (yinyang == 1) {\n            yan_gone_array[7] = shifted_tin_gone_seq[1]\n            yan_gone_array[6] = shifted_tin_gone_seq[2]\n            yan_gone_array[1] = shifted_tin_gone_seq[3]\n            yan_gone_array[4] = shifted_tin_gone_seq[4]\n            yan_gone_array[0] = shifted_tin_gone_seq[5]\n            yan_gone_array[5] = shifted_tin_gone_seq[6] + shifted_tin_gone_seq[0]\n            yan_gone_array[2] = shifted_tin_gone_seq[7]\n            yan_gone_array[3] = shifted_tin_gone_seq[8]\n        }\n    }\n    else {\n\n\n        let shift_cnt = 0;\n        let time_gone_idx = 0\n        // yan_gone_array.indexOf(time_gone)\n        yan_gone_array.forEach((y, idx) => {\n            if (y.indexOf(time_gone) > -1)\n                time_gone_idx = idx\n        })\n\n        if (time_gone_idx > door_gong_idx) {\n            shift_cnt = time_gone_idx - door_gong_idx\n            yan_gone_array = shiftLeft(yan_gone_array, shift_cnt)\n        }\n        else if (door_gong_idx > time_gone_idx) {\n            shift_cnt = door_gong_idx - time_gone_idx\n            yan_gone_array = shiftRight(yan_gone_array, shift_cnt)\n        }\n\n    }\n\n    yan_gone_array.forEach((y) => {\n        let gone = y.split('')\n        if (gone.length == 1) {\n            yan_gone_obj_array.push({ primary: gone[0], second: \"\" })\n        }\n        else if (gone.length == 2) {\n            yan_gone_obj_array.push({ primary: gone[0], second: gone[1] })\n        }\n    })\n\n\n\n    return yan_gone_obj_array\n}\n\nconst spinR = (dataSetObj, n) => {\n    let floor_tin_gone5 = dataSetObj.display_floor_tin_gone_array[8]\n    let temp_floor_tin_gone_array = dataSetObj.display_floor_tin_gone_array.filter((t, idx) => idx != 8)\n    temp_floor_tin_gone_array = shiftLeft(temp_floor_tin_gone_array, n)\n    let display_floor_tin_gone_array = [\n        temp_floor_tin_gone_array[0],\n        temp_floor_tin_gone_array[1],\n        temp_floor_tin_gone_array[2],\n        temp_floor_tin_gone_array[3],\n        temp_floor_tin_gone_array[4],\n        temp_floor_tin_gone_array[5],\n        temp_floor_tin_gone_array[6],\n        temp_floor_tin_gone_array[7],\n        floor_tin_gone5\n    ]\n\n    let returnObj = {\n        display_floor_tin_gone_array: display_floor_tin_gone_array,\n        display_tin_tin_gone_array: shiftLeft(dataSetObj.display_tin_tin_gone_array, n),\n        display_sun_array: shiftLeft(dataSetObj.display_sun_array, n),\n        display_floor_sun_array: shiftLeft(dataSetObj.display_floor_sun_array, n),\n        display_star_array: shiftLeft(dataSetObj.display_star_array, n),\n        display_door_array: shiftLeft(dataSetObj.display_door_array, n),\n        yan_gone_array: shiftLeft(dataSetObj.yan_gone_array, n)\n    }\n    return returnObj\n}\n\nconst spinL = (dataSetObj, n) => {\n    let floor_tin_gone5 = dataSetObj.display_floor_tin_gone_array[8]\n    let temp_floor_tin_gone_array = dataSetObj.display_floor_tin_gone_array.filter((t, idx) => idx != 8)\n    temp_floor_tin_gone_array = shiftRight(temp_floor_tin_gone_array, n)\n    let display_floor_tin_gone_array = [\n        temp_floor_tin_gone_array[0],\n        temp_floor_tin_gone_array[1],\n        temp_floor_tin_gone_array[2],\n        temp_floor_tin_gone_array[3],\n        temp_floor_tin_gone_array[4],\n        temp_floor_tin_gone_array[5],\n        temp_floor_tin_gone_array[6],\n        temp_floor_tin_gone_array[7],\n        floor_tin_gone5\n    ]\n\n    let returnObj = {\n        display_floor_tin_gone_array: display_floor_tin_gone_array,\n        display_tin_tin_gone_array: shiftRight(dataSetObj.display_tin_tin_gone_array, n),\n        display_sun_array: shiftRight(dataSetObj.display_sun_array, n),\n        display_floor_sun_array: shiftRight(dataSetObj.display_floor_sun_array, n),\n        display_star_array: shiftRight(dataSetObj.display_star_array, n),\n        display_door_array: shiftRight(dataSetObj.display_door_array, n),\n        yan_gone_array: shiftRight(dataSetObj.yan_gone_array, n)\n    }\n    return returnObj\n}\n\nconst spinGone = (left, right) => {\n    if (left > 0)\n        return shiftRight(door_sun_seq, left)\n    else if (right > 0)\n        return shiftLeft(door_sun_seq, right)\n    else\n        return door_sun_seq\n}\n\nconst shiftLeft = (arr, n) => {\n    let temp_array = []\n    temp_array.push(...arr)\n    for (let i = 0; i < n; i++) {\n        let temp = temp_array.shift();\n        temp_array.push(temp);\n    }\n    return temp_array;\n}\n\nconst shiftRight = (arr, n) => {\n    let temp_array = []\n    temp_array.push(...arr)\n    for (let i = temp_array.length; i > n; i--) {\n        let temp = temp_array.shift();\n        temp_array.push(temp);\n    }\n    return temp_array;\n}\n\nconst shiftArray = (arr, target) => {\n    return arr.concat(arr.splice(0, arr.indexOf(target)));\n}\n\nconst getSolarTerm = (year, index) => {\n    var termInfo = new Array(0, 21208, 42467, 63836, 85337, 107014, 128867, 150921, 173149, 195551, 218072, 240115, 263343, 285989, 308563, 331033, 353350, 375494, 397447, 419210, 440795, 462224, 483532, 504758);\n    var solarTerm = new Array(\"小寒\", \"大寒\", \"立春\", \"雨水\", \"惊蛰\", \"春分\", \"清明\", \"谷雨\", \"立夏\", \"小满\", \"芒种\", \"夏至\", \"小暑\", \"大暑\", \"立秋\", \"处暑\", \"白露\", \"秋分\", \"寒露\", \"霜降\", \"立冬\", \"小雪\", \"大雪\", \"冬至\");\n    var date = new Date((31556925974.7 * (year - 1900) + termInfo[index] * 60000) + Date.UTC(1900, 0, 6, 2, 5));\n    return date;\n}\n\nfunction removeItemOnce(arr, value) {\n    var index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n    }\n    return arr;\n}\n\nconst isHarmGone = (empty, grave, harm, bik, tin_gone, floor_gone) => {\n    let harms = empty || grave || harm || bik;\n    let theif_gok = theifs(tin_gone, floor_gone)\n    return harms || theif_gok\n}\n\nconst nearestDates = (d) => {\n    let dates = Array()\n    let now = new Date()\n    now.setHours(0)\n    now.setMinutes(0)\n    now.setSeconds(0)\n\n    let orig_d = d\n    let past = (now.getTime() - orig_d.toDate().getTime()) / (1000 * 3600 * 24) >= 9\n    let limit = past ? 30 : 30\n    if (past)\n        orig_d = lunisolar(now)\n\n    for (let i = 0; i < limit; i++) {\n        let temp_d = orig_d.add(i, 'd')\n\n        let _gone = -1\n        gone_chi.forEach((g) => { if (g.chi.indexOf(temp_d.char8.day.branch.toString()) > -1) _gone = g.gone })\n\n        let temp_d_obj = temp_d.toDate()\n        temp_d_obj.setHours(0)\n        temp_d_obj.setMinutes(0)\n        temp_d_obj.setSeconds(0)\n        let orig_d_obj = orig_d.toDate()\n        orig_d_obj.setHours(0)\n        orig_d_obj.setMinutes(0)\n        orig_d_obj.setSeconds(0)\n\n        dates.push({\n            gone: _gone,\n            lunar_day_chi: temp_d.char8.day.branch.toString(),\n            date: temp_d.format('YYYY/MM/DD'),\n            best_before_date: (temp_d_obj.getTime() - orig_d_obj.getTime()) / (1000 * 3600 * 24) < 9 ? true : false,\n            yin_yang: floor12_str.indexOf(temp_d.char8.day.branch.toString()) % 2 == 0 ? '陽' : '陰',\n            animal: floor12_animarl[floor12_str.indexOf(temp_d.char8.day.branch.toString())],\n            past: past\n        })\n    }\n\n    return dates\n}\n\nconst findSameGone = (char8, d, yinyang) => {\n    let _set = new Set()\n    let _year = char8['year'][0]\n    let _month = char8['month'][0]\n    let _day = char8['day'][0]\n    let _time = char8['time'][0]\n\n    let gok = find_gok(char8['year'][1], char8['month'][1], d.toDate().getHours() >= 23 ? lunisolar(new Date(d.toDate().getTime() + 3600000)).lunar.day : d.lunar.day, char8['time'][1])\n    let empty_and_chun = find_empty_and_chun(char8['time']);\n    let chun_gone = empty_and_chun['chun_gone']\n    let door_and_star = find_door_and_star(floor_tin_gone(gok, yinyang), chun_gone)\n    let floor_tin_gone_seq = floor_tin_gone(gok, yinyang)\n    let display_floor_tin_gone_array = get_floor_tin_gone_display(floor_tin_gone_seq)\n    let display_star_array = get_star_display(display_floor_tin_gone_array, char8['time'][0], char8['time'][1], door_and_star['star'])\n    let display_tin_tin_gone_array = get_tin_tin_gone_display(display_star_array, display_floor_tin_gone_array)\n\n    let doubleTinGone = \"\"\n\n    display_tin_tin_gone_array.forEach(g => {\n        if (g.length === 2) {\n            doubleTinGone = g\n        }\n    })\n\n    console.log(`doubleTinGone=${doubleTinGone}`);\n\n    let repeatedCnt = 0\n    let repeatedSet = new Set()\n\n    if (_year === '甲')\n        _year = empty_and_chun['chun_gone']\n    if (_month === '甲')\n        _month = empty_and_chun['chun_gone']\n    if (_day === '甲')\n        _day = empty_and_chun['chun_gone']\n    if (_time === '甲')\n        _time = empty_and_chun['chun_gone']\n\n    if (doubleTinGone.indexOf(_year) > -1) {\n        repeatedCnt++\n        repeatedSet.add('year')\n    }\n    if (doubleTinGone.indexOf(_month) > -1) {\n        repeatedCnt++\n        repeatedSet.add('month')\n    }\n    if (doubleTinGone.indexOf(_day) > -1) {\n        repeatedCnt++\n        repeatedSet.add('day')\n    }\n    if (doubleTinGone.indexOf(_time) > -1) {\n        repeatedCnt++\n        repeatedSet.add('time')\n    }\n\n    if (repeatedCnt++ > 1)\n        repeatedSet.forEach(r => _set.add(r))\n\n    //year\n    if (_year === _month) {\n        _set.add('year')\n        _set.add('month')\n    }\n    if (_year === _day) {\n        _set.add('year')\n        _set.add('day')\n    }\n    if (_year === _time) {\n        _set.add('year')\n        _set.add('time')\n    }\n    //month\n    if (_month === _year) {\n        _set.add('month')\n        _set.add('year')\n    }\n    if (_month === _day) {\n        _set.add('month')\n        _set.add('day')\n    }\n    if (_month === _time) {\n        _set.add('month')\n        _set.add('time')\n    }\n    //day\n    if (_day === _year) {\n        _set.add('day')\n        _set.add('year')\n    }\n    if (_day === _month) {\n        _set.add('day')\n        _set.add('month')\n    }\n    if (_day === _time) {\n        _set.add('day')\n        _set.add('time')\n    }\n    //time\n    if (_time === _year) {\n        _set.add('time')\n        _set.add('year')\n    }\n    if (_time === _month) {\n        _set.add('time')\n        _set.add('month')\n    }\n    if (_time === _day) {\n        _set.add('time')\n        _set.add('day')\n    }\n\n    return _set\n}\n\nexport {\n    tin_gone_10_str, floor12_str,\n    tin_gone_seq, star_seq, door_seq, door_sun_seq, sun_seq, gong_seq,\n    find_gok, floor_tin_gone, find_empty_and_chun, find_door_and_star,\n    get_floor_tin_gone_display, get_star_display, get_tin_tin_gone_display, get_door_display, get_sun_display, get_floor_sun_display,\n    find_empty_gong, find_harm, find_grave, find_bik, find_horse, find_yan_gone, find_wong_gong,\n    getSolarTerm, spinL, spinR, removeItemOnce, isHarmGone, spinGone, nearestDates, findSameGone\n}","import React from 'react'\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport { isHarmGone } from '../js/main.js'\r\n\r\nexport default function Grid(props) {\r\n    let harms = isHarmGone(props.empty, props.grave, props.harm, props.bik, props.tin_tin_gone, props.floor_tin_gone)\r\n    let goodBadGoneColor = props.goodBadGoneColor\r\n    let goneCSS = props.styleName\r\n\r\n    let remarks = \"\"\r\n\r\n    if (goodBadGoneColor)\r\n        if (harms)\r\n            goneCSS = 'bad_gone'\r\n        else\r\n            goneCSS = 'good_gone'\r\n    if (props.yearGone == props.gone) {\r\n        remarks = '年干'\r\n    }\r\n    else if (props.monthGone == props.gone) {\r\n        remarks = '月干'\r\n    }\r\n    else if (props.dayGone == props.gone) {\r\n        remarks = '日干'\r\n    }\r\n    else if (props.timeGone == props.gone) {\r\n        remarks = '時干'\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={`grid ${goneCSS} ${props.wong ? 'wong_gong' : ''}`} onClick={() => props.updateGakGok(props.gak_gok)}>\r\n            <span className='dis_prop'>{props.empty ? \"空\" : \"\"}</span>\r\n            <span className='dis_prop'>{props.horse ? \"馬\" : \"\"}</span>\r\n            <span></span>\r\n            <span className={`\r\n                water_mark \r\n                ${remarks === '年干' && props.sameGone.has('year') ? 'same_year' : ''}\r\n                ${remarks === '月干' && props.sameGone.has('month') ? 'same_month' : ''}\r\n                ${remarks === '日干' && props.sameGone.has('day') ? 'same_day' : ''}\r\n                ${remarks === '時干' && props.sameGone.has('time') ? 'same_time' : ''}\r\n            `}>{remarks === '' ? props.gone : remarks}</span>\r\n            {/* <span className='wide_grid'>\r\n                <input type='text' className='grid_remarks' onClick={(e)=>{e.preventDefault()}} />\r\n            </span> */}\r\n\r\n            <span className='intro_prop'>{props.yan_gone_pri}</span>\r\n            <span className={\r\n                //main gone\r\n                props.sun === '符' && (\r\n                    props.day_gone === '甲'\r\n                )\r\n                    ?\r\n                    (harms || props.fan_or_fok ? 'harm_main_gone' : 'main_gone') : ''\r\n                        //targets\r\n                        + props.targets.length > 0 && props.targets.indexOf(props.sun) > -1 ? ' targets' : ''\r\n            }\r\n            >{props.sun}</span>\r\n            <span></span>\r\n            <span>{props.floor_sun}</span>\r\n\r\n            <span className='intro_prop'>{props.yan_gone_sec}</span>\r\n            <span className={props.targets.length > 0 && props.targets.indexOf(props.display_star) > -1 ? 'targets' : ''}>{props.display_star}</span>\r\n            <span className='dis_prop'>{props.grave ? \"墓\" : \"\"}</span>\r\n            <span className={\r\n                //main gone\r\n                props.tin_tin_gone.indexOf(props.day_gone) >= 0\r\n                    ?\r\n                    (harms || props.fan_or_fok ? 'harm_main_gone' : 'main_gone') : ''\r\n                        //targets\r\n                        + props.targets.length > 0 && props.targets.indexOf(props.tin_tin_gone) > -1 ? ' targets' : ''\r\n                            + props.targets.length > 0 && props.tin_tin_gone.length === 2 && (props.targets.indexOf(props.tin_tin_gone[0]) > -1 || props.targets.indexOf(props.tin_tin_gone[1]) > -1) ? ' targets' : ''\r\n            }>{props.tin_tin_gone}</span>\r\n\r\n            <span className='dis_prop'>{props.bik ? \"迫\" : \"\"}</span>\r\n            <span className={props.targets.length > 0 && props.targets.indexOf(props.door) > -1 ? 'targets' : ''}>{props.door}</span>\r\n            <span className='dis_prop'>{props.harm ? \"刑\" : \"\"}</span>\r\n            <span>{props.floor_tin_gone}</span>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Grid(props) {\r\n  const chi_int_str = ['一','二','三','四','五','六','七','八','九']\r\n  const chi_int = [1,2,3,4,5,6,7,8,9]\r\n\r\n  return (\r\n    <div className='grid' >\r\n        <span></span>\r\n        <span>{props.yinyang == 0 ? \"阴\":\"阳\"}</span>\r\n        <span>{chi_int_str[chi_int.indexOf(props.gok)]}</span>\r\n        <span>局</span>\r\n\r\n        <span>甲</span>\r\n        <span>{props.chun_chi}</span>\r\n        <span>{props.chun_gone}</span>\r\n        <span>旬</span>\r\n\r\n        <span></span>\r\n        <span>{props.time_gone}</span>\r\n        <span>{props.time_chi}</span>\r\n        <span>時</span>\r\n\r\n        <span>{props.door}</span>\r\n        <span>{props.star}</span>\r\n        <span></span>\r\n        <span>{props.floor_tin_gone}</span>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\nimport Grid from './Grid'\nimport DetailGrid from './DetailGrid'\nimport {\n  tin_gone_seq, star_seq, find_gok, floor_tin_gone, find_empty_and_chun, find_door_and_star,\n  get_floor_tin_gone_display, get_star_display, get_tin_tin_gone_display, get_door_display, get_sun_display, get_floor_sun_display,\n  find_empty_gong, find_harm, find_grave, find_bik, find_horse, find_yan_gone, find_wong_gong, door_seq,\n  spinL, spinR, door_sun_seq,spinGone\n} from \"../js/main.js\"\n\nimport {\n  is_door_fok, is_gone_fok, is_door_fan, is_gone_fan, find_gak_gok\n} from '../js/notes.js'\n\n\nexport default function GridBoard(props) {\n  let time_gone = props.time_gone\n  let time_chi = props.time_chi\n  let time_gone_chi = time_gone + time_chi\n\n  let empty_and_chun = find_empty_and_chun(time_gone_chi);\n  let gok = find_gok(props.year_chi, props.month_chi, props.day, props.time_chi)\n  let yinyang = props.yinyang\n\n\n\n  let chun_gone = empty_and_chun['chun_gone']\n  let chun_chi = empty_and_chun['chun_chi']\n\n  let empty_gong1 = find_empty_gong(empty_and_chun['empty1'])\n  let empty_gong2 = find_empty_gong(empty_and_chun['empty2'])\n\n  let door_and_star = find_door_and_star(floor_tin_gone(gok, yinyang), chun_gone)\n\n  let floor_tin_gone_seq = floor_tin_gone(gok, yinyang)\n  let display_floor_tin_gone_array = get_floor_tin_gone_display(floor_tin_gone_seq)\n\n  // \n\n  let display_star_array = get_star_display(display_floor_tin_gone_array, time_gone, time_chi, door_and_star['star'])\n  let display_tin_tin_gone_array = get_tin_tin_gone_display(display_star_array, display_floor_tin_gone_array)\n\n  let display_door_array = get_door_display(display_floor_tin_gone_array, chun_gone, chun_chi, time_chi, yinyang, door_and_star['door'])\n\n  let display_sun_array = get_sun_display(display_tin_tin_gone_array, chun_gone, yinyang)\n  let display_floor_sun_array = get_floor_sun_display(display_floor_tin_gone_array, chun_gone, yinyang)\n\n  let horse = find_horse(time_chi)\n\n  let door_gong_idx = 0\n\n  display_door_array.forEach((d, idx) => {\n    if (d == door_and_star['door'])\n      door_gong_idx = idx\n  })\n\n\n\n  let yan_gone_array = find_yan_gone(display_tin_tin_gone_array, time_gone, time_chi, display_tin_tin_gone_array[door_gong_idx], chun_gone, yinyang, door_gong_idx)\n\n  let wong_gong = find_wong_gong(props.month_chi)\n\n  let door_fok = is_door_fok(display_door_array[0], door_seq[0]) ? \"八門伏吟\" : \"\"\n  let gone_fok = is_gone_fok(display_floor_tin_gone_array[0]['primary'], display_tin_tin_gone_array[0]) ? \"天干伏吟\" : \"\"\n  let door_fan = is_door_fan(display_door_array[0], door_seq[4]) ? \"八門反吟\" : \"\"\n  let gone_fan = is_gone_fan(display_floor_tin_gone_array[0]['primary'], display_tin_tin_gone_array[4]) ? \" 天干反吟\" : \"\"\n\n  let fanFok = door_fok || gone_fok || door_fan || gone_fan\n\n  let dataSetObj = {\n    display_floor_tin_gone_array: display_floor_tin_gone_array,\n    display_tin_tin_gone_array: display_tin_tin_gone_array,\n    display_sun_array: display_sun_array,\n    display_floor_sun_array: display_floor_sun_array,\n    display_star_array: display_star_array,\n    display_door_array: display_door_array,\n    yan_gone_array: yan_gone_array\n  }\n\n  const updateDataSet = (obj) => {\n    display_floor_tin_gone_array = obj.display_floor_tin_gone_array\n    display_tin_tin_gone_array = obj.display_tin_tin_gone_array\n    display_sun_array = obj.display_sun_array\n    display_floor_sun_array = obj.display_floor_sun_array\n    display_star_array = obj.display_star_array\n    display_door_array = obj.display_door_array\n    yan_gone_array = obj.yan_gone_array\n  }\n\n  if (!props.spin) {\n    props.initOriginalGridDataSet(dataSetObj)\n    updateDataSet(dataSetObj)\n\n  }\n  else {\n    if (props.spinLeftValue > 0 || props.spinRightValue > 0) {\n      if (props.spinLeftValue > 0) {\n        let dataSet = spinL(dataSetObj, props.spinLeftValue)\n        updateDataSet(dataSet)\n      }\n      else if (props.spinRightValue > 0) {\n        let dataSet = spinR(dataSetObj, props.spinRightValue)\n        updateDataSet(dataSet)\n      }\n    }\n    else {\n\n      updateDataSet(dataSetObj)\n    }\n  }\n\n  const gak_gok = find_gak_gok(display_floor_tin_gone_array, display_tin_tin_gone_array, door_sun_seq)\n\n  const gone_seq = spinGone(props.spinLeftValue,props.spinRightValue)\n\n  return (\n    <div className='grid_board'>\n      <Grid styleName='blue_grid' floor_tin_gone={display_floor_tin_gone_array[3]['second'] == undefined ? display_floor_tin_gone_array[3]['primary'] : display_floor_tin_gone_array[3]['primary'] + display_floor_tin_gone_array[3]['second']}\n        tin_tin_gone={display_tin_tin_gone_array[3]}\n        sun={display_sun_array[3]}\n        floor_sun={display_floor_sun_array[3]}\n        display_star={display_star_array[3]}\n        door={display_door_array[3]}\n        empty={empty_gong1 == 4 || empty_gong2 == 4}\n        harm={find_harm(4, display_tin_tin_gone_array[3], display_floor_tin_gone_array[3]['second'] == undefined ? display_floor_tin_gone_array[3]['primary'] : display_floor_tin_gone_array[3]['primary'] + display_floor_tin_gone_array[3]['second'])}\n        grave={find_grave(4, display_tin_tin_gone_array[3], display_floor_tin_gone_array[3]['second'] == undefined ? display_floor_tin_gone_array[3]['primary'] : display_floor_tin_gone_array[3]['primary'] + display_floor_tin_gone_array[3]['second'], display_sun_array[3], display_floor_sun_array[3])}\n        bik={find_bik(4, display_door_array[3])}\n        horse={horse == 4}\n        yan_gone_pri={yan_gone_array[3]['primary']}\n        yan_gone_sec={yan_gone_array[3]['second']}\n        wong={wong_gong.indexOf(4) > -1}\n        year_gone={props.year_gone}\n        month_gone={props.month_gone}\n        day_gone={props.day_gone}\n        time_gone={props.time_gone}\n        fan_or_fok={fanFok}\n        targets={props.targets}\n        goodBadGoneColor={props.goodBadGoneColor}\n        gak_gok={gak_gok[3]}\n        updateGakGok={props.updateGakGok}\n        yearGone={props.yearGone}\n        monthGone={props.monthGone}\n        dayGone={props.dayGone}\n        timeGone={props.timeGone}\n        sameGone={props.sameGone}\n        gone={gone_seq[3]}\n      />\n      <Grid styleName='yellow_grid' floor_tin_gone={display_floor_tin_gone_array[4]['second'] == undefined ? display_floor_tin_gone_array[4]['primary'] : display_floor_tin_gone_array[4]['primary'] + display_floor_tin_gone_array[4]['second']}\n        tin_tin_gone={display_tin_tin_gone_array[4]}\n        sun={display_sun_array[4]}\n        floor_sun={display_floor_sun_array[4]}\n        display_star={display_star_array[4]}\n        door={display_door_array[4]}\n        empty={empty_gong1 == 9 || empty_gong2 == 9}\n        harm={find_harm(9, display_tin_tin_gone_array[4], display_floor_tin_gone_array[4]['second'] == undefined ? display_floor_tin_gone_array[4]['primary'] : display_floor_tin_gone_array[4]['primary'] + display_floor_tin_gone_array[4]['second'])}\n        grave={find_grave(9, display_tin_tin_gone_array[4], display_floor_tin_gone_array[4]['second'] == undefined ? display_floor_tin_gone_array[4]['primary'] : display_floor_tin_gone_array[4]['primary'] + display_floor_tin_gone_array[4]['second'], display_sun_array[4], display_floor_sun_array[4])}\n        bik={find_bik(9, display_door_array[4])}\n        horse={horse == 9}\n        yan_gone_pri={yan_gone_array[4]['primary']}\n        yan_gone_sec={yan_gone_array[4]['second']}\n        wong={wong_gong.indexOf(9) > -1}\n        year_gone={props.year_gone}\n        month_gone={props.month_gone}\n        day_gone={props.day_gone}\n        time_gone={props.time_gone}\n        fan_or_fok={fanFok}\n        targets={props.targets}\n        goodBadGoneColor={props.goodBadGoneColor}\n        gak_gok={gak_gok[4]}\n        updateGakGok={props.updateGakGok}\n        yearGone={props.yearGone}\n        monthGone={props.monthGone}\n        dayGone={props.dayGone}\n        timeGone={props.timeGone}\n        sameGone={props.sameGone}\n        gone={gone_seq[4]}\n      />\n      <Grid styleName='blue_grid' floor_tin_gone={display_floor_tin_gone_array[5]['second'] == undefined ? display_floor_tin_gone_array[5]['primary'] : display_floor_tin_gone_array[5]['primary'] + display_floor_tin_gone_array[5]['second']}\n        tin_tin_gone={display_tin_tin_gone_array[5]}\n        sun={display_sun_array[5]}\n        floor_sun={display_floor_sun_array[5]}\n        display_star={display_star_array[5]}\n        door={display_door_array[5]}\n        empty={empty_gong1 == 2 || empty_gong2 == 2}\n        harm={find_harm(2, display_tin_tin_gone_array[5], display_floor_tin_gone_array[5]['second'] == undefined ? display_floor_tin_gone_array[5]['primary'] : display_floor_tin_gone_array[5]['primary'] + display_floor_tin_gone_array[5]['second'])}\n        grave={find_grave(2, display_tin_tin_gone_array[5], display_floor_tin_gone_array[5]['second'] == undefined ? display_floor_tin_gone_array[5]['primary'] : display_floor_tin_gone_array[5]['primary'] + display_floor_tin_gone_array[5]['second'], display_sun_array[5], display_floor_sun_array[5])}\n        bik={find_bik(2, display_door_array[5])}\n        horse={horse == 2}\n        yan_gone_pri={yan_gone_array[5]['primary']}\n        yan_gone_sec={yan_gone_array[5]['second']}\n        wong={wong_gong.indexOf(2) > -1}\n        year_gone={props.year_gone}\n        month_gone={props.month_gone}\n        day_gone={props.day_gone}\n        time_gone={props.time_gone}\n        fan_or_fok={fanFok}\n        targets={props.targets}\n        goodBadGoneColor={props.goodBadGoneColor}\n        gak_gok={gak_gok[5]}\n        updateGakGok={props.updateGakGok}\n        yearGone={props.yearGone}\n        monthGone={props.monthGone}\n        dayGone={props.dayGone}\n        timeGone={props.timeGone}\n        sameGone={props.sameGone}\n        gone={gone_seq[5]}\n      />\n      <Grid styleName='yellow_grid' floor_tin_gone={display_floor_tin_gone_array[2]['second'] == undefined ? display_floor_tin_gone_array[2]['primary'] : display_floor_tin_gone_array[2]['primary'] + display_floor_tin_gone_array[2]['second']}\n        tin_tin_gone={display_tin_tin_gone_array[2]}\n        sun={display_sun_array[2]}\n        floor_sun={display_floor_sun_array[2]}\n        display_star={display_star_array[2]}\n        door={display_door_array[2]}\n        empty={empty_gong1 == 3 || empty_gong2 == 3}\n        harm={find_harm(3, display_tin_tin_gone_array[2], display_floor_tin_gone_array[2]['second'] == undefined ? display_floor_tin_gone_array[2]['primary'] : display_floor_tin_gone_array[2]['primary'] + display_floor_tin_gone_array[2]['second'])}\n        grave={find_grave(3, display_tin_tin_gone_array[2], display_floor_tin_gone_array[2]['second'] == undefined ? display_floor_tin_gone_array[2]['primary'] : display_floor_tin_gone_array[2]['primary'] + display_floor_tin_gone_array[2]['second'], display_sun_array[2], display_floor_sun_array[2])}\n        bik={find_bik(3, display_door_array[2])}\n        horse={horse == 3}\n        yan_gone_pri={yan_gone_array[2]['primary']}\n        yan_gone_sec={yan_gone_array[2]['second']}\n        wong={wong_gong.indexOf(3) > -1}\n        year_gone={props.year_gone}\n        month_gone={props.month_gone}\n        day_gone={props.day_gone}\n        time_gone={props.time_gone}\n        fan_or_fok={fanFok}\n        targets={props.targets}\n        goodBadGoneColor={props.goodBadGoneColor}\n        gak_gok={gak_gok[2]}\n        updateGakGok={props.updateGakGok}\n        yearGone={props.yearGone}\n        monthGone={props.monthGone}\n        dayGone={props.dayGone}\n        timeGone={props.timeGone}\n        sameGone={props.sameGone}\n        gone={gone_seq[2]}\n      />\n      <DetailGrid\n        floor_tin_gone={display_floor_tin_gone_array[8]['primary']}\n        door={door_and_star['door']}\n        star={door_and_star['star']}\n        yinyang={yinyang}\n        gok={gok}\n        chun_chi={chun_chi}\n        chun_gone={chun_gone}\n        time_gone={time_gone}\n        time_chi={time_chi}\n      />\n      <Grid styleName='yellow_grid' floor_tin_gone={display_floor_tin_gone_array[6]['second'] == undefined ? display_floor_tin_gone_array[6]['primary'] : display_floor_tin_gone_array[6]['primary'] + display_floor_tin_gone_array[6]['second']}\n        tin_tin_gone={display_tin_tin_gone_array[6]}\n        sun={display_sun_array[6]}\n        floor_sun={display_floor_sun_array[6]}\n        display_star={display_star_array[6]}\n        door={display_door_array[6]}\n        empty={empty_gong1 == 7 || empty_gong2 == 7}\n        harm={find_harm(7, display_tin_tin_gone_array[6], display_floor_tin_gone_array[6]['second'] == undefined ? display_floor_tin_gone_array[6]['primary'] : display_floor_tin_gone_array[6]['primary'] + display_floor_tin_gone_array[6]['second'])}\n        grave={find_grave(7, display_tin_tin_gone_array[6], display_floor_tin_gone_array[6]['second'] == undefined ? display_floor_tin_gone_array[6]['primary'] : display_floor_tin_gone_array[6]['primary'] + display_floor_tin_gone_array[6]['second'], display_sun_array[6], display_floor_sun_array[6])}\n        bik={find_bik(7, display_door_array[6])}\n        horse={horse == 7}\n        yan_gone_pri={yan_gone_array[6]['primary']}\n        yan_gone_sec={yan_gone_array[6]['second']}\n        wong={wong_gong.indexOf(7) > -1}\n        year_gone={props.year_gone}\n        month_gone={props.month_gone}\n        day_gone={props.day_gone}\n        time_gone={props.time_gone}\n        fan_or_fok={fanFok}\n        targets={props.targets}\n        goodBadGoneColor={props.goodBadGoneColor}\n        gak_gok={gak_gok[6]}\n        updateGakGok={props.updateGakGok}\n        yearGone={props.yearGone}\n        monthGone={props.monthGone}\n        dayGone={props.dayGone}\n        timeGone={props.timeGone}\n        sameGone={props.sameGone}\n        gone={gone_seq[6]}\n      />\n      <Grid styleName='blue_grid' floor_tin_gone={display_floor_tin_gone_array[1]['second'] == undefined ? display_floor_tin_gone_array[1]['primary'] : display_floor_tin_gone_array[1]['primary'] + display_floor_tin_gone_array[1]['second']}\n        tin_tin_gone={display_tin_tin_gone_array[1]}\n        sun={display_sun_array[1]}\n        floor_sun={display_floor_sun_array[1]}\n        display_star={display_star_array[1]}\n        door={display_door_array[1]}\n        empty={empty_gong1 == 8 || empty_gong2 == 8}\n        harm={find_harm(8, display_tin_tin_gone_array[1], display_floor_tin_gone_array[1]['second'] == undefined ? display_floor_tin_gone_array[1]['primary'] : display_floor_tin_gone_array[1]['primary'] + display_floor_tin_gone_array[1]['second'])}\n        grave={find_grave(8, display_tin_tin_gone_array[1], display_floor_tin_gone_array[1]['second'] == undefined ? display_floor_tin_gone_array[1]['primary'] : display_floor_tin_gone_array[1]['primary'] + display_floor_tin_gone_array[1]['second'], display_sun_array[1], display_floor_sun_array[1])}\n        bik={find_bik(8, display_door_array[1])}\n        horse={horse == 8}\n        yan_gone_pri={yan_gone_array[1]['primary']}\n        yan_gone_sec={yan_gone_array[1]['second']}\n        wong={wong_gong.indexOf(8) > -1}\n        year_gone={props.year_gone}\n        month_gone={props.month_gone}\n        day_gone={props.day_gone}\n        time_gone={props.time_gone}\n        fan_or_fok={fanFok}\n        targets={props.targets}\n        goodBadGoneColor={props.goodBadGoneColor}\n        gak_gok={gak_gok[1]}\n        updateGakGok={props.updateGakGok}\n        yearGone={props.yearGone}\n        monthGone={props.monthGone}\n        dayGone={props.dayGone}\n        timeGone={props.timeGone}\n        sameGone={props.sameGone}\n        gone={gone_seq[1]}\n      />\n      <Grid styleName='yellow_grid' floor_tin_gone={display_floor_tin_gone_array[0]['second'] == undefined ? display_floor_tin_gone_array[0]['primary'] : display_floor_tin_gone_array[0]['primary'] + display_floor_tin_gone_array[0]['second']}\n        tin_tin_gone={display_tin_tin_gone_array[0]}\n        sun={display_sun_array[0]}\n        floor_sun={display_floor_sun_array[0]}\n        display_star={display_star_array[0]}\n        door={display_door_array[0]}\n        empty={empty_gong1 == 1 || empty_gong2 == 1}\n        harm={find_harm(1, display_tin_tin_gone_array[0], display_floor_tin_gone_array[0]['second'] == undefined ? display_floor_tin_gone_array[0]['primary'] : display_floor_tin_gone_array[0]['primary'] + display_floor_tin_gone_array[0]['second'])}\n        grave={find_grave(1, display_tin_tin_gone_array[0], display_floor_tin_gone_array[0]['second'] == undefined ? display_floor_tin_gone_array[0]['primary'] : display_floor_tin_gone_array[0]['primary'] + display_floor_tin_gone_array[0]['second'], display_sun_array[0], display_floor_sun_array[0])}\n        bik={find_bik(1, display_door_array[0])}\n        horse={horse == 1}\n        yan_gone_pri={yan_gone_array[0]['primary']}\n        yan_gone_sec={yan_gone_array[0]['second']}\n        wong={wong_gong.indexOf(1) > -1}\n        year_gone={props.year_gone}\n        month_gone={props.month_gone}\n        day_gone={props.day_gone}\n        time_gone={props.time_gone}\n        fan_or_fok={fanFok}\n        targets={props.targets}\n        goodBadGoneColor={props.goodBadGoneColor}\n        gak_gok={gak_gok[0]}\n        updateGakGok={props.updateGakGok}\n        yearGone={props.yearGone}\n        monthGone={props.monthGone}\n        dayGone={props.dayGone}\n        timeGone={props.timeGone}\n        sameGone={props.sameGone}\n        gone={gone_seq[0]}\n      />\n      <Grid styleName='blue_grid' floor_tin_gone={display_floor_tin_gone_array[7]['second'] == undefined ? display_floor_tin_gone_array[7]['primary'] : display_floor_tin_gone_array[7]['primary'] + display_floor_tin_gone_array[7]['second']}\n        tin_tin_gone={display_tin_tin_gone_array[7]}\n        sun={display_sun_array[7]}\n        floor_sun={display_floor_sun_array[7]}\n        display_star={display_star_array[7]}\n        door={display_door_array[7]}\n        empty={empty_gong1 == 6 || empty_gong2 == 6}\n        harm={find_harm(6, display_tin_tin_gone_array[7], display_floor_tin_gone_array[7]['second'] == undefined ? display_floor_tin_gone_array[7]['primary'] : display_floor_tin_gone_array[7]['primary'] + display_floor_tin_gone_array[7]['second'])}\n        grave={find_grave(6, display_tin_tin_gone_array[7], display_floor_tin_gone_array[7]['second'] == undefined ? display_floor_tin_gone_array[7]['primary'] : display_floor_tin_gone_array[7]['primary'] + display_floor_tin_gone_array[7]['second'], display_sun_array[7], display_floor_sun_array[7])}\n        bik={find_bik(6, display_door_array[7])}\n        horse={horse == 6}\n        yan_gone_pri={yan_gone_array[7]['primary']}\n        yan_gone_sec={yan_gone_array[7]['second']}\n        wong={wong_gong.indexOf(6) > -1}\n        year_gone={props.year_gone}\n        month_gone={props.month_gone}\n        day_gone={props.day_gone}\n        time_gone={props.time_gone}\n        fan_or_fok={fanFok}\n        targets={props.targets}\n        goodBadGoneColor={props.goodBadGoneColor}\n        gak_gok={gak_gok[7]}\n        updateGakGok={props.updateGakGok}\n        yearGone={props.yearGone}\n        monthGone={props.monthGone}\n        dayGone={props.dayGone}\n        timeGone={props.timeGone}\n        sameGone={props.sameGone}\n        gone={gone_seq[7]}\n      />\n\n    </div>\n  )\n}\n","import React from 'react'\r\nimport {\r\n  tin_gone_seq, star_seq, door_seq, door_sun_seq,\r\n  find_gok, floor_tin_gone, find_empty_and_chun, find_door_and_star,\r\n  get_floor_tin_gone_display, get_star_display, get_tin_tin_gone_display, get_door_display, get_sun_display, get_floor_sun_display,\r\n  find_empty_gong, find_harm, find_grave, find_bik, find_horse, find_yan_gone,\r\n  spinL,spinR\r\n} from \"../js/main.js\"\r\n\r\nimport {\r\n  is_door_fok, is_gone_fok, is_door_fan, is_gone_fan, is_tin_gone_conflicts, is_tin_gone_merges,\r\n  is_theif_gok,is_change_gok,is_leave_gok,find_gak_gok\r\n} from '../js/notes.js'\r\n\r\nexport default function Notes(props) {\r\n  let time_gone = props.time_gone\r\n  let time_chi = props.time_chi\r\n  let time_gone_chi = time_gone + time_chi\r\n\r\n  let empty_and_chun = find_empty_and_chun(time_gone_chi);\r\n  let gok = find_gok(props.year_chi, props.month_chi, props.day, props.time_chi)\r\n  let yinyang = props.yinyang\r\n\r\n\r\n\r\n  let chun_gone = empty_and_chun['chun_gone']\r\n  let chun_chi = empty_and_chun['chun_chi']\r\n\r\n  let empty_gong1 = find_empty_gong(empty_and_chun['empty1'])\r\n  let empty_gong2 = find_empty_gong(empty_and_chun['empty2'])\r\n\r\n  let door_and_star = find_door_and_star(floor_tin_gone(gok, yinyang), chun_gone)\r\n\r\n  let floor_tin_gone_seq = floor_tin_gone(gok, yinyang)\r\n  let display_floor_tin_gone_array = get_floor_tin_gone_display(floor_tin_gone_seq)\r\n\r\n  // \r\n\r\n  let display_star_array = get_star_display(display_floor_tin_gone_array, time_gone, time_chi, door_and_star['star'])\r\n  let display_tin_tin_gone_array = get_tin_tin_gone_display(display_star_array, display_floor_tin_gone_array)\r\n\r\n  let display_door_array = get_door_display(display_floor_tin_gone_array, chun_gone, chun_chi, time_chi, yinyang, door_and_star['door'])\r\n\r\n  let display_sun_array = get_sun_display(display_tin_tin_gone_array, chun_gone, yinyang)\r\n  let display_floor_sun_array = get_floor_sun_display(display_floor_tin_gone_array, chun_gone, yinyang)\r\n\r\n  let horse = find_horse(time_chi)\r\n\r\n  let door_gong_idx = 0\r\n\r\n  display_door_array.forEach((d, idx) => {\r\n    if (d == door_and_star['door'])\r\n      door_gong_idx = idx\r\n  })\r\n\r\n\r\n\r\n  let yan_gone_array = find_yan_gone(display_tin_tin_gone_array, time_gone, time_chi, display_tin_tin_gone_array[door_gong_idx], chun_gone, yinyang, door_gong_idx)\r\n\r\n  //for remarks\r\n  let dataSetObj = {\r\n    display_floor_tin_gone_array:display_floor_tin_gone_array,\r\n    display_tin_tin_gone_array:display_tin_tin_gone_array,\r\n    display_sun_array:display_sun_array,\r\n    display_floor_sun_array:display_floor_sun_array,\r\n    display_star_array:display_star_array,\r\n    display_door_array:display_door_array,\r\n    yan_gone_array:yan_gone_array\r\n  }\r\n\r\n  const updateDataSet = (obj) =>{\r\n    display_floor_tin_gone_array=obj.display_floor_tin_gone_array\r\n    display_tin_tin_gone_array=obj.display_tin_tin_gone_array\r\n    display_sun_array=obj.display_sun_array\r\n    display_floor_sun_array=obj.display_floor_sun_array\r\n    display_star_array=obj.display_star_array\r\n    display_door_array=obj.display_door_array\r\n    yan_gone_array=obj.yan_gone_array\r\n  }\r\n\r\n  if(!props.spin){\r\n    props.initOriginalGridDataSet(dataSetObj)\r\n    updateDataSet(dataSetObj)\r\n  }\r\n  else{\r\n    if(props.spinLeftValue > 0 || props.spinRightValue > 0){\r\n      if(props.spinLeftValue > 0){\r\n        updateDataSet(spinL(dataSetObj,props.spinLeftValue))\r\n      }\r\n      else if(props.spinRightValue > 0){\r\n        \r\n        updateDataSet(spinR(dataSetObj,props.spinRightValue))\r\n      }\r\n    }\r\n    else{\r\n      \r\n      updateDataSet(dataSetObj)\r\n    }\r\n  }\r\n  let door_fok = is_door_fok(display_door_array[0], door_seq[0]) ? \"八門伏吟\" : \"\"\r\n\r\n  let gone_fok = is_gone_fok(display_floor_tin_gone_array[0]['primary'], display_tin_tin_gone_array[0]) ? \"天干伏吟\" : \"\"\r\n\r\n  let door_fan = is_door_fan(display_door_array[0], door_seq[4]) ? \"八門反吟\" : \"\"\r\n  let gone_fan = is_gone_fan(display_floor_tin_gone_array[0]['primary'], display_tin_tin_gone_array[4]) ? \" 天干反吟\" : \"\"\r\n\r\n  const notes = [door_fok, gone_fok, door_fan, gone_fan]\r\n  const conflicts = is_tin_gone_conflicts(display_floor_tin_gone_array, display_tin_tin_gone_array, door_sun_seq)\r\n  const merges = is_tin_gone_merges(display_floor_tin_gone_array, display_tin_tin_gone_array, display_sun_array, display_floor_sun_array, door_sun_seq)\r\n  const theifs = is_theif_gok(display_floor_tin_gone_array,display_tin_tin_gone_array,door_sun_seq)\r\n  const changes = is_change_gok(display_floor_tin_gone_array,display_tin_tin_gone_array,door_sun_seq)\r\n  const leaves = is_leave_gok(display_floor_tin_gone_array,display_tin_tin_gone_array,door_sun_seq)\r\n\r\n  return (\r\n    <div className='alert alert-warning'>\r\n      <div className='message'>\r\n        {\r\n          notes.map((n) => {\r\n            if (n != \"\")\r\n              return (\r\n                <span className='harm_notes' key={`notes_${n}`}>{n}</span>\r\n              )\r\n          })\r\n        }\r\n      </div>\r\n      <div className='message'>\r\n        {\r\n          conflicts.map((n) => {\r\n            if (n != \"\")\r\n              return (\r\n                <span key={`conflicts_${n}`}>[{n}] 天干相沖</span>\r\n              )\r\n          })\r\n        }\r\n      </div>\r\n      <div className='message'>\r\n        {\r\n          merges.map((n) => {\r\n            if (n != \"\")\r\n              return (\r\n                <span key={`merges_${n}`}>[{n}] 天干相合</span>\r\n              )\r\n          })\r\n        }\r\n      </div>\r\n      <div className='message'>\r\n        {\r\n          theifs.map((n) => {\r\n            if (n != \"\")\r\n              return (\r\n                <span className='harm_notes' key={`theifs_${n}`}>[{n}] 賊局</span>\r\n              )\r\n          })\r\n        }\r\n      </div>\r\n      <div className='message'>\r\n        {\r\n          changes.map((n) => {\r\n            if (n != \"\")\r\n              return (\r\n                  <span key={`changes_${n}`}>[{n}] 換</span>\r\n              )\r\n          })\r\n        }\r\n      </div>\r\n      <div className='message'>\r\n        {\r\n          leaves.map((n) => {\r\n            if (n != \"\")\r\n              return (\r\n                <span className='harm_notes' key={`leaves_${n}`}>[{n}] 離散</span>\r\n              )\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import solar from './solar.json'\r\nconst solar_JSON_starting_year = 1900\r\n\r\nconst find_solar_terms = async (terms, year) => {\r\n    const solar_term_api_url = `https://api.timelessq.com/time/jieqi?year=${year}`\r\n\r\n\r\n    const response = await fetch(solar_term_api_url);\r\n    const data = await response.json();\r\n\r\n    let result = new Date()\r\n\r\n    data['data'].forEach((d) => {\r\n        if (d['name'] == terms) {\r\n\r\n            result = new Date(d['time'])\r\n        }\r\n    });\r\n\r\n    return result\r\n}\r\n\r\nconst find_solar_terms_offline = async (terms, year) => {\r\n    const data = solar[year - solar_JSON_starting_year]\r\n    let result = new Date()\r\n\r\n    data['data'].forEach((d) => {\r\n        if (d['name'] == terms) {\r\n\r\n            result = new Date(d['time'])\r\n        }\r\n    });\r\n\r\n    return result\r\n}\r\n\r\nconst find_current_solar_terms = async (months, year) => {\r\n\r\n    const last_year_solar_term_api_url = `https://api.timelessq.com/time/jieqi?year=${year - 1}`\r\n    const solar_term_api_url = `https://api.timelessq.com/time/jieqi?year=${year}`\r\n\r\n\r\n    const last_year_resp = await fetch(last_year_solar_term_api_url);\r\n    const last_year_data = await last_year_resp.json();\r\n\r\n    const response = await fetch(solar_term_api_url);\r\n    const data = await response.json();\r\n\r\n    let last_year_last_st;\r\n    let array_current_year = []\r\n\r\n\r\n    last_year_data['data'].forEach((d, idx) => {\r\n        if (idx == 24) {\r\n            let t_date = new Date(d['time'])\r\n            last_year_last_st = t_date\r\n        }\r\n    })\r\n\r\n\r\n\r\n    data['data'].forEach((d, idx) => {\r\n        if (idx == 0 || idx % 2 == 0) {\r\n            let t_date = new Date(d['time'])\r\n            if (t_date.getFullYear() == year)\r\n                array_current_year.push(t_date)\r\n        }\r\n    });\r\n\r\n\r\n\r\n    return { first: months == 0 ? last_year_last_st : array_current_year[months - 1], second: array_current_year[months] }\r\n}\r\n\r\nconst find_current_solar_terms_offline = async (months, year) => {\r\n\r\n    const last_year_data = solar[year - solar_JSON_starting_year - 1]\r\n\r\n    const data = solar[year - solar_JSON_starting_year]\r\n\r\n    let last_year_last_st;\r\n    let array_current_year = []\r\n\r\n\r\n    last_year_data['data'].forEach((d, idx) => {\r\n        if (idx == 24) {\r\n            let t_date = new Date(d['time'])\r\n            last_year_last_st = t_date\r\n        }\r\n    })\r\n\r\n\r\n\r\n    data['data'].forEach((d, idx) => {\r\n        if (idx == 0 || idx % 2 == 0) {\r\n            let t_date = new Date(d['time'])\r\n            if (t_date.getFullYear() == year)\r\n                array_current_year.push(t_date)\r\n        }\r\n    });\r\n\r\n\r\n\r\n    return { first: months == 0 ? last_year_last_st : array_current_year[months - 1], second: array_current_year[months] }\r\n}\r\n\r\nconst roundToNearestMinute = function (date) {\r\n    var coeff = 1000 * 60 * 1; // <-- Replace {5} with interval\r\n\r\n    return new Date(Math.round(date.getTime() / coeff) * coeff);\r\n};\r\n\r\nexport { find_solar_terms, find_current_solar_terms, find_solar_terms_offline, find_current_solar_terms_offline, roundToNearestMinute }","import logo from './logo.svg';\nimport packageJson from '../package.json';\nimport './App.css';\nimport './css/main.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport { version_info } from './js/version_info.js'\nimport Accordion from 'react-bootstrap/Accordion';\nimport Modal from 'react-bootstrap/Modal';\nimport Alert from 'react-bootstrap/Alert';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport GridBoard from './Component/GridBoard';\nimport Notes from './Component/Notes'\nimport lunisolar from 'lunisolar'\nimport React, { useState, useEffect, useRef } from 'react'\nimport ReactLoading from 'react-loading';\nimport { tin_gone_10_str, floor12_str, getSolarTerm, door_seq, star_seq, sun_seq, tin_gone_seq, removeItemOnce, gong_seq, nearestDates, findSameGone } from './js/main.js'\nimport { find_solar_terms, find_current_solar_terms, find_solar_terms_offline, find_current_solar_terms_offline, roundToNearestMinute } from './js/solarTerms.js'\n\nfunction App() {\n  // const [dateInput, setDateInput] = useState(new Date())\n  const [d, setD] = useState(lunisolar(new Date()))\n  const [yinyang, setYinyang] = useState(1)\n  const [char8, setChar8] = useState({\n    year: d.format('cY cM cD cH').split(\" \")[0],\n    month: d.format('cY cM cD cH').split(\" \")[1],\n    day: d.format('cY cM cD cH').split(\" \")[2],\n    time: d.format('cY cM cD cH').split(\" \")[3]\n  })\n\n  let originalDataSetObj = {\n    display_floor_tin_gone_array: [],\n    display_tin_tin_gone_array: [],\n    display_sun_array: [],\n    display_floor_sun_array: [],\n    display_star_array: [],\n    display_door_array: [],\n    yan_gone_array: []\n  }\n\n  const [haziDate, setHaziDate] = useState(new Date())\n  const [dongziDate, setDongziDate] = useState(new Date())\n  const [previousZit, setPreviousZit] = useState(new Date().getTime())\n  const [currentZit, setCurrentZit] = useState(new Date().getTime())\n  const [dateUpdated, setDateUpdated] = useState(false)\n  const [yearUpdated, setYearUpdated] = useState(false)\n  const [fan_or_fok, setFan_or_fok] = useState(false)\n  const [spin, setSpin] = useState(false)\n  const [spinLeftValue, setSpinLeftValue] = useState(0)\n  const [spinRightValue, setSpinRightValue] = useState(0)\n  const [targets, setTargets] = useState([])\n  const [showTargets, setShowTargets] = useState(false)\n  const [goodBadGoneColor, setGoodBadGoneColor] = useState(false)\n  const [selectedGone, setSelectedGone] = useState(-1)\n  const [gakgokDesc, setGakgokDesc] = useState([])\n  const [showModal, setShowModal] = useState(false);\n  const [yearGone, setYearGone] = useState(-1)\n  const [monthGone, setMonthGone] = useState(-1)\n  const [dayGone, setDayGone] = useState(-1)\n  const [timeGone, setTimeGone] = useState(-1)\n  const [savedTime, setSavedTime] = useState(JSON.parse(localStorage.getItem(\"savedTime\")) || [])\n  const [savedRemarks, setSavedRemarks] = useState(JSON.parse(localStorage.getItem(\"savedRemarks\")) || [])\n  const [key, setKey] = useState('main')\n  const [visibleAlert, setVisibleAlert] = useState(false)\n  const [importAlert, setImportAlert] = useState(false)\n  const [showVersionInfo, setShowVersionInfo] = useState(true)\n  const [importError, setImportError] = useState(false)\n  const [sameGone, setSameGone] = useState(new Set())\n\n  const handleClose = () => setShowModal(false);\n  const handleShow = () => setShowModal(true);\n\n  const dateInput = useRef(\"\")\n  const remarksRef = useRef(null)\n  const fileRef = useRef(null)\n  const yearGoneInput = useRef(null)\n  const monthGoneInput = useRef(null)\n  const dayGoneInput = useRef(null)\n  const timeGoneInput = useRef(null)\n  const [goneDates, setGoneDates] = useState(nearestDates(d))\n\n  const importButton = (e) => {\n    fileRef.current.click();\n  }\n\n  const showImportModal = (e) => setImportAlert(true)\n  const hideImportModal = (e) => setImportAlert(false)\n\n\n  const exportData = () => {\n    let objArray = []\n    savedTime.forEach((t, idx) => {\n      objArray.push({\n        time: t,\n        remarks: savedRemarks[idx]\n      })\n    });\n\n    const jsonString = `data:text/json;chatset=utf-8,${encodeURIComponent(\n      JSON.stringify(objArray)\n    )}`;\n    const link = document.createElement(\"a\");\n    link.href = jsonString;\n    link.download = \"saved.json\";\n\n    link.click();\n  };\n\n  const importData = (e) => {\n    const fileReader = new FileReader();\n    fileReader.readAsText(e.target.files[0], \"UTF-8\");\n    fileReader.onload = e => {\n      try {\n        let jsonArray = JSON.parse(e.target.result)\n\n        let t_savedTime = []\n        let t_savedRemarks = []\n\n        jsonArray.forEach(obj => {\n          let t = obj.time\n          let r = obj.remarks\n\n          t_savedTime.push(t)\n          t_savedRemarks.push(r)\n        })\n\n        if (t_savedTime.length > 0) {\n          setSavedTime(t_savedTime)\n          setSavedRemarks(t_savedRemarks)\n          localStorage.setItem(\"savedTime\", JSON.stringify(t_savedTime));\n          localStorage.setItem(\"savedRemarks\", JSON.stringify(t_savedRemarks));\n        }\n      }\n      catch (e) {\n        setImportError(true)\n      }\n    };\n\n    hideImportModal()\n  };\n\n  const saveTimeAlert = () => {\n    setVisibleAlert(true)\n    setTimeout(() => {\n      setVisibleAlert(false)\n    }, 2000);\n  }\n\n  const saveTime = () => {\n    let t = dateInput.current.value\n    let r = remarksRef.current.value\n    if (savedTime.indexOf(t) < 0) {\n      setSavedTime([...savedTime, t])\n      setSavedRemarks([...savedRemarks, r === '' ? \"沒有備註\" : r])\n      saveTimeAlert()\n    }\n    localStorage.setItem(\"savedTime\", JSON.stringify([...savedTime, t]));\n    localStorage.setItem(\"savedRemarks\", JSON.stringify([...savedRemarks, r === '' ? \"沒有備註\" : r]));\n  }\n\n  const removeTime = (t) => {\n    let temp_array = []\n    let temp_remarks_array = []\n    if (savedTime.length > 1) {\n      let idx = savedTime.indexOf(t)\n      temp_array = removeItemOnce(savedTime, t)\n      temp_remarks_array = removeItemOnce(savedRemarks, savedRemarks[idx])\n      setSavedTime([...temp_array])\n      setSavedRemarks([...temp_remarks_array])\n      localStorage.setItem(\"savedTime\", JSON.stringify([...savedTime]));\n      localStorage.setItem(\"savedRemarks\", JSON.stringify([...savedRemarks]));\n    }\n    else {\n      setSavedTime([])\n      setSavedRemarks([])\n      localStorage.setItem(\"savedTime\", JSON.stringify([]));\n      localStorage.setItem(\"savedRemarks\", JSON.stringify([]));\n    }\n\n  }\n\n  const loadTime = (t) => {\n    dateInput.current.value = t\n    let idx = savedTime.indexOf(t)\n    remarksRef.current.value = savedRemarks[idx]\n    setD(lunisolar(new Date(t)))\n    updateDateStr()\n\n    setKey('main')\n  }\n\n  const updateGakGok = (gakgok) => {\n    // console.log(`gakgok=${JSON.stringify(gakgok)}`);\n    setSelectedGone(gakgok.seq)\n    setGakgokDesc(gakgok.gakgok)\n    handleShow()\n  }\n\n  const initOriginalGridDataSet = (dataSetObj) => {\n\n    originalDataSetObj = dataSetObj\n  }\n\n  const showHideTargets = (event) => {\n    setShowTargets(!showTargets)\n  }\n\n  const goneColor = (event) => {\n    setGoodBadGoneColor(!goodBadGoneColor)\n  }\n\n  const updateTargets = (event) => {\n    if (targets.indexOf(event.target.text) > -1) {\n      let temp_array = []\n      if (targets.length > 1) {\n        temp_array = removeItemOnce(targets, event.target.text)\n        setTargets([...targets, temp_array])\n      }\n      else\n        setTargets([])\n    }\n    else {\n      setTargets([...targets, event.target.text])\n    }\n    /*\n    if (event.target.checked)\n      setTargets([...targets, event.target.value])\n    else {\n      let temp_array = []\n      if (targets.length > 1) {\n        temp_array = removeItemOnce(targets, event.target.value)\n        setTargets(...temp_array)\n      }\n      else\n        setTargets([])\n    }\n    */\n  }\n\n  const clearTargets = (event) => {\n    setTargets([])\n\n  }\n\n  // yyyy-mm-ddTHH:MM\n  let year = \"\" + d.toDate().getFullYear()\n  let month = \"\" + (d.toDate().getMonth() + 1)\n  month = month.padStart(2, '0')\n  let day = \"\" + d.toDate().getDate()\n  day = day.padStart(2, '0')\n  let hour = \"\" + d.toDate().getHours()\n  hour = hour.padStart(2, '0')\n  let min = \"\" + d.toDate().getMinutes()\n  min = min.padStart(2, '0')\n\n  // const [dateTimeStr, setDateTimeStr] = useState()\n\n\n\n  // var yinyang = 0\n\n  const resetGones = () => {\n    setYearGone(-1)\n    setMonthGone(-1)\n    setDayGone(-1)\n    setTimeGone(-1)\n    yearGoneInput.current.value = -1\n    monthGoneInput.current.value = -1\n    dayGoneInput.current.value = -1\n    timeGoneInput.current.value = -1\n  }\n\n  const updateDateStr = () => {\n    setSelectedGone(-1)\n    setGakgokDesc([])\n    setDateUpdated(false)\n    resetGones()\n\n    year = \"\" + d.toDate().getFullYear()\n    month = \"\" + (d.toDate().getMonth() + 1)\n    month = month.padStart(2, '0')\n    day = \"\" + d.toDate().getDate()\n    day = day.padStart(2, '0')\n    hour = \"\" + d.toDate().getHours()\n    hour = hour.padStart(2, '0')\n    min = \"\" + d.toDate().getMinutes()\n    min = min.padStart(2, '0')\n  }\n\n  const inputChange = (event) => {\n    if (!isNaN(new Date(event.target.value))) {\n      setD(lunisolar(new Date(event.target.value)))\n      updateDateStr()\n    }\n    remarksRef.current.value = \"\"\n  }\n\n  const addDayClick = (event) => {\n    let date = d.toDate()\n    date.setDate(date.getDate() + 1)\n    setD(lunisolar(new Date(date)))\n\n    updateDateStr()\n    remarksRef.current.value = \"\"\n\n  }\n\n  const reduceDayClick = (event) => {\n    let date = d.toDate()\n    date.setDate(date.getDate() - 1)\n    setD(lunisolar(new Date(date)))\n\n    updateDateStr()\n    remarksRef.current.value = \"\"\n\n  }\n\n  const addHourClick = (event) => {\n    let date = d.toDate()\n    if (date.getHours() % 2 == 0) {\n      date.setHours(date.getHours() + 1)\n    }\n    else\n      date.setHours(date.getHours() + 2)\n\n    setD(lunisolar(new Date(date)))\n\n    updateDateStr()\n    remarksRef.current.value = \"\"\n\n  }\n\n  const reduceHourClick = (event) => {\n    let date = d.toDate()\n    if (date.getHours() % 2 == 0) {\n      date.setHours(date.getHours() - 3)\n    }\n    else\n      date.setHours(date.getHours() - 2)\n\n    setD(lunisolar(new Date(date)))\n\n    updateDateStr()\n    remarksRef.current.value = \"\"\n\n  }\n\n  const resetNowClick = (event) => {\n    setD(lunisolar(new Date()))\n    updateDateStr()\n    remarksRef.current.value = \"\"\n  }\n\n  const originalClick = (event) => {\n    setSpin(false)\n    setSpinLeftValue(0)\n    setSpinRightValue(0)\n    setSelectedGone(-1)\n    setGakgokDesc([])\n  }\n\n  const spinLeft = (event) => {\n    setSpin(true)\n    setSpinRightValue(0)\n\n    if (spinLeftValue + 1 >= 8)\n      setSpinLeftValue(0)\n    else\n      setSpinLeftValue(spinLeftValue + 1)\n\n    setSelectedGone(-1)\n    setGakgokDesc([])\n  }\n\n  const spinRight = (event) => {\n    setSpin(true)\n    setSpinLeftValue(0)\n\n    if (spinRightValue + 1 >= 8)\n      setSpinRightValue(0)\n    else\n      setSpinRightValue(spinRightValue + 1)\n\n    setSelectedGone(-1)\n    setGakgokDesc([])\n  }\n\n\n  useEffect(() => {\n    // let haziDate = getSolarTerm(d.toDate().getFullYear(), 11);\n    // let currentZit = getSolarTerm(d.toDate().getFullYear(), (d.toDate().getMonth()) * 2)\n    const fetchHazi = async () => {\n      const response = await find_solar_terms_offline(\"夏至\", d.toDate().getFullYear())\n      // .then((result) => haziDate = new Date(result))\n      const _haziDate = response\n      setHaziDate(_haziDate)\n    }\n\n    const fetchDongzi = async () => {\n      const response = await find_solar_terms_offline(\"冬至\", d.toDate().getFullYear())\n      // .then((result) => haziDate = new Date(result))\n      const _dongziDate = response\n      setDongziDate(_dongziDate)\n    }\n\n    const fetchCurrentZit = async (datetime) => {\n      const response = await find_current_solar_terms_offline(d.toDate().getMonth(), d.toDate().getFullYear())\n      // .then((result) => currentZit = new Date(result))\n      let first = response['first']\n      let second = response['second']\n      // if (roundToNearestMinute(datetime).getTime() >= roundToNearestMinute(first).getTime()) {\n\n      //   setCurrentZit(first.getTime())\n      // }\n\n      setPreviousZit(first.getTime())\n      // if (roundToNearestMinute(datetime).getTime() >= roundToNearestMinute(second).getTime()) {\n      setCurrentZit(second.getTime())\n      // }\n      // \n    }\n\n\n    fetchHazi()\n    fetchDongzi()\n    fetchCurrentZit(d.toDate())\n\n    // let hazi = lunisolar.SolarTerm.findDate(d.toDate().getFullYear(), 9, {})\n    // let haziDate = new Date(hazi[0], hazi[1], hazi[2])\n    // let donzi = lunisolar.SolarTerm.findDate(d.toDate().getFullYear(), 21, {})\n    // let donziDate = new Date(donzi[0], donzi[1], donzi[2])\n    if (d.toDate().getTime() < haziDate) {\n      setYinyang(1)\n    }\n    else if (d.toDate().getTime() >= dongziDate) {\n      setYinyang(1)\n    }\n    else if (d.toDate().getTime() >= haziDate && d.toDate().getTime() < dongziDate) {\n      setYinyang(0)\n    }\n\n    let char8_splits = d.format('cY cM cD cH').split(\" \")\n\n\n\n\n    // \n\n\n    if (\n      roundToNearestMinute(d.toDate()).getTime() <= roundToNearestMinute(new Date(currentZit)).getTime()\n    ) {\n      let t_c_splits = char8_splits[1].split(\"\")\n      let year_splits = char8_splits[0].split(\"\")\n\n\n      if (t_c_splits.length == 2) {\n        let gone_idx = tin_gone_10_str.indexOf(t_c_splits[0])\n        let chi_idx = floor12_str.indexOf(t_c_splits[1])\n\n        let new_gone = t_c_splits[0]\n        let new_chi = t_c_splits[1]\n\n        let year_gone_idx = tin_gone_10_str.indexOf(year_splits[0])\n        let year_chi_idx = floor12_str.indexOf(year_splits[1])\n\n        let new_year_gone = year_splits[0]\n        let new_year_chi = year_splits[1]\n\n        // if(month === \"01\"){\n        let currentZitDate = new Date(currentZit)\n\n\n        // console.log(`currentZitDate=${currentZitDate}`);\n        // console.log(`d.toDate()=${d.toDate()}`);\n        // console.log(`d.toDate().getDate() = ${d.toDate().getDate()}`);\n        // console.log(`currentZitDate.getDate() = ${currentZitDate.getDate()}`);\n        // console.log(`d.toDate().getHours() = ${d.toDate().getHours()}`);\n        // console.log(`d.toDate().getDate() == currentZitDate.getDate() = ${d.toDate().getDate() == currentZitDate.getDate()}`);\n        // console.log(`d.toDate().getHours() <= currentZitDate.getHours() = ${d.toDate().getHours() <= currentZitDate.getHours()}`);\n        // console.log(`d.toDate().getMinutes() <= currentZitDate.getMinutes() = ${d.toDate().getMinutes() <= currentZitDate.getMinutes()}`);\n        if (\n          (\n            d.toDate().getDate() == currentZitDate.getDate() - 1\n            &&\n            d.toDate().getHours() >= 23\n          )\n          ||\n          (\n            d.toDate().getDate() == currentZitDate.getDate()\n            &&\n            (\n              d.toDate().getHours() < currentZitDate.getHours() ||\n              (d.toDate().getHours() == currentZitDate.getHours() && d.toDate().getMinutes() <= currentZitDate.getMinutes())\n            )\n          )\n        ) {\n          if (gone_idx == 0) {\n            // if (roundToNearestMinute(d.toDate()).getTime() < previousZit)\n            new_gone = tin_gone_10_str[tin_gone_10_str.length - 1]\n          }\n          else {\n            if (d.lunar.month - 1 != gone_idx)\n              new_gone = tin_gone_10_str[gone_idx - 1]\n          }\n\n          if (chi_idx == 0) {\n            // if (roundToNearestMinute(d.toDate()).getTime() < previousZit)\n            new_chi = floor12_str[floor12_str.length - 1]\n          }\n          else {\n            if (d.lunar.month - 1 != gone_idx)\n              new_chi = floor12_str[chi_idx - 1]\n          }\n          // console.log(`month=${month}`);\n          if (month === \"02\") {\n            // console.log(`year_gone_idx=${year_gone_idx} year_chi_idx=${year_chi_idx}`);\n            if (year_gone_idx == 0) {\n              new_year_gone = tin_gone_10_str[tin_gone_10_str.length - 1]\n            }\n            else {\n              if (11 != year_gone_idx)\n                new_year_gone = tin_gone_10_str[year_gone_idx - 1]\n            }\n\n            if (year_chi_idx == 0) {\n              new_year_chi = floor12_str[floor12_str.length - 1]\n            }\n            else {\n              if (11 != year_gone_idx)\n                new_year_chi = floor12_str[year_chi_idx - 1]\n            }\n          }\n          // console.log(`new_year_gone=${new_year_gone} new_year_chi=${new_year_chi}`);\n        }\n        // }\n        // else {\n        //     // if(oldMonth !== char8_splits[1]){\n\n        //         if (gone_idx == 0) {\n        //           // if (roundToNearestMinute(d.toDate()).getTime() < previousZit)\n        //             new_gone = tin_gone_10_str[tin_gone_10_str.length - 1]\n        //         }\n        //         else {\n        //           if (d.lunar.month - 1 != gone_idx)\n        //             new_gone = tin_gone_10_str[gone_idx - 1]\n        //         }\n\n        //         if (chi_idx == 0) {\n        //           // if (roundToNearestMinute(d.toDate()).getTime() < previousZit)\n        //             new_chi = floor12_str[floor12_str.length - 1]\n        //         }\n        //         else { \n        //           if (d.lunar.month - 1 != gone_idx)\n        //             new_chi = floor12_str[chi_idx - 1]\n        //         }\n\n\n        //       // }\n\n        //   }\n        char8_splits[0] = new_year_gone + new_year_chi\n        char8_splits[1] = new_gone + new_chi\n\n        setChar8({ year: char8_splits[0], month: char8_splits[1], day: char8_splits[2], time: char8_splits[3] })\n      }\n    }\n    else {\n      setChar8({ year: char8_splits[0], month: char8_splits[1], day: char8_splits[2], time: char8_splits[3] })\n    }\n\n    setDateUpdated(true)\n    setGoneDates(nearestDates(d))\n\n    setSameGone(findSameGone(char8,d,yinyang))\n  }, [d.toDate().getTime(), char8.year, char8.month, char8.day, char8.time, haziDate.getTime(), currentZit, dateUpdated, spinLeftValue, spinRightValue, targets, showTargets, yearGone, monthGone, dayGone, timeGone])\n\n  return (\n    <div className=\"App\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"></meta>\n      <Tabs\n        defaultActiveKey=\"main\"\n        activeKey={key}\n        onSelect={(k) => setKey(k)}\n        id=\"justify-tab-example\"\n        className=\"mb-3 tabPage\"\n        justify\n      >\n        <Tab eventKey=\"main\" title=\"開盤\">\n          <div className='top_message_div'>\n            <Alert variant='warning' dismissible>親愛的師兄弟姐妹們：請緊記一切以師父Excel顯示的為最準確。</Alert>\n          </div>\n          <div className='header_div'>\n            <Container>\n              <Row>\n                <Col xs={3} ><label>本局備註：</label></Col>\n                <Col><input className='form-control' ref={remarksRef} type='text' placeholder='人在/人不在/催財局/etc.' /></Col>\n              </Row>\n              <Row>\n                <Col xs={3}><label>日期 ：</label></Col>\n                <Col><input ref={dateInput} onChange={(e) => inputChange(e)} className='form-control' type=\"datetime-local\" name=\"dateInput\"\n                  value={`${year}-${month}-${day}T${hour}:${min}`}\n                  min=\"1900-01-01T00:00\"\n                  max=\"2099-12-31T23:59\"\n                /></Col>\n              </Row>\n              <Row>\n                <Col>\n                  <div className='button_row'>\n                    <input type='button' className='btn btn-secondary' onClick={(e) => resetNowClick(e)} value=\"現在時間\" />\n                    <input type='button' className='btn btn-secondary' onClick={(e) => originalClick(e)} value=\"原來宮位\" />\n                    <input type='button' className='btn btn-secondary' onClick={(e) => reduceDayClick(e)} value=\"上一日\" />\n                    <input type='button' className='btn btn-secondary' onClick={(e) => addDayClick(e)} value=\"下一日\" />\n                    <input type='button' className='btn btn-secondary' onClick={(e) => reduceHourClick(e)} value=\"上一時辰\" />\n                    <input type='button' className='btn btn-secondary' onClick={(e) => addHourClick(e)} value=\"下一時辰\" />\n                    <input type='button' className='btn btn-secondary' onClick={(e) => spinLeft(e)} value={`順轉 [${spinLeftValue}]`} />\n                    <input type='button' className='btn btn-secondary' onClick={(e) => spinRight(e)} value={`逆轉 [${spinRightValue}]`} />\n                    <input type='button' className={`btn ${showTargets ? 'btn-warning' : 'btn-dark'}`} onClick={showHideTargets} value=\"用神落宮標示\" />\n                    <input type='button' className={`btn ${goodBadGoneColor ? 'btn-warning' : 'btn-dark'}`} onClick={goneColor} value=\"宮位吉凶標示\" />\n                  </div>\n                </Col>\n                <Col>\n                  <div className='char8_day'>\n                    <span className={`char8 ${sameGone.has('year') ? 'same_year' : ''}`}>年 {char8['year']}</span>\n                    <span className={`char8 ${sameGone.has('month') ? 'same_month' : ''}`}>月 {char8['month']}</span>\n                    <span className={`char8 ${sameGone.has('day') ? 'same_day' : ''}`}>日 {char8['day']}</span>\n                    <span className={`char8 ${sameGone.has('time') ? 'same_time' : ''}`}>時 {char8['time']}</span>\n                  </div>\n                  <div className='char8_day'>\n                    <span className='char8 year_gone'>年干 <select ref={yearGoneInput} onChange={(e) => setYearGone(e.target.value)}><option value=\"-1\">請選擇</option>{gong_seq.map(g => <option key={`year_${g}`} value={g}>{g}宮</option>)}</select></span>\n                    <span className='char8 month_gone'>月干 <select ref={monthGoneInput} onChange={(e) => setMonthGone(e.target.value)}><option value=\"-1\">請選擇</option>{gong_seq.map(g => <option key={`month_${g}`} value={g}>{g}宮</option>)}</select></span>\n                    <span className='char8 day_gone'>日干 <select ref={dayGoneInput} onChange={(e) => setDayGone(e.target.value)}><option value=\"-1\">請選擇</option>{gong_seq.map(g => <option key={`day_${g}`} value={g}>{g}宮</option>)}</select></span>\n                    <span className='char8 time_gone'>時干 <select ref={timeGoneInput} onChange={(e) => setTimeGone(e.target.value)}><option value=\"-1\">請選擇</option>{gong_seq.map(g => <option key={`time_${g}`} value={g}>{g}宮</option>)}</select></span>\n                    <br />\n                    <input type='button' className='btn btn-success' onClick={(e) => saveTime()} value={`儲存此局`} />\n                  </div>\n                </Col>\n              </Row>\n            </Container>\n            <div className='targets_div alert alert-warning' style={{ display: showTargets ? '' : 'none' }}>\n              <div className='targets_row'>\n                {\n                  door_seq.map(d => <span className='targets_span'> <a href=\"#!\" key={`door_targets_${d}`} onClick={(e) => updateTargets(e)} className={`btn ${targets.indexOf(d) > -1 ? 'btn-warning' : 'btn-dark'}`}>{d}</a></span>)\n                }\n              </div>\n              <div className='targets_row'>\n                {\n                  star_seq.map(d => <span className='targets_span'> <a href=\"#!\" key={`star_targets_${d}`} onClick={(e) => updateTargets(e)} className={`btn ${targets.indexOf(d) > -1 ? 'btn-warning' : 'btn-dark'}`}>{d}</a></span>)\n                }\n              </div>\n              <div className='targets_row'>\n                {\n                  sun_seq.map(d => <span className='targets_span'> <a href=\"#!\" key={`sun_targets_${d}`} onClick={(e) => updateTargets(e)} className={`btn ${targets.indexOf(d) > -1 ? 'btn-warning' : 'btn-dark'}`}>{d}</a></span>)\n                }\n              </div>\n              <div className='targets_row'>\n                {\n                  tin_gone_seq.map(d => <span className='targets_span'> <a href=\"#!\" key={`tin_gone_targets_${d}`} onClick={(e) => updateTargets(e)} className={`btn ${targets.indexOf(d) > -1 ? 'btn-warning' : 'btn-dark'}`}>{d}</a></span>)\n                }\n              </div>\n            </div>\n          </div>\n          <div className='top_message_div'>\n            <Alert variant='success' show={visibleAlert} >已儲存此局。</Alert>\n          </div>\n          {\n            dateUpdated ?\n              <div className='header_div'>\n                <div className='grid_board_div'>\n                  <GridBoard\n                    year_chi={char8['year'].charAt(1)}\n                    month_chi={char8['month'].charAt(1)}\n                    day={d.toDate().getHours() >= 23 ? lunisolar(new Date(d.toDate().getTime() + 3600000)).lunar.day : d.lunar.day}\n                    year_gone={char8['year'].charAt(0)}\n                    month_gone={char8['month'].charAt(0)}\n                    day_gone={char8['day'].charAt(0)}\n                    time_gone={d.char8.hour.stem.toString()}\n                    time_chi={d.char8.hour.branch.toString()}\n                    yinyang={yinyang}\n                    initOriginalGridDataSet={initOriginalGridDataSet}\n                    originalDataSetObj={originalDataSetObj}\n                    spin={spin}\n                    spinLeftValue={spinLeftValue}\n                    spinRightValue={spinRightValue}\n                    targets={targets}\n                    goodBadGoneColor={goodBadGoneColor}\n                    updateGakGok={updateGakGok}\n                    yearGone={yearGone}\n                    monthGone={monthGone}\n                    dayGone={dayGone}\n                    timeGone={timeGone}\n                    sameGone={sameGone}\n                  />\n                </div>\n                <Modal show={showModal} onHide={handleClose} centered>\n                  <Modal.Header closeButton>\n                    <Modal.Title>宮位資訊[{selectedGone === -1 ? \"請點宮位選擇\" : selectedGone}]</Modal.Title>\n                  </Modal.Header>\n                  <Modal.Body>\n                    <Alert variant='primary'>\n                      <span>{selectedGone === -1 ? \"請點宮位選擇\" : ''}</span>\n                      <Alert.Heading>參考格局</Alert.Heading>\n                      <div className='gakgok'>\n                        {gakgokDesc.map((g) => {\n                          return (\n                            <Row>\n                              <Col xs={4}>\n                                <span className='gakgok_title'>{g.title}<br /> [{g.primary_tin_gone}+{g.secondary_tin_gone}]</span>\n                              </Col>\n                              <Col>\n                                <span className='gakgok_desc'>{g.desc}</span>\n                              </Col>\n                            </Row>\n                          )\n                        })}\n                      </div>\n                    </Alert>\n                    <Alert variant='warning'>\n                      <span>{selectedGone === -1 ? \"請點宮位選擇\" : ''}</span>\n                      <Alert.Heading>未來地支最近日期(30天內)</Alert.Heading>\n                      <div className='gakgok'>\n                        {goneDates.map((g) => {\n                          if (g.gone === selectedGone)\n                            return (\n                              <Row>\n                                <Col xs={3}>\n                                  <span className='gakgok_title'>{g.lunar_day_chi}({g.yin_yang})({g.animal})</span>\n                                </Col>\n                                <Col>\n                                  <Alert variant={`${g.best_before_date && !g.past ? 'success' : 'danger'}`}>\n                                    {g.date}\n                                  </Alert>\n                                </Col>\n                              </Row>\n                            )\n                        })}\n                      </div>\n                    </Alert>\n                    <Alert variant='success'>\n                      <span>{selectedGone === -1 ? \"請點宮位選擇\" : ''}</span>\n                      <Alert.Heading>本局最佳化解日子</Alert.Heading>\n                      <div className='gakgok'>\n                        <Row>\n                          <Col>\n                            <span>{d.format('YYYY/MM/DD')} - {d.add(8, 'd').format('YYYY/MM/DD')}</span>\n                          </Col>\n                        </Row>\n                      </div>\n                    </Alert>\n\n                  </Modal.Body>\n                </Modal>\n                <Modal show={importAlert} onHide={hideImportModal} centered>\n                  <Modal.Header closeButton>\n                    <Modal.Title>匯入</Modal.Title>\n                  </Modal.Header>\n                  <Modal.Body>\n                    <div className='alert alert-warning'>\n                      <span>從檔案匯入已儲存的局數，會取代現有所有局數。<br />請緊記先匯出需要的局數再匯入。</span>\n                    </div>\n                  </Modal.Body>\n                  <Modal.Footer>\n                    <Button variant='success' onClick={(e) => importButton()}>匯入</Button>\n                    <Button variant='danger' onClick={hideImportModal}>取消</Button>\n                  </Modal.Footer>\n                </Modal>\n                <div className='notes_div'>\n                  <Accordion defaultActiveKey={['0']} alwaysOpen>\n                    <Accordion.Item eventKey=\"0\">\n                      <Accordion.Header>備註</Accordion.Header>\n                      <Accordion.Body>\n                        <Notes\n                          year_chi={char8['year'].charAt(1)}\n                          month_chi={char8['month'].charAt(1)}\n                          day={d.toDate().getHours() >= 23 ? lunisolar(new Date(d.toDate().getTime() + 3600000)).lunar.day : d.lunar.day}\n                          time_gone={d.char8.hour.stem.toString()}\n                          time_chi={d.char8.hour.branch.toString()}\n                          yinyang={yinyang}\n                          initOriginalGridDataSet={initOriginalGridDataSet}\n                          originalDataSetObj={originalDataSetObj}\n                          spin={spin}\n                          spinLeftValue={spinLeftValue}\n                          spinRightValue={spinRightValue}\n                        />\n                      </Accordion.Body>\n                    </Accordion.Item>\n                  </Accordion>\n\n                  <span>雲清子奇門陰遁甲課程 輔助開盤程式 v{packageJson.version}</span>\n                  <span>Copyright © 2024 elvischan91 all rights reserved</span>\n                </div>\n              </div>\n              :\n              <div className='grid_board_div'>\n                <ReactLoading type=\"bubbles\" color=\"#000\" height={'100px'} width={'100px'} />\n              </div>\n          }\n          <Modal show={showVersionInfo} onHide={(e) => setShowVersionInfo(false)} centered>\n            <Modal.Header closeButton>版本更新</Modal.Header>\n            <Modal.Body>\n              <Alert variant='success'>\n                {\n                  version_info.map(v => {\n                    return <div>{v.version_number} {v.updates}</div>\n                  })\n                }\n              </Alert>\n            </Modal.Body>\n          </Modal>\n        </Tab>\n        <Tab eventKey=\"saved\" title=\"已儲存局數\">\n          <Alert variant='danger' show={importError} onClose={() => setImportError(false)} dismissible>\n            只接受匯入指定JSON檔。\n          </Alert>\n          <Container>\n            <Row className='savedButtonRow'>\n              <Col>\n                <Button variant='success' onClick={(e) => exportData()}>匯出</Button>\n              </Col>\n              <Col>\n                <input ref={fileRef} type='file' accept=\"application/JSON\" onChange={(e) => importData(e)} style={{ display: 'none' }} />\n                <Button variant='primary' onClick={(e) => showImportModal(e)}>匯入</Button>\n              </Col>\n            </Row>\n            {\n              savedTime.length == 0 ?\n                <Row><Col>沒有已儲存局數</Col></Row>\n                :\n                savedTime.map((t, idx) => {\n                  return (\n                    <Row className='savedTimeRow'>\n                      <Col xs={2}>\n                        <Button variant=\"danger\" onClick={(e) => removeTime(t)}>移除</Button>\n                      </Col>\n                      <Col xs={5} className='savedTime'>{savedRemarks[idx]}</Col>\n                      <Col xs={3} className='savedTime'><span>{`${t.substr(0, 10)} ${t.substr(11, 6)}`}</span>\n                      </Col>\n                      <Col xs={2}><Button variant=\"primary\" onClick={(e) => loadTime(t)}>載入</Button></Col>\n                    </Row>\n                  )\n                })\n            }\n\n          </Container>\n\n        </Tab>\n\n      </Tabs>\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}