{"version":3,"sources":["logo.svg","js/version_info.js","js/notes.js","js/solarTerms.js","js/main.js","Component/Grid.js","Component/DetailGrid.js","Component/GridBoard.js","Component/Notes.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","version_info","version_number","updates","conflicts_gone","main","target","merge_gone","gak_gok_81","primary_tin_gone","secondary_tin_gone","title","desc","theif_gok","change_gok","leave_gok","doors_equals","door","door2","gone_equals","gone","gone2","is_door_fok","origin_door","is_gone_fok","is_door_fan","is_gone_fan","theifs","tin_gone","floor_gone","result","indexOf","gakgoks","forEach","g","length","push","is_tin_gone_conflicts","tins","floors","door_sun_seq","t_tin","pop","t","idx","conflicts","c","is_tin_gone_merges","tin_suns","floor_suns","merges","tin_sun","floor_sun","is_change_gok","changes","is_leave_gok","leaves","find_solar_terms_offline","async","terms","year","data","solar","Date","d","find_current_solar_terms_offline","months","last_year_data","last_year_last_st","array_current_year","t_date","getFullYear","first","second","roundToNearestMinute","date","Math","round","getTime","tin_gone_seq","door_seq","star_seq","sun_seq","gong_seq","floor12_str","floor12_month_str","floor12_int","floor12_animarl","tin_gone_10_str","chun6_seq","chun6_chi_seq","gone_chi","chi","five_elements","name","sang","hak","hak_oh","sang_oh","gong","sang_oh_gong","sang_gong","wong_sheung_gong","gongs","gak_time_gone","gak","hill24","harm","grave","sun","bik","horse","horse_gong","find_gok","year_chi","month_chi","day","time_chi","cnt","gok","floor_tin_gone","number","up_down","floor_seq_array","val","find_empty_and_chun","time_gone_chi","end","empty1","empty2","find_chun","find_chun_chi","find_empty_gong","empty","hill","includes","find_harm","harmful","h","find_grave","is_grave","find_bik","is_bik","b","find_horse","chun6","chun6_idx","find_door_and_star","chun","chun_gung_idx","door_sun_seq_idx","get_floor_tin_gone_display","floor_tin_gone_seq","display_floor_tin_gone_array","primary","get_star_display","floor_tin_gone_display","time_gone","star","start_gong","tg","star_seq_array","shift_cnb","shiftRight","shiftLeft","get_tin_tin_gone_display","star_display_seq","t_floor_tin_gone_display","start_idx","tin_tin_gone_seq","tin_tin_gone_str_seq","hasOwnProperty","get_door_display","chun_gone","chun_chi","chun_gong","chun_chi_idx","time_chi_idx","door_seq_array","diff","door_start_idx","get_sun_display","display_tin_tin_gone_array","sun_seq_array","t_sun_array","t_tin_tin_gone_array","reverse","get_floor_sun_display","shift_cnt","t_floor_tin_gone_array","find_yan_gone","door_tin_gone","yinyang","door_gong_idx","yan_gone_array","yan_gone_obj_array","shifted_tin_gone_seq","shiftArray","time_gone_idx","y","split","spinR","dataSetObj","n","floor_tin_gone5","temp_floor_tin_gone_array","filter","display_sun_array","display_floor_sun_array","display_star_array","display_door_array","spinL","arr","temp_array","i","temp","shift","concat","splice","removeItemOnce","value","index","isHarmGone","harms","nearestDates","dates","Array","now","setHours","setMinutes","setSeconds","orig_d","past","toDate","lunisolar","temp_d","add","_gone","char8","branch","toString","temp_d_obj","orig_d_obj","lunar_day_chi","format","best_before_date","yin_yang","animal","error","mainCalculation","empty_and_chun","empty_gong1","empty_gong2","door_and_star","wong_gong","f","find_wong_gong","door_fok","gone_fok","door_fan","gone_fan","fanFok","goodGokFiltering","ggs","filterKeyWords","replaceAll","re","RegExp","_re$exec","_g$sang_ohs$filter","_re$exec2","_re$exec3","_re$exec4","_re$exec5","_re$exec6","exec","remarks","sang_ohs","s","time","cyear","cmonth","cday","ctime","savedGokFiltering","sgs","savedRemarks","filtered","t_matches","r_matches","Grid","props","tin_tin_gone","goodBadGoneColor","goneCSS","styleName","yearGone","monthGone","dayGone","timeGone","React","createElement","className","wong","onClick","updateGakGok","gak_gok","sameGone","has","yan_gone_pri","day_gone","fan_or_fok","targets","yan_gone_sec","display_star","GridBoard","updateDataSet","obj","spin","spinLeftValue","spinRightValue","initOriginalGridDataSet","find_gak_gok","seq","gakgok","gone_seq","left","right","spinGone","undefined","year_gone","month_gone","DetailGrid","Notes","notes","is_theif_gok","map","key","App","setD","useState","setYinyang","setChar8","month","originalDataSetObj","haziDate","setHaziDate","dongziDate","setDongziDate","previousZit","setPreviousZit","currentZit","setCurrentZit","dateUpdated","setDateUpdated","yearUpdated","setYearUpdated","setFan_or_fok","setSpin","setSpinLeftValue","setSpinRightValue","setTargets","showTargets","setShowTargets","setGoodBadGoneColor","selectedGone","setSelectedGone","gakgokDesc","setGakgokDesc","showModal","setShowModal","setYearGone","setMonthGone","setDayGone","setTimeGone","savedTime","setSavedTime","JSON","parse","localStorage","getItem","setSavedRemarks","setKey","visibleAlert","setVisibleAlert","importAlert","setImportAlert","removeAllAlert","setRemoveAllAlert","showVersionInfo","setShowVersionInfo","importError","setImportError","searchError","setSearchError","setSameGone","Set","goodGok","setGoodGok","validInput","setValidInput","setFilterKeyWords","filterSavedKeyWords","setFilterSavedKeyWords","dateInput","useRef","remarksRef","fileRef","dayCntsRef","yearGoneInput","monthGoneInput","dayGoneInput","timeGoneInput","goneDates","setGoneDates","fetchGoodGok","_input","current","response","gokCnt","returnSet","getHours","_temp_date","getMonth","padStart","getDate","hour","min","getMinutes","fetchHazi","fetchDongzi","fetchCurrentZit","char8_splits","t_c_splits","year_splits","gone_idx","chi_idx","new_gone","new_chi","year_gone_idx","year_chi_idx","new_year_gone","new_year_chi","currentZitDate","lunar","charAt","lunar_day","stem","_idx","origin_gong","find_good_gok","focus","hideImportModal","e","hideRemoveAllModal","saveTimeAlert","setTimeout","loadTime","r","updateDateStr","updateTargets","event","text","useEffect","findSameGone","_set","_year","_month","_day","_time","doubleTinGone","repeatedCnt","repeatedSet","content","Tabs","defaultActiveKey","activeKey","onSelect","k","id","justify","Tab","eventKey","Alert","variant","dismissible","Container","Row","Col","xs","ref","type","placeholder","onChange","inputChange","isNaN","max","setDate","reduceDayClick","addDayClick","reduceHourClick","addHourClick","saveTime","setItem","stringify","style","display","href","show","onClose","Modal","onHide","handleClose","centered","Header","closeButton","Title","Body","Heading","toISOString","Footer","Button","click","Accordion","alwaysOpen","Item","packageJson","version","v","exportData","objArray","jsonString","encodeURIComponent","link","document","download","accept","fileReader","FileReader","readAsText","files","onload","jsonArray","t_savedTime","t_savedRemarks","importData","temp_remarks_array","removeTime","substr","fluid","step","required","exportGoodData","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.5b37d967.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","const version_info = [\r\n    { version_number: \"v1.0.8\", updates: \"新增 催運局數關鍵字過濾功能\" },\r\n    { version_number: \"v1.0.7\", updates: \"新增 催運局數搜尋功能\" },\r\n    { version_number: \"v1.0.6\", updates: \"新增 年月日時干重疊顏色標記\" },\r\n    { version_number: \"v1.0.5\", updates: \"新增 宮位地支 最近三十天化解日期/陰陽/生肖提示\" },\r\n    { version_number: \"v1.0.4\", updates: \"新增 匯入及匯出已儲存局數至JSON檔功能\" },\r\n    { version_number: \"v1.0.3\", updates: \"新增 局數儲存功能\" },\r\n    { version_number: \"v1.0.2\", updates: \"新增 轉宮功能\" },\r\n    { version_number: \"v1.0.1\", updates: \"新增 點選宮位顯示 81天干格局\" },\r\n    { version_number: \"v1.0.0\", updates: \"穩定版本\" }\r\n]\r\n\r\nexport {\r\n    version_info\r\n}","const conflicts_gone = [\r\n    { main: \"辛\", target: [\"乙\", \"戊\"] },\r\n    { main: \"壬\", target: [\"丙\", \"己\"] },\r\n    { main: \"癸\", target: [\"丁\", \"庚\"] }\r\n]\r\n\r\nconst merge_gone = [\r\n    { main: \"符\", target: \"己\" },\r\n    { main: \"乙\", target: \"庚\" },\r\n    { main: \"丙\", target: \"辛\" },\r\n    { main: \"丁\", target: \"壬\" },\r\n    { main: \"戊\", target: \"癸\" },\r\n    { main: \"己\", target: \"符\" },\r\n    { main: \"庚\", target: \"乙\" },\r\n    { main: \"辛\", target: \"丙\" },\r\n    { main: \"壬\", target: \"丁\" },\r\n    { main: \"癸\", target: \"戊\" },\r\n\r\n]\r\n\r\nconst gak_gok_81 = [\r\n    //乙\r\n    { primary_tin_gone: \"乙\", secondary_tin_gone: \"乙\", title: \"日奇伏吟\", desc: \"不宜見貴要求名利，只宜安份守己\" },\r\n    { primary_tin_gone: \"乙\", secondary_tin_gone: \"丙\", title: \"奇儀順遂\", desc: \"吉星升官晉職，凶星反目別離\" },\r\n    { primary_tin_gone: \"乙\", secondary_tin_gone: \"丁\", title: \"奇儀相助\", desc: \"最利文書考試，百事可為\" },\r\n    { primary_tin_gone: \"乙\", secondary_tin_gone: \"戊\", title: \"陰害陽門\", desc: \"利陰人陰事，門吉尚可謀為，門凶迫則破財傷人\" },\r\n    { primary_tin_gone: \"乙\", secondary_tin_gone: \"己\", title: \"日奇入墓\", desc: \"被土暗昧，門凶事必凶，得生門二吉門為地遁\" },\r\n    { primary_tin_gone: \"乙\", secondary_tin_gone: \"庚\", title: \"日奇被刑\", desc: \"為爭訟財產，夫妻懷有私意\" },\r\n    { primary_tin_gone: \"乙\", secondary_tin_gone: \"辛\", title: \"青龍折足\", desc: \"人亡財破，奴僕拐帶，六畜自傷\" },\r\n    { primary_tin_gone: \"乙\", secondary_tin_gone: \"壬\", title: \"日奇入地\", desc: \"尊卑悖亂，官訟是非，有人謀害之事\" },\r\n    { primary_tin_gone: \"乙\", secondary_tin_gone: \"癸\", title: \"華蓋蓬星\", desc: \"遁跡藏形，修仙修道躲災難為吉\" },\r\n    //丙\r\n    { primary_tin_gone: \"丙\", secondary_tin_gone: \"乙\", title: \"日月並行\", desc: \"公私皆為吉\" },\r\n    { primary_tin_gone: \"丙\", secondary_tin_gone: \"丙\", title: \"月奇悖師\", desc: \"文書逼迫，破耗遺失，主單據，証件不明遺失\" },\r\n    { primary_tin_gone: \"丙\", secondary_tin_gone: \"丁\", title: \"星奇朱雀\", desc: \"貴人文書吉利，常人平靜安樂\" },\r\n    { primary_tin_gone: \"丙\", secondary_tin_gone: \"戊\", title: \"飛鳥跌穴\", desc: \"百事吉可謀大事\" },\r\n    { primary_tin_gone: \"丙\", secondary_tin_gone: \"己\", title: \"火悖入刑\", desc: \"囚人刑仗，文書不通，吉門得吉，凶門轉凶\" },\r\n    { primary_tin_gone: \"丙\", secondary_tin_gone: \"庚\", title: \"熒入太白\", desc: \"門戶破敗，盗賊耗失，事業亦凶\" },\r\n    { primary_tin_gone: \"丙\", secondary_tin_gone: \"辛\", title: \"月奇相合\", desc: \"謀事能成，病人不凶\" },\r\n    { primary_tin_gone: \"丙\", secondary_tin_gone: \"壬\", title: \"火入天羅\", desc: \"為客不利，是非多\" },\r\n    { primary_tin_gone: \"丙\", secondary_tin_gone: \"癸\", title: \"華蓋悖師\", desc: \"陰人害事，災禍頻生\" },\r\n    //丁\r\n    { primary_tin_gone: \"丁\", secondary_tin_gone: \"乙\", title: \"人遁吉格\", desc: \"貴人加官晉爵，常人婚姻財帛\" },\r\n    { primary_tin_gone: \"丁\", secondary_tin_gone: \"丙\", title: \"星隨月轉\", desc: \"貴人越級高升，常人樂極生悲\" },\r\n    { primary_tin_gone: \"丁\", secondary_tin_gone: \"丁\", title: \"星奇入太陰\", desc: \"文書証件即至，喜事事從心萬事如意\" },\r\n    { primary_tin_gone: \"丁\", secondary_tin_gone: \"戊\", title: \"青龍轉光\", desc: \"官人升遷，常人威昌\" },\r\n    { primary_tin_gone: \"丁\", secondary_tin_gone: \"己\", title: \"火入勾陳\", desc: \"奸仇冤，事因女人\" },\r\n    { primary_tin_gone: \"丁\", secondary_tin_gone: \"庚\", title: \"文書阻隔\", desc: \"行人必歸\" },\r\n    { primary_tin_gone: \"丁\", secondary_tin_gone: \"辛\", title: \"朱雀入獄\", desc: \"罪人釋囚，官人失位\" },\r\n    { primary_tin_gone: \"丁\", secondary_tin_gone: \"壬\", title: \"貴人恩詔\", desc: \"訟獄公平，測婚多為苟合\" },\r\n    { primary_tin_gone: \"丁\", secondary_tin_gone: \"癸\", title: \"朱雀投江\", desc: \"文書口舌是非，經官動府，詞訟不利，音信沈溺不定\" },\r\n    //戊\r\n    { primary_tin_gone: \"戊\", secondary_tin_gone: \"乙\", title: \"青龍和合\", desc: \"門吉事也吉，門凶事也凶\" },\r\n    { primary_tin_gone: \"戊\", secondary_tin_gone: \"丙\", title: \"青龍回首\", desc: \"為事所謀，大吉大利，若逢墓迫擊刑，吉事也凶\" },\r\n    { primary_tin_gone: \"戊\", secondary_tin_gone: \"丁\", title: \"青龍耀明\", desc: \"宜見貴求名利，若逢墓迫，招惹是非\" },\r\n    { primary_tin_gone: \"戊\", secondary_tin_gone: \"戊\", title: \"雙木成林\", desc: \"甲甲伏吟，凡事不利，道路閉塞，以守為佳\" },\r\n    { primary_tin_gone: \"戊\", secondary_tin_gone: \"己\", title: \"貴人入獄\", desc: \"公私皆不利\" },\r\n    { primary_tin_gone: \"戊\", secondary_tin_gone: \"庚\", title: \"值符飛官\", desc: \"吉事不吉，凶事更凶，求財沒利益，測病也凶\" },\r\n    { primary_tin_gone: \"戊\", secondary_tin_gone: \"辛\", title: \"青龍折足\", desc: \"吉門有幫助，尚可謀事，若逢凶門主招災失財，足疾折傷\" },\r\n    { primary_tin_gone: \"戊\", secondary_tin_gone: \"壬\", title: \"青龍入天牢\", desc: \"凡陰陽事皆不吉利\" },\r\n    { primary_tin_gone: \"戊\", secondary_tin_gone: \"癸\", title: \"青龍華蓋\", desc: \"逢吉門為吉，可招福臨門，逢凶門，事多不利為凶\" },\r\n    //己\r\n    { primary_tin_gone: \"己\", secondary_tin_gone: \"乙\", title: \"地戶逢星\", desc: \"宜遁跡藏刑為利\" },\r\n    { primary_tin_gone: \"己\", secondary_tin_gone: \"丙\", title: \"火悖地戶\", desc: \"男人冤冤相害，女人必致淫污\" },\r\n    { primary_tin_gone: \"己\", secondary_tin_gone: \"丁\", title: \"朱雀入墓\", desc: \"文書詞訟，先曲後直\" },\r\n    { primary_tin_gone: \"己\", secondary_tin_gone: \"戊\", title: \"犬還青龍\", desc: \"門吉為謀望遂意，上人見喜，若門凶，枉費心機\" },\r\n    { primary_tin_gone: \"己\", secondary_tin_gone: \"己\", title: \"地戶逢鬼\", desc: \"病者必發凶或必死，百事不遂暫不為謀，謀則為凶\" },\r\n    { primary_tin_gone: \"己\", secondary_tin_gone: \"庚\", title: \"刑格返名\", desc: \"詞訟先動者不利，如臨陰星，則有謀害之情\" },\r\n    { primary_tin_gone: \"己\", secondary_tin_gone: \"辛\", title: \"游魂入屋\", desc: \"易遭陰邪鬼魅作祟\" },\r\n    { primary_tin_gone: \"己\", secondary_tin_gone: \"壬\", title: \"地網高張\", desc: \"狡童佚女，姦情傷殺凶\" },\r\n    { primary_tin_gone: \"己\", secondary_tin_gone: \"癸\", title: \"地刑玄武\", desc: \"男女疾病重危，有困獄詞訟之災\" },\r\n    //庚\r\n    { primary_tin_gone: \"庚\", secondary_tin_gone: \"乙\", title: \"太白蓬星\", desc: \"退吉進凶，謀為不利\" },\r\n    { primary_tin_gone: \"庚\", secondary_tin_gone: \"丙\", title: \"太白入熒\", desc: \"賊必來，為客進利為主破財\" },\r\n    { primary_tin_gone: \"庚\", secondary_tin_gone: \"丁\", title: \"亭亭之格\", desc: \"因私匿或男女關係主官司是非，門吉有救\" },\r\n    { primary_tin_gone: \"庚\", secondary_tin_gone: \"戊\", title: \"天乙伏宮\", desc: \"百事不可謀，大凶\" },\r\n    { primary_tin_gone: \"庚\", secondary_tin_gone: \"己\", title: \"官符刑格\", desc: \"主有官司又舌，因官訟被判刑，住牢獄更\" },\r\n    { primary_tin_gone: \"庚\", secondary_tin_gone: \"庚\", title: \"戰格\", desc: \"官災橫禍，兄弟朋友相沖，不利為事 戰格，兄弟相爭，朋友相沖，官災橫禍\" },\r\n    { primary_tin_gone: \"庚\", secondary_tin_gone: \"辛\", title: \"白虎干格\", desc: \"不宜遠行，車折馬傷，求財更為大凶\" },\r\n    { primary_tin_gone: \"庚\", secondary_tin_gone: \"壬\", title: \"遠行道路迷失\", desc: \"男女音信難通\" },\r\n    { primary_tin_gone: \"庚\", secondary_tin_gone: \"癸\", title: \"大格\", desc: \"主車禍，行人不致，官事不止，日育母子，俱傷大凶\" },\r\n    //辛\r\n    { primary_tin_gone: \"辛\", secondary_tin_gone: \"乙\", title: \"白虎猖狂\", desc: \"家破人亡，遠行多遭殃，測婚離散，主因男人\" },\r\n    { primary_tin_gone: \"辛\", secondary_tin_gone: \"丙\", title: \"干合悖師\", desc: \"門吉事也吉，門凶事也凶，測事易因財物致訟\" },\r\n    { primary_tin_gone: \"辛\", secondary_tin_gone: \"丁\", title: \"獄神得奇\", desc: \"經商求財獲利倍增，囚人逢天赦釋色\" },\r\n    { primary_tin_gone: \"辛\", secondary_tin_gone: \"戊\", title: \"困龍被傷\", desc: \"主官司破財，屈抑守份尚可，妄動帶來禍\" },\r\n    { primary_tin_gone: \"辛\", secondary_tin_gone: \"己\", title: \"入獄自刑\", desc: \"奴僕背主，有苦訴訟難申\" },\r\n    { primary_tin_gone: \"辛\", secondary_tin_gone: \"庚\", title: \"白虎出力\", desc: \"刀刃相交，主客相戰，遜讓退步稍可，強進血濺衣衫\" },\r\n    { primary_tin_gone: \"辛\", secondary_tin_gone: \"辛\", title: \"伏吟天庭\", desc: \"公廢私就，訟獄自羅罪名\" },\r\n    { primary_tin_gone: \"辛\", secondary_tin_gone: \"壬\", title: \"凶蛇入獄\", desc: \"兩男爭女，訟獄不息，先動失理\" },\r\n    { primary_tin_gone: \"辛\", secondary_tin_gone: \"癸\", title: \"天牢華蓋\", desc: \"日月失明，誤入天網，動止乖張\" },\r\n    //壬\r\n    { primary_tin_gone: \"壬\", secondary_tin_gone: \"乙\", title: \"小蛇得勢\", desc: \"男人通達，女人柔順，測孕育生子，祿馬光華\" },\r\n    { primary_tin_gone: \"壬\", secondary_tin_gone: \"丙\", title: \"水蛇入火\", desc: \"主官災刑禁，絡繹不絕\" },\r\n    { primary_tin_gone: \"壬\", secondary_tin_gone: \"丁\", title: \"干合蛇刑\", desc: \"文書牽連，貴人匆匆，男吉女凶\" },\r\n    { primary_tin_gone: \"壬\", secondary_tin_gone: \"戊\", title: \"小蛇化龍\", desc: \"男人發達，女人產嬰童\" },\r\n    { primary_tin_gone: \"壬\", secondary_tin_gone: \"己\", title: \"反吟蛇刑\", desc: \"官訟敗訴，大禍將至，順守可吉\" },\r\n    { primary_tin_gone: \"壬\", secondary_tin_gone: \"庚\", title: \"太白擒蛇\", desc: \"刑獄公平，立剖邪正\" },\r\n    { primary_tin_gone: \"壬\", secondary_tin_gone: \"辛\", title: \"騰蛇相纏\", desc: \"縱得吉門，亦不能安守，若有謀望，被人欺騙\" },\r\n    { primary_tin_gone: \"壬\", secondary_tin_gone: \"壬\", title: \"蛇入地羅\", desc: \"外人纏繞，內事縈縈，吉門則吉\" },\r\n    { primary_tin_gone: \"壬\", secondary_tin_gone: \"癸\", title: \"幼女奸淫\", desc: \"主有家醜外揚之事發生，門吉星凶易反福為禍\" },\r\n    //癸\r\n    { primary_tin_gone: \"癸\", secondary_tin_gone: \"乙\", title: \"華蓋蓬星\", desc: \"貴人祿位，常人平安，門吉則吉，門凶則凶\" },\r\n    { primary_tin_gone: \"癸\", secondary_tin_gone: \"丙\", title: \"華蓋悖師\", desc: \"貴賤逢之皆不利，唯上人見喜\" },\r\n    { primary_tin_gone: \"癸\", secondary_tin_gone: \"丁\", title: \"騰蛇夭嬌\", desc: \"文書官司，火焚也逃不掉\" },\r\n    { primary_tin_gone: \"癸\", secondary_tin_gone: \"戊\", title: \"天乙會合\", desc: \"吉門宜求財，婚姻喜美，吉人贊助成吉，若門凶則反禍官非\" },\r\n    { primary_tin_gone: \"癸\", secondary_tin_gone: \"己\", title: \"華蓋天牢\", desc: \"男女測之，音信皆阻，此格躲災避難方為吉\" },\r\n    { primary_tin_gone: \"癸\", secondary_tin_gone: \"庚\", title: \"太白入網\", desc: \"主以暴力爭訟，自羅罪責\" },\r\n    { primary_tin_gone: \"癸\", secondary_tin_gone: \"辛\", title: \"網蓋天牢\", desc: \"主官司敗訴，死罪難逃，測病亦大凶\" },\r\n    { primary_tin_gone: \"癸\", secondary_tin_gone: \"壬\", title: \"復見騰蛇\", desc: \"主嫁娶重婚，後嫁無子，不保年華\" },\r\n    { primary_tin_gone: \"癸\", secondary_tin_gone: \"癸\", title: \"天網四張\", desc: \"主行人失伴，病訴皆傷\" },\r\n]\r\n\r\nconst theif_gok = [\"庚\", \"丙\"]\r\nconst change_gok = [\"庚\", \"戊\"]\r\nconst leave_gok = [\"乙\", \"辛\"]\r\n\r\nconst doors_equals = (door, door2) => {\r\n    return door == door2\r\n}\r\n\r\n\r\nconst gone_equals = (gone, gone2) => {\r\n    return gone == gone2\r\n}\r\n\r\nconst is_door_fok = (door, origin_door, gone, gone2) => {\r\n    return doors_equals(door, origin_door)\r\n}\r\n\r\nconst is_gone_fok = (gone, gone2) => {\r\n    return gone_equals(gone, gone2)\r\n}\r\n\r\nconst is_door_fan = (door, origin_door) => {\r\n    return doors_equals(door, origin_door)\r\n}\r\n\r\nconst is_gone_fan = (gone, gone2) => {\r\n    return gone_equals(gone, gone2)\r\n}\r\n\r\nconst conflicts = (tin_gone, floor_gone) => {\r\n    let result = false\r\n\r\n    conflicts_gone.forEach((c) => {\r\n        if (tin_gone.indexOf(c.main) > -1 || floor_gone.indexOf(c.main) > -1) {\r\n            c.target.forEach((t) => {\r\n\r\n\r\n\r\n                if (tin_gone.indexOf(t) > -1 || floor_gone.indexOf(t) > -1)\r\n                    result = true\r\n            })\r\n        }\r\n    })\r\n\r\n    return result\r\n\r\n}\r\n\r\nconst merges = (tin_gone, floor_gone, tin_sun, floor_sun) => {\r\n    let result = false\r\n\r\n    merge_gone.forEach((c) => {\r\n        if (tin_gone.indexOf(c.main) > -1 || floor_gone.indexOf(c.main) > -1 ||\r\n            tin_sun.indexOf(c.main) > -1 || floor_sun.indexOf(c.main) > -1\r\n        ) {\r\n            if (tin_gone.indexOf(c.target) > -1 || floor_gone.indexOf(c.target) > -1)\r\n                result = true\r\n        }\r\n    })\r\n\r\n    return result\r\n\r\n}\r\n\r\nconst theifs = (tin_gone, floor_gone) => {\r\n    let result = false\r\n\r\n    if (tin_gone.indexOf(theif_gok[0]) > -1 && tin_gone.indexOf(theif_gok[1]) > -1) //天自成賊局\r\n        result = true\r\n    else if (floor_gone.indexOf(theif_gok[0]) > -1 && floor_gone.indexOf(theif_gok[1]) > -1)//地自成賊局\r\n        result = true\r\n    else if (tin_gone.indexOf(theif_gok[0]) > -1 && floor_gone.indexOf(theif_gok[1]) > -1)\r\n        result = true\r\n    else if (tin_gone.indexOf(theif_gok[1]) > -1 && floor_gone.indexOf(theif_gok[0]) > -1)\r\n        result = true\r\n\r\n    return result\r\n}\r\n\r\nconst changes = (tin_gone, floor_gone) => {\r\n    let result = false\r\n\r\n    if (tin_gone.indexOf(change_gok[0]) > -1 && tin_gone.indexOf(change_gok[1]) > -1) //天自成賊局\r\n        result = true\r\n    else if (floor_gone.indexOf(change_gok[0]) > -1 && floor_gone.indexOf(change_gok[1]) > -1)//地自成賊局\r\n        result = true\r\n    else if (tin_gone.indexOf(change_gok[0]) > -1 && floor_gone.indexOf(change_gok[1]) > -1)\r\n        result = true\r\n    else if (tin_gone.indexOf(change_gok[1]) > -1 && floor_gone.indexOf(change_gok[0]) > -1)\r\n        result = true\r\n\r\n    return result\r\n}\r\n\r\nconst leaves = (tin_gone, floor_gone) => {\r\n    let result = false\r\n\r\n    if (tin_gone.indexOf(leave_gok[0]) > -1 && tin_gone.indexOf(leave_gok[1]) > -1) //天自成賊局\r\n        result = true\r\n    else if (floor_gone.indexOf(leave_gok[0]) > -1 && floor_gone.indexOf(leave_gok[1]) > -1)//地自成賊局\r\n        result = true\r\n    else if (tin_gone.indexOf(leave_gok[0]) > -1 && floor_gone.indexOf(leave_gok[1]) > -1)\r\n        result = true\r\n    else if (tin_gone.indexOf(leave_gok[1]) > -1 && floor_gone.indexOf(leave_gok[0]) > -1)\r\n        result = true\r\n\r\n    return result\r\n}\r\n\r\nconst gakgoks = (tin_gone, floor_gone) => {\r\n    let result = []\r\n\r\n    gak_gok_81.forEach(g => {\r\n        if\r\n            (\r\n            tin_gone.length === 2 &&\r\n            (tin_gone.indexOf(g.primary_tin_gone) === 0 && tin_gone.indexOf(g.secondary_tin_gone) === 1)\r\n        )\r\n            result.push(g)\r\n        else if (\r\n            floor_gone.length === 2 &&\r\n            (floor_gone.indexOf(g.primary_tin_gone) === 0 && floor_gone.indexOf(g.secondary_tin_gone) === 1)\r\n        )\r\n            result.push(g)\r\n        else {\r\n            if (tin_gone.indexOf(g.primary_tin_gone) > -1 && floor_gone.indexOf(g.secondary_tin_gone) > -1)\r\n                result.push(g)\r\n        }\r\n    })\r\n\r\n    return result\r\n}\r\n\r\n\r\nconst is_tin_gone_conflicts = (tins, floors, door_sun_seq) => {\r\n    let result = []\r\n    let t_tin = []\r\n    t_tin.push(...tins)\r\n    t_tin.pop()\r\n\r\n    t_tin.forEach((t, idx) => {\r\n        if (conflicts(t['primary'] + t['second'], floors[idx]))\r\n            result.push(door_sun_seq[idx])\r\n    })\r\n\r\n    return result;\r\n}\r\n\r\nconst is_tin_gone_merges = (tins, floors, tin_suns, floor_suns, door_sun_seq) => {\r\n    let result = []\r\n    let t_tin = []\r\n    t_tin.push(...tins)\r\n    t_tin.pop()\r\n\r\n    t_tin.forEach((t, idx) => {\r\n        if (merges(t['primary'] + t['second'], floors[idx], tin_suns[idx], floor_suns[idx]))\r\n            result.push(door_sun_seq[idx])\r\n    })\r\n\r\n    return result;\r\n}\r\n\r\nconst is_theif_gok = (tins, floors, door_sun_seq) => {\r\n    let result = []\r\n    let t_tin = []\r\n    t_tin.push(...tins)\r\n    t_tin.pop()\r\n\r\n    t_tin.forEach((t, idx) => {\r\n        if (theifs(floors[idx], t['primary'] + t['second']))\r\n            result.push(door_sun_seq[idx])\r\n    })\r\n\r\n    return result;\r\n}\r\n\r\nconst is_change_gok = (tins, floors, door_sun_seq) => {\r\n    let result = []\r\n    let t_tin = []\r\n    t_tin.push(...tins)\r\n    t_tin.pop()\r\n\r\n    t_tin.forEach((t, idx) => {\r\n        if (changes(floors[idx], t['primary'] + t['second']))\r\n            result.push(door_sun_seq[idx])\r\n    })\r\n\r\n    return result;\r\n}\r\n\r\nconst is_leave_gok = (tins, floors, door_sun_seq) => {\r\n    let result = []\r\n    let t_tin = []\r\n    t_tin.push(...tins)\r\n    t_tin.pop()\r\n\r\n    t_tin.forEach((t, idx) => {\r\n        if (leaves(floors[idx], t['primary'] + t['second']))\r\n            result.push(door_sun_seq[idx])\r\n    })\r\n\r\n    return result;\r\n}\r\n\r\nconst find_gak_gok = (tins, floors, door_sun_seq) => {\r\n    let result = []\r\n    let t_tin = []\r\n    t_tin.push(...tins)\r\n    t_tin.pop()\r\n\r\n    t_tin.forEach((t, idx) => {\r\n        result.push({\r\n            seq: door_sun_seq[idx],\r\n            gakgok: gakgoks(floors[idx], t['primary'] + t['second'])\r\n        })\r\n    })\r\n\r\n    return result;\r\n}\r\n\r\nexport {\r\n    is_door_fok, is_gone_fok, is_door_fan, is_gone_fan, is_tin_gone_conflicts, is_tin_gone_merges,\r\n    is_theif_gok, is_change_gok, is_leave_gok, theifs, find_gak_gok\r\n}","import solar from './solar.json'\r\nconst solar_JSON_starting_year = 1900\r\n\r\nconst find_solar_terms = async (terms, year) => {\r\n    const solar_term_api_url = `https://api.timelessq.com/time/jieqi?year=${year}`\r\n\r\n\r\n    const response = await fetch(solar_term_api_url);\r\n    const data = await response.json();\r\n\r\n    let result = new Date()\r\n\r\n    data['data'].forEach((d) => {\r\n        if (d['name'] == terms) {\r\n\r\n            result = new Date(d['time'])\r\n        }\r\n    });\r\n\r\n    return result\r\n}\r\n\r\nconst find_solar_terms_offline = async (terms, year) => {\r\n    const data = solar[year - solar_JSON_starting_year]\r\n    let result = new Date()\r\n\r\n    data['data'].forEach((d) => {\r\n        if (d['name'] == terms) {\r\n\r\n            result = new Date(d['time'])\r\n        }\r\n    });\r\n\r\n    return result\r\n}\r\n\r\nconst find_current_solar_terms = async (months, year) => {\r\n\r\n    const last_year_solar_term_api_url = `https://api.timelessq.com/time/jieqi?year=${year - 1}`\r\n    const solar_term_api_url = `https://api.timelessq.com/time/jieqi?year=${year}`\r\n\r\n\r\n    const last_year_resp = await fetch(last_year_solar_term_api_url);\r\n    const last_year_data = await last_year_resp.json();\r\n\r\n    const response = await fetch(solar_term_api_url);\r\n    const data = await response.json();\r\n\r\n    let last_year_last_st;\r\n    let array_current_year = []\r\n\r\n\r\n    last_year_data['data'].forEach((d, idx) => {\r\n        if (idx == 24) {\r\n            let t_date = new Date(d['time'])\r\n            last_year_last_st = t_date\r\n        }\r\n    })\r\n\r\n\r\n\r\n    data['data'].forEach((d, idx) => {\r\n        if (idx == 0 || idx % 2 == 0) {\r\n            let t_date = new Date(d['time'])\r\n            if (t_date.getFullYear() == year)\r\n                array_current_year.push(t_date)\r\n        }\r\n    });\r\n\r\n\r\n\r\n    return { first: months == 0 ? last_year_last_st : array_current_year[months - 1], second: array_current_year[months] }\r\n}\r\n\r\nconst find_current_solar_terms_offline = async (months, year) => {\r\n\r\n    const last_year_data = solar[year - solar_JSON_starting_year - 1]\r\n\r\n    const data = solar[year - solar_JSON_starting_year]\r\n\r\n    let last_year_last_st;\r\n    let array_current_year = []\r\n\r\n\r\n    last_year_data['data'].forEach((d, idx) => {\r\n        if (idx == 24) {\r\n            let t_date = new Date(d['time'])\r\n            last_year_last_st = t_date\r\n        }\r\n    })\r\n\r\n\r\n\r\n    data['data'].forEach((d, idx) => {\r\n        if (idx == 0 || idx % 2 == 0) {\r\n            let t_date = new Date(d['time'])\r\n            if (t_date.getFullYear() == year)\r\n                array_current_year.push(t_date)\r\n        }\r\n    });\r\n\r\n\r\n\r\n    return { first: months == 0 ? last_year_last_st : array_current_year[months - 1], second: array_current_year[months] }\r\n}\r\n\r\nconst roundToNearestMinute = function (date) {\r\n    var coeff = 1000 * 60 * 1; // <-- Replace {5} with interval\r\n\r\n    return new Date(Math.round(date.getTime() / coeff) * coeff);\r\n};\r\n\r\nexport { find_solar_terms, find_current_solar_terms, find_solar_terms_offline, find_current_solar_terms_offline, roundToNearestMinute }","import { theifs } from './notes.js'\r\nimport lunisolar from 'lunisolar'\r\nimport { find_solar_terms, find_current_solar_terms, find_solar_terms_offline, find_current_solar_terms_offline, roundToNearestMinute } from './solarTerms.js'\r\nimport {\r\n    is_door_fok, is_gone_fok, is_door_fan, is_gone_fan, find_gak_gok\r\n} from '../js/notes.js'\r\nconst tin_gone_seq = [\"戊\", \"己\", \"庚\", \"辛\", \"壬\", \"癸\", \"丁\", \"丙\", \"乙\"]\r\nconst door_seq = [\"休\", \"生\", \"伤\", \"杜\", \"景\", \"死\", \"惊\", \"开\"]\r\nconst star_seq = [\"蓬\", \"任\", \"冲\", \"辅\", \"英\", \"芮\", \"柱\", \"心\"]\r\nconst sun_seq = [\"符\", \"蛇\", \"阴\", \"合\", \"虎\", \"武\", \"九\", \"天\"]\r\nconst door_sun_seq = [1, 8, 3, 4, 9, 2, 7, 6]\r\nconst gong_seq = [1, 2, 3, 4, 6, 7, 8, 9]\r\nconst floor12_str = [\"子\", \"丑\", \"寅\", \"卯\", \"辰\", \"巳\", \"午\", \"未\", \"申\", \"酉\", \"戌\", \"亥\"]\r\nconst floor12_month_str = [\"寅\", \"卯\", \"辰\", \"巳\", \"午\", \"未\", \"申\", \"酉\", \"戌\", \"亥\", \"子\", \"丑\"]\r\nconst floor12_int = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\r\nconst floor12_animarl = [\"鼠\", \"牛\", \"虎\", \"兔\", \"龍\", \"蛇\", \"馬\", \"羊\", \"猴\", \"雞\", \"狗\", \"豬\"]\r\nconst tin_gone_10_str = [\"甲\", \"乙\", \"丙\", \"丁\", \"戊\", \"己\", \"庚\", \"辛\", \"壬\", \"癸\"]\r\nconst chun6_seq = [\"戊\", \"己\", \"庚\", \"辛\", \"壬\", \"癸\"]\r\nconst chun6_chi_seq = [\"子\", \"戌\", \"申\", \"午\", \"辰\", \"寅\"]\r\nconst gone_chi = [\r\n    {\r\n        gone: 1,\r\n        chi: ['子']\r\n    },\r\n    {\r\n        gone: 8,\r\n        chi: ['丑', '寅']\r\n    },\r\n    {\r\n        gone: 3,\r\n        chi: ['卯']\r\n    },\r\n    {\r\n        gone: 4,\r\n        chi: ['辰', '巳']\r\n    },\r\n    {\r\n        gone: 9,\r\n        chi: ['午']\r\n    },\r\n    {\r\n        gone: 2,\r\n        chi: ['未', '申']\r\n    },\r\n    {\r\n        gone: 7,\r\n        chi: ['酉']\r\n    },\r\n    {\r\n        gone: 6,\r\n        chi: ['戌', '亥']\r\n    },\r\n]\r\n\r\nconst five_elements = [\r\n    { name: \"木\", sang: \"火\", hak: \"土\", hak_oh: \"金\", sang_oh: \"水\", gong: [3, 4], sang_oh_gong: [1], sang_gong: [9], chi: [\"寅\", \"卯\"], wong_sheung_gong: [3, 4, 9] },\r\n    { name: \"火\", sang: \"土\", hak: \"金\", hak_oh: \"水\", sang_oh: \"木\", gong: [9], sang_oh_gong: [3, 4], sang_gong: [2, 8], chi: [\"巳\", \"午\"], wong_sheung_gong: [9, 2, 8] },\r\n    { name: \"土\", sang: \"金\", hak: \"水\", hak_oh: \"木\", sang_oh: \"火\", gong: [2, 8], sang_oh_gong: [9], sang_gong: [6, 7], chi: [\"辰\", \"戌\", \"丑\", \"未\"], wong_sheung_gong: [2, 8, 6, 7] },\r\n    { name: \"金\", sang: \"水\", hak: \"木\", hak_oh: \"火\", sang_oh: \"土\", gong: [6, 7], sang_oh_gong: [2, 8], sang_gong: [1], chi: [\"申\", \"酉\"], wong_sheung_gong: [6, 7, 1] },\r\n    { name: \"水\", sang: \"木\", hak: \"火\", hak_oh: \"土\", sang_oh: \"金\", gong: [1], sang_oh_gong: [6, 7], sang_gong: [3, 4], chi: [\"子\", \"亥\"], wong_sheung_gong: [1, 3, 4] }\r\n]\r\n\r\nconst gongs = [\r\n    { gong: [1], chi: [\"子\"], wong_sheung_gong: [1, 3, 4] },\r\n    { gong: [1], chi: [\"丑\"], wong_sheung_gong: [8, 2, 6, 7] },\r\n    { gong: [1], chi: [\"寅\"], wong_sheung_gong: [8, 3, 4, 9] },\r\n    { gong: [1], chi: [\"卯\"], wong_sheung_gong: [3, 4, 9] },\r\n    { gong: [1], chi: [\"辰\"], wong_sheung_gong: [4, 2, 8, 6, 7] },\r\n    { gong: [1], chi: [\"巳\"], wong_sheung_gong: [4, 9, 2, 8] },\r\n    { gong: [1], chi: [\"午\"], wong_sheung_gong: [9, 2, 8] },\r\n    { gong: [1], chi: [\"未\"], wong_sheung_gong: [2, 8, 6, 7] },\r\n    { gong: [1], chi: [\"申\"], wong_sheung_gong: [2, 6, 7, 1] },\r\n    { gong: [1], chi: [\"酉\"], wong_sheung_gong: [7, 6, 1] },\r\n    { gong: [1], chi: [\"戌\"], wong_sheung_gong: [6, 7, 2, 8] },\r\n    { gong: [1], chi: [\"亥\"], wong_sheung_gong: [6, 3, 4, 1] },\r\n]\r\n\r\nconst gak_time_gone = [\r\n    { gak: \"子\", gone: \"戊\" },\r\n    { gak: \"戌\", gone: \"己\" },\r\n    { gak: \"申\", gone: \"庚\" },\r\n    { gak: \"午\", gone: \"辛\" },\r\n    { gak: \"辰\", gone: \"壬\" },\r\n    { gak: \"寅\", gone: \"癸\" },\r\n]\r\n\r\nconst hill24 = [\r\n    { gong: 1, chi: [\"壬\", \"子\", \"癸\"] },\r\n    { gong: 8, chi: [\"丑\", \"艮\", \"寅\"] },\r\n    { gong: 3, chi: [\"甲\", \"卯\", \"乙\"] },\r\n    { gong: 4, chi: [\"辰\", \"巽\", \"巳\"] },\r\n    { gong: 9, chi: [\"丙\", \"午\", \"丁\"] },\r\n    { gong: 2, chi: [\"未\", \"坤\", \"申\"] },\r\n    { gong: 7, chi: [\"庚\", \"酉\", \"辛\"] },\r\n    { gong: 6, chi: [\"戌\", \"乾\", \"亥\"] },\r\n]\r\nconst harm = [\r\n    { gong: 8, chi: [\"庚\"] },\r\n    { gong: 3, chi: [\"戊\"] },\r\n    { gong: 4, chi: [\"壬\", \"癸\"] },\r\n    { gong: 9, chi: [\"辛\"] },\r\n    { gong: 2, chi: [\"己\"] },\r\n    { gong: \"special\", chi: [\"辛\"] },\r\n    { gong: \"special\", chi: [\"壬\"] },\r\n]\r\n\r\nconst grave = [\r\n    { gong: 8, chi: [\"丁\", \"己\", \"庚\"], sun: [] },\r\n    { gong: 4, chi: [\"壬\", \"辛\"], sun: [] },\r\n    { gong: 6, chi: [\"乙\", \"丙\", \"戊\"], sun: [] },\r\n    { gong: 2, chi: [\"乙\", \"癸\"], sun: [\"符\"] }\r\n]\r\n\r\nconst bik = [\r\n    { gong: 1, door: [\"生\", \"死\"] },\r\n    { gong: 8, door: [\"伤\", \"杜\"] },\r\n    { gong: 3, door: [\"惊\", \"开\"] },\r\n    { gong: 4, door: [\"惊\", \"开\"] },\r\n    { gong: 9, door: [\"休\"] },\r\n    { gong: 2, door: [\"伤\", \"杜\"] },\r\n    { gong: 7, door: [\"景\"] },\r\n    { gong: 6, door: [\"景\"] },\r\n]\r\n\r\nconst horse = [\r\n    { chi: [\"申\", \"子\", \"辰\"], horse_gong: 8 },\r\n    { chi: [\"寅\", \"午\", \"戌\"], horse_gong: 2 },\r\n    { chi: [\"巳\", \"酉\", \"丑\"], horse_gong: 6 },\r\n    { chi: [\"亥\", \"卯\", \"未\"], horse_gong: 4 }\r\n]\r\n\r\nconst find_wong_gong = (month_chi) => {\r\n    let result = []\r\n    gongs.forEach((f) => {\r\n        if (f.chi.indexOf(month_chi) > -1) {\r\n            result.push(...f.wong_sheung_gong)\r\n        }\r\n    })\r\n\r\n    return result\r\n}\r\n\r\nconst find_gok = (year_chi, month_chi, day, time_chi) => {\r\n    // console.log(`year_chi = ${year_chi} month_chi=${month_chi} day=${day} time_chi=${time_chi}`);\r\n\r\n    let cnt = 0\r\n    cnt += floor12_int[floor12_str.indexOf(year_chi)]\r\n    // \r\n    cnt += floor12_int[floor12_month_str.indexOf(month_chi)]\r\n    // \r\n    cnt += day\r\n    // \r\n    cnt += floor12_int[floor12_str.indexOf(time_chi)]\r\n    // \r\n\r\n\r\n    let gok = cnt % 9\r\n    gok = gok == 0 ? 9 : gok\r\n\r\n    return gok\r\n}\r\n\r\nconst floor_tin_gone = (number, up_down) => {\r\n    let floor_seq_array = []\r\n    let cnt = 1\r\n    floor_seq_array[0] = number\r\n\r\n    if (up_down == 0) {\r\n        while (cnt <= 8) {\r\n\r\n            let val = floor_seq_array[cnt - 1] - 1\r\n            if (val < 1) {\r\n                val = 9\r\n            }\r\n\r\n            floor_seq_array[cnt] = val\r\n            cnt++\r\n        }\r\n    }\r\n    else if (up_down == 1) {\r\n        while (cnt <= 8) {\r\n\r\n            let val = floor_seq_array[cnt - 1] + 1\r\n            if (val > 9) {\r\n                val = 1\r\n            }\r\n\r\n            floor_seq_array[cnt] = val\r\n            cnt++\r\n        }\r\n    }\r\n\r\n    return floor_seq_array\r\n}\r\n\r\nconst find_empty_and_chun = (time_gone_chi) => {\r\n    let gone = time_gone_chi[0]\r\n    let chi = time_gone_chi[1]\r\n\r\n\r\n    let end = 9 - tin_gone_10_str.indexOf(gone)\r\n\r\n    let empty1 = end + 1 + floor12_str.indexOf(chi)\r\n    let empty2 = end + 2 + floor12_str.indexOf(chi)\r\n\r\n    empty1 = empty1 >= 12 ? empty1 - 12 : empty1\r\n    empty2 = empty2 >= 12 ? empty2 - 12 : empty2\r\n\r\n\r\n    let empty = {\r\n        \"empty1\": floor12_str[empty1],\r\n        \"empty2\": floor12_str[empty2],\r\n        \"chun_gone\": find_chun(empty2),\r\n        \"chun_chi\": find_chun_chi(empty2)\r\n    }\r\n\r\n    return empty\r\n}\r\n\r\nconst find_empty_gong = (empty) => {\r\n\r\n    let gong = \"\"\r\n    hill24.forEach((hill) => {\r\n        if (hill['chi'].includes(empty))\r\n            gong = hill['gong']\r\n    })\r\n\r\n    return gong\r\n\r\n}\r\n\r\nconst find_harm = (gong, tin_gone, floor_gone) => {\r\n    let harmful = false\r\n    harm.forEach((h) => {\r\n        if (h['gong'] == gong) {\r\n            h['chi'].forEach((h) => {\r\n                if (tin_gone.indexOf(h) > -1 || floor_gone.indexOf(h) > -1)\r\n                    harmful = true\r\n            })\r\n        }\r\n    })\r\n\r\n    if (tin_gone.indexOf(\"辛\") > -1 && floor_gone.indexOf(\"辛\") > -1)\r\n        harmful = true\r\n    if (tin_gone.indexOf(\"壬\") > -1 && floor_gone.indexOf(\"壬\") > -1)\r\n        harmful = true\r\n\r\n    return harmful\r\n}\r\n\r\nconst find_grave = (gong, tin_gone, floor_gone, sun, floor_sun) => {\r\n    let is_grave = false\r\n    grave.forEach((g) => {\r\n        if (g['gong'] == gong) {\r\n            g['chi'].forEach((g) => {\r\n                if (tin_gone.indexOf(g) > -1 || floor_gone.indexOf(g) > -1)\r\n                    is_grave = true\r\n            })\r\n\r\n            if (g['sun'].includes(sun) || g['sun'].includes(floor_sun))\r\n                is_grave = true\r\n        }\r\n    })\r\n\r\n    return is_grave\r\n}\r\n\r\nconst find_bik = (gong, door) => {\r\n    let is_bik = false\r\n    bik.forEach((b) => {\r\n        if (b['gong'] == gong)\r\n            if (b['door'].includes(door))\r\n                is_bik = true\r\n    })\r\n\r\n    return is_bik\r\n}\r\n\r\nconst find_horse = (time_chi) => {\r\n    let horse_gong = 0\r\n    horse.forEach((h) => {\r\n        if (h['chi'].includes(time_chi))\r\n            horse_gong = h['horse_gong']\r\n    })\r\n\r\n    return horse_gong\r\n}\r\n\r\n\r\nconst find_chun = (empty2) => {\r\n    let chun6 = empty2 + 1 >= 12 ? floor12_str[empty2 + 1 - 12] : floor12_str[empty2 + 1]\r\n    let chun6_idx = chun6_chi_seq.indexOf(chun6)\r\n    return chun6_seq[chun6_idx]\r\n}\r\n\r\nconst find_chun_chi = (empty2) => {\r\n    let chun6 = empty2 + 1 >= 12 ? floor12_str[empty2 + 1 - 12] : floor12_str[empty2 + 1]\r\n    return chun6\r\n}\r\n\r\nconst find_door_and_star = (floor_seq_array, chun) => {\r\n    let chun_gung_idx = floor_seq_array[tin_gone_seq.indexOf(chun)]\r\n    chun_gung_idx = chun_gung_idx == 5 ? 2 : chun_gung_idx\r\n    let door_sun_seq_idx = door_sun_seq.indexOf(chun_gung_idx)\r\n\r\n    let door_and_star = {\r\n        \"door\": door_seq[door_sun_seq_idx],\r\n        \"star\": star_seq[door_sun_seq_idx],\r\n    }\r\n    // \r\n    return door_and_star\r\n}\r\n\r\nconst get_floor_tin_gone_display = (floor_tin_gone_seq) => {\r\n    let display_floor_tin_gone_array = []\r\n    display_floor_tin_gone_array[3] = { primary: tin_gone_seq[floor_tin_gone_seq.indexOf(4)] }\r\n    display_floor_tin_gone_array[4] = { primary: tin_gone_seq[floor_tin_gone_seq.indexOf(9)] }\r\n    display_floor_tin_gone_array[5] = { primary: tin_gone_seq[floor_tin_gone_seq.indexOf(2)], second: tin_gone_seq[floor_tin_gone_seq.indexOf(5)] }\r\n    display_floor_tin_gone_array[2] = { primary: tin_gone_seq[floor_tin_gone_seq.indexOf(3)] }\r\n    display_floor_tin_gone_array[8] = { primary: tin_gone_seq[floor_tin_gone_seq.indexOf(5)] }\r\n    display_floor_tin_gone_array[6] = { primary: tin_gone_seq[floor_tin_gone_seq.indexOf(7)] }\r\n    display_floor_tin_gone_array[1] = { primary: tin_gone_seq[floor_tin_gone_seq.indexOf(8)] }\r\n    display_floor_tin_gone_array[0] = { primary: tin_gone_seq[floor_tin_gone_seq.indexOf(1)] }\r\n    display_floor_tin_gone_array[7] = { primary: tin_gone_seq[floor_tin_gone_seq.indexOf(6)] }\r\n    return display_floor_tin_gone_array\r\n}\r\n\r\nconst get_star_display = (floor_tin_gone_display, time_gone, time_chi, star) => {\r\n    // \r\n    let start_gong = 0\r\n\r\n\r\n    if (time_gone == \"甲\") {\r\n        let gone = \"\"\r\n        gak_time_gone.forEach((g) => {\r\n            if (g['gak'] == time_chi)\r\n                gone = g['gone']\r\n        })\r\n\r\n\r\n        floor_tin_gone_display.forEach((tg, idx) => { if (tg['primary'] == gone) start_gong = idx })\r\n    }\r\n    else\r\n        floor_tin_gone_display.forEach((tg, idx) => { if (tg['primary'] == time_gone) start_gong = idx })\r\n\r\n    if (start_gong == 8)\r\n        start_gong = 5\r\n    let star_seq_array = []\r\n    // \r\n    if (star_seq.indexOf(star) != start_gong) {\r\n        let shift_cnb = start_gong > star_seq.indexOf(star) ? start_gong - star_seq.indexOf(star) : star_seq.indexOf(star) - start_gong\r\n        // \r\n\r\n        star_seq_array = start_gong > star_seq.indexOf(star) ? shiftRight(star_seq, shift_cnb) : shiftLeft(star_seq, shift_cnb)\r\n    }\r\n    else {\r\n        star_seq_array.push(...star_seq)\r\n    }\r\n    // \r\n    return star_seq_array\r\n}\r\n\r\nconst get_tin_tin_gone_display = (star_display_seq, floor_tin_gone_display) => {\r\n    let t_floor_tin_gone_display = []\r\n    t_floor_tin_gone_display.push(...floor_tin_gone_display)\r\n    t_floor_tin_gone_display.pop()\r\n    // \r\n    let start_idx = star_display_seq.indexOf(star_seq[0])\r\n    // \r\n    let tin_tin_gone_seq = []\r\n    let shift_cnb = start_idx\r\n    tin_tin_gone_seq = shiftRight(t_floor_tin_gone_display, shift_cnb)\r\n\r\n    let tin_tin_gone_str_seq = []\r\n    tin_tin_gone_seq.forEach((t, idx) => {\r\n        if (t.hasOwnProperty('second')) {\r\n            tin_tin_gone_str_seq.push(t['primary'] + t['second'])\r\n        }\r\n        else {\r\n            tin_tin_gone_str_seq.push(t['primary'])\r\n        }\r\n    })\r\n\r\n\r\n\r\n    // \r\n    return tin_tin_gone_str_seq\r\n}\r\n\r\nconst get_door_display = (display_floor_tin_gone_array, chun_gone, chun_chi, time_chi, up_down, door) => {\r\n    // \r\n    // \r\n    let chun_gong = 0;\r\n\r\n    display_floor_tin_gone_array.forEach((t, idx) => {\r\n        if (t['primary'] == chun_gone) {\r\n            if (idx == 8)\r\n                chun_gong = 5\r\n            else\r\n                chun_gong = door_sun_seq[idx]\r\n        }\r\n    })\r\n\r\n    let chun_chi_idx = floor12_str.indexOf(chun_chi);\r\n    let time_chi_idx = floor12_str.indexOf(time_chi);\r\n\r\n    let door_seq_array = []\r\n\r\n    if (chun_chi != time_chi_idx) {\r\n        if (up_down == 0) {\r\n\r\n            let diff = 0;\r\n\r\n\r\n\r\n            if (chun_chi_idx == time_chi_idx)\r\n                diff = 0\r\n            else if (time_chi_idx < 12 && time_chi_idx > chun_chi_idx)\r\n                diff = time_chi_idx - chun_chi_idx\r\n            else\r\n                diff = floor12_str.length - chun_chi_idx + time_chi_idx;\r\n\r\n\r\n            // if (time_chi_idx < chun_chi_idx) {\r\n            //     \r\n            //     \r\n            //     diff = chun_chi_idx - time_chi_idx\r\n            // }\r\n            // else if (time_chi_idx > chun_chi_idx) {\r\n            //     diff = time_chi_idx - chun_chi_idx\r\n            // }\r\n\r\n            // \r\n\r\n\r\n\r\n            let door_start_idx = 0\r\n            // if (chun_gong > diff)\r\n            //     door_start_idx = door_sun_seq.indexOf(chun_gong - diff)\r\n            // else \r\n            if (diff >= chun_gong)\r\n                chun_gong += 9\r\n\r\n\r\n\r\n            if (chun_gong - diff > 0)\r\n                door_start_idx = door_sun_seq.indexOf(chun_gong - diff)\r\n\r\n            if (door_start_idx == -1)\r\n                door_start_idx = 5\r\n\r\n\r\n\r\n\r\n            let fuk = door == door_seq[door_start_idx]\r\n\r\n\r\n\r\n\r\n            if (!fuk && door_sun_seq[door_start_idx] != chun_gong) {\r\n                let shift_cnb = 0\r\n                if (door_seq.indexOf(door) > door_start_idx) {\r\n                    shift_cnb = door_seq.indexOf(door) - door_start_idx\r\n                    door_seq_array = shiftLeft(door_seq, shift_cnb)\r\n                }\r\n                else if (door_start_idx > door_seq.indexOf(door)) {\r\n                    shift_cnb = door_start_idx - door_seq.indexOf(door)\r\n                    door_seq_array = shiftRight(door_seq, shift_cnb)\r\n                }\r\n            }\r\n            else {\r\n                door_seq_array.push(...door_seq)\r\n            }\r\n        }\r\n        else if (up_down == 1) {\r\n\r\n            let diff = 0;\r\n\r\n\r\n\r\n            if (chun_chi_idx == time_chi_idx)\r\n                diff = 0\r\n            else if (time_chi_idx < 12 && time_chi_idx > chun_chi_idx)\r\n                diff = time_chi_idx - chun_chi_idx\r\n            else\r\n                diff = floor12_str.length - chun_chi_idx + time_chi_idx;\r\n\r\n\r\n            // if (time_chi_idx < chun_chi_idx) {\r\n            //     diff = chun_chi_idx + (floor12_str.length - chun_chi_idx) - time_chi_idx\r\n            // }\r\n            // else if (time_chi_idx > chun_chi_idx) {\r\n            //     diff = time_chi_idx - chun_chi_idx\r\n            // }\r\n\r\n\r\n\r\n\r\n            let door_start_idx = 0\r\n            // if (chun_gong > diff)\r\n            //     door_start_idx = door_sun_seq.indexOf(chun_gong - diff)\r\n            // else \r\n            if (chun_gong + diff > 9)\r\n                chun_gong -= 9\r\n\r\n\r\n\r\n            if (chun_gong + diff > 0)\r\n                door_start_idx = door_sun_seq.indexOf(chun_gong + diff)\r\n\r\n            if (door_start_idx == -1)\r\n                door_start_idx = 5\r\n\r\n\r\n\r\n\r\n\r\n\r\n            let fuk = door == door_seq[door_start_idx]\r\n\r\n            if (!fuk && door_sun_seq[door_start_idx] != chun_gong) {\r\n                let shift_cnb = 0\r\n                if (door_seq.indexOf(door) > door_start_idx) {\r\n                    shift_cnb = door_seq.indexOf(door) - door_start_idx\r\n                    door_seq_array = shiftLeft(door_seq, shift_cnb)\r\n                }\r\n                else if (door_start_idx > door_seq.indexOf(door)) {\r\n                    shift_cnb = door_start_idx - door_seq.indexOf(door)\r\n                    door_seq_array = shiftRight(door_seq, shift_cnb)\r\n                }\r\n\r\n            }\r\n            else {\r\n                door_seq_array.push(...door_seq)\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        door_seq_array.push(...door_seq)\r\n    }\r\n    // \r\n    return door_seq_array\r\n\r\n\r\n}\r\n\r\nconst get_sun_display = (display_tin_tin_gone_array, chun_gone, up_down) => {\r\n    let shift_cnb = 0\r\n\r\n\r\n    let sun_seq_array = []\r\n\r\n    let t_sun_array = []\r\n    t_sun_array.push(...sun_seq)\r\n    if (up_down == 0) {\r\n        let t_tin_tin_gone_array = []\r\n        t_tin_tin_gone_array.push(...display_tin_tin_gone_array)\r\n        t_tin_tin_gone_array.reverse()\r\n\r\n        // \r\n\r\n        t_tin_tin_gone_array.forEach((t, idx) => {\r\n            if (t.indexOf(chun_gone) > -1)\r\n                shift_cnb = idx\r\n        })\r\n\r\n        // \r\n        t_sun_array = t_sun_array.reverse()\r\n        sun_seq_array = shiftLeft(t_sun_array, shift_cnb)\r\n    }\r\n    else {\r\n\r\n        display_tin_tin_gone_array.forEach((t, idx) => {\r\n            if (t.indexOf(chun_gone) > -1)\r\n                shift_cnb = idx\r\n        })\r\n        sun_seq_array = shiftRight(t_sun_array, shift_cnb)\r\n    }\r\n\r\n\r\n    // \r\n    return sun_seq_array\r\n}\r\n\r\nconst get_floor_sun_display = (display_floor_tin_gone_array, chun_gone, up_down) => {\r\n\r\n    let t_floor_tin_gone_display = []\r\n    t_floor_tin_gone_display.push(...display_floor_tin_gone_array)\r\n    t_floor_tin_gone_display.pop()\r\n\r\n    // \r\n\r\n    let shift_cnt = 0\r\n\r\n\r\n    let sun_seq_array = []\r\n\r\n    let t_sun_array = []\r\n    t_sun_array.push(...sun_seq)\r\n\r\n    if (up_down == 0) {\r\n        let t_floor_tin_gone_array = []\r\n        t_floor_tin_gone_array.push(...t_floor_tin_gone_display)\r\n        t_floor_tin_gone_array.reverse()\r\n\r\n        // \r\n        // shift_cnt = t_floor_tin_gone_array.indexOf(chun_gone)\r\n        t_floor_tin_gone_array.forEach((t, idx) => {\r\n            if (t['primary'] == chun_gone || t['second'] == chun_gone)\r\n                shift_cnt = idx\r\n        })\r\n\r\n        t_sun_array = t_sun_array.reverse()\r\n\r\n        // \r\n        sun_seq_array = shiftLeft(t_sun_array, shift_cnt)\r\n    }\r\n    else {\r\n        // shift_cnt = t_floor_tin_gone_display.indexOf(chun_gone)\r\n        t_floor_tin_gone_display.forEach((t, idx) => {\r\n            if (t['primary'] == chun_gone || t['second'] == chun_gone)\r\n                shift_cnt = idx\r\n        })\r\n        sun_seq_array = shiftRight(t_sun_array, shift_cnt)\r\n    }\r\n\r\n\r\n    // \r\n    return sun_seq_array\r\n}\r\n\r\nconst find_yan_gone = (tin_tin_gone_seq, time_gone, time_chi, door_tin_gone, chun_gone, yinyang, door_gong_idx) => {\r\n\r\n    let yan_gone_array = []\r\n    yan_gone_array.push(...tin_tin_gone_seq)\r\n    let yan_gone_obj_array = []\r\n\r\n    if (time_gone == \"甲\") {\r\n        let gone = \"\"\r\n        gak_time_gone.forEach((g) => {\r\n            if (g['gak'] == time_chi)\r\n                gone = g['gone']\r\n        })\r\n\r\n\r\n        time_gone = gone\r\n    }\r\n\r\n\r\n\r\n    if (door_tin_gone.indexOf(time_gone) > -1) {\r\n        let shifted_tin_gone_seq = []\r\n        shifted_tin_gone_seq.push(...tin_gone_seq)\r\n        let shift_cnt = 0\r\n        shifted_tin_gone_seq.forEach((t, idx) => {\r\n            if (t.indexOf(chun_gone) > -1) {\r\n\r\n                shift_cnt = idx\r\n            }\r\n        })\r\n\r\n        // shifted_tin_gone_seq = shiftLeft(shifted_tin_gone_seq, shift_cnt)\r\n        shifted_tin_gone_seq = shiftArray(shifted_tin_gone_seq, chun_gone)\r\n\r\n\r\n        if (yinyang == 0) {\r\n            yan_gone_array[3] = shifted_tin_gone_seq[1]\r\n            yan_gone_array[2] = shifted_tin_gone_seq[2]\r\n            yan_gone_array[5] = shifted_tin_gone_seq[3] + shifted_tin_gone_seq[0]\r\n            yan_gone_array[0] = shifted_tin_gone_seq[4]\r\n            yan_gone_array[4] = shifted_tin_gone_seq[5]\r\n            yan_gone_array[1] = shifted_tin_gone_seq[6]\r\n            yan_gone_array[6] = shifted_tin_gone_seq[7]\r\n            yan_gone_array[7] = shifted_tin_gone_seq[8]\r\n        }\r\n        else if (yinyang == 1) {\r\n            yan_gone_array[7] = shifted_tin_gone_seq[1]\r\n            yan_gone_array[6] = shifted_tin_gone_seq[2]\r\n            yan_gone_array[1] = shifted_tin_gone_seq[3]\r\n            yan_gone_array[4] = shifted_tin_gone_seq[4]\r\n            yan_gone_array[0] = shifted_tin_gone_seq[5]\r\n            yan_gone_array[5] = shifted_tin_gone_seq[6] + shifted_tin_gone_seq[0]\r\n            yan_gone_array[2] = shifted_tin_gone_seq[7]\r\n            yan_gone_array[3] = shifted_tin_gone_seq[8]\r\n        }\r\n    }\r\n    else {\r\n\r\n\r\n        let shift_cnt = 0;\r\n        let time_gone_idx = 0\r\n        // yan_gone_array.indexOf(time_gone)\r\n        yan_gone_array.forEach((y, idx) => {\r\n            if (y.indexOf(time_gone) > -1)\r\n                time_gone_idx = idx\r\n        })\r\n\r\n        if (time_gone_idx > door_gong_idx) {\r\n            shift_cnt = time_gone_idx - door_gong_idx\r\n            yan_gone_array = shiftLeft(yan_gone_array, shift_cnt)\r\n        }\r\n        else if (door_gong_idx > time_gone_idx) {\r\n            shift_cnt = door_gong_idx - time_gone_idx\r\n            yan_gone_array = shiftRight(yan_gone_array, shift_cnt)\r\n        }\r\n\r\n    }\r\n\r\n    yan_gone_array.forEach((y) => {\r\n        let gone = y.split('')\r\n        if (gone.length == 1) {\r\n            yan_gone_obj_array.push({ primary: gone[0], second: \"\" })\r\n        }\r\n        else if (gone.length == 2) {\r\n            yan_gone_obj_array.push({ primary: gone[0], second: gone[1] })\r\n        }\r\n    })\r\n\r\n\r\n\r\n    return yan_gone_obj_array\r\n}\r\n\r\nconst spinR = (dataSetObj, n) => {\r\n    let floor_tin_gone5 = dataSetObj.display_floor_tin_gone_array[8]\r\n    let temp_floor_tin_gone_array = dataSetObj.display_floor_tin_gone_array.filter((t, idx) => idx != 8)\r\n    temp_floor_tin_gone_array = shiftLeft(temp_floor_tin_gone_array, n)\r\n    let display_floor_tin_gone_array = [\r\n        temp_floor_tin_gone_array[0],\r\n        temp_floor_tin_gone_array[1],\r\n        temp_floor_tin_gone_array[2],\r\n        temp_floor_tin_gone_array[3],\r\n        temp_floor_tin_gone_array[4],\r\n        temp_floor_tin_gone_array[5],\r\n        temp_floor_tin_gone_array[6],\r\n        temp_floor_tin_gone_array[7],\r\n        floor_tin_gone5\r\n    ]\r\n\r\n    let returnObj = {\r\n        display_floor_tin_gone_array: display_floor_tin_gone_array,\r\n        display_tin_tin_gone_array: shiftLeft(dataSetObj.display_tin_tin_gone_array, n),\r\n        display_sun_array: shiftLeft(dataSetObj.display_sun_array, n),\r\n        display_floor_sun_array: shiftLeft(dataSetObj.display_floor_sun_array, n),\r\n        display_star_array: shiftLeft(dataSetObj.display_star_array, n),\r\n        display_door_array: shiftLeft(dataSetObj.display_door_array, n),\r\n        yan_gone_array: shiftLeft(dataSetObj.yan_gone_array, n)\r\n    }\r\n    return returnObj\r\n}\r\n\r\nconst spinL = (dataSetObj, n) => {\r\n    let floor_tin_gone5 = dataSetObj.display_floor_tin_gone_array[8]\r\n    let temp_floor_tin_gone_array = dataSetObj.display_floor_tin_gone_array.filter((t, idx) => idx != 8)\r\n    temp_floor_tin_gone_array = shiftRight(temp_floor_tin_gone_array, n)\r\n    let display_floor_tin_gone_array = [\r\n        temp_floor_tin_gone_array[0],\r\n        temp_floor_tin_gone_array[1],\r\n        temp_floor_tin_gone_array[2],\r\n        temp_floor_tin_gone_array[3],\r\n        temp_floor_tin_gone_array[4],\r\n        temp_floor_tin_gone_array[5],\r\n        temp_floor_tin_gone_array[6],\r\n        temp_floor_tin_gone_array[7],\r\n        floor_tin_gone5\r\n    ]\r\n\r\n    let returnObj = {\r\n        display_floor_tin_gone_array: display_floor_tin_gone_array,\r\n        display_tin_tin_gone_array: shiftRight(dataSetObj.display_tin_tin_gone_array, n),\r\n        display_sun_array: shiftRight(dataSetObj.display_sun_array, n),\r\n        display_floor_sun_array: shiftRight(dataSetObj.display_floor_sun_array, n),\r\n        display_star_array: shiftRight(dataSetObj.display_star_array, n),\r\n        display_door_array: shiftRight(dataSetObj.display_door_array, n),\r\n        yan_gone_array: shiftRight(dataSetObj.yan_gone_array, n)\r\n    }\r\n    return returnObj\r\n}\r\n\r\nconst spinGone = (left, right) => {\r\n    if (left > 0)\r\n        return shiftRight(door_sun_seq, left)\r\n    else if (right > 0)\r\n        return shiftLeft(door_sun_seq, right)\r\n    else\r\n        return door_sun_seq\r\n}\r\n\r\nconst shiftLeft = (arr, n) => {\r\n    let temp_array = []\r\n    temp_array.push(...arr)\r\n    for (let i = 0; i < n; i++) {\r\n        let temp = temp_array.shift();\r\n        temp_array.push(temp);\r\n    }\r\n    return temp_array;\r\n}\r\n\r\nconst shiftRight = (arr, n) => {\r\n    let temp_array = []\r\n    temp_array.push(...arr)\r\n    for (let i = temp_array.length; i > n; i--) {\r\n        let temp = temp_array.shift();\r\n        temp_array.push(temp);\r\n    }\r\n    return temp_array;\r\n}\r\n\r\nconst shiftArray = (arr, target) => {\r\n    return arr.concat(arr.splice(0, arr.indexOf(target)));\r\n}\r\n\r\nconst getSolarTerm = (year, index) => {\r\n    var termInfo = new Array(0, 21208, 42467, 63836, 85337, 107014, 128867, 150921, 173149, 195551, 218072, 240115, 263343, 285989, 308563, 331033, 353350, 375494, 397447, 419210, 440795, 462224, 483532, 504758);\r\n    var solarTerm = new Array(\"小寒\", \"大寒\", \"立春\", \"雨水\", \"惊蛰\", \"春分\", \"清明\", \"谷雨\", \"立夏\", \"小满\", \"芒种\", \"夏至\", \"小暑\", \"大暑\", \"立秋\", \"处暑\", \"白露\", \"秋分\", \"寒露\", \"霜降\", \"立冬\", \"小雪\", \"大雪\", \"冬至\");\r\n    var date = new Date((31556925974.7 * (year - 1900) + termInfo[index] * 60000) + Date.UTC(1900, 0, 6, 2, 5));\r\n    return date;\r\n}\r\n\r\nfunction removeItemOnce(arr, value) {\r\n    var index = arr.indexOf(value);\r\n    if (index > -1) {\r\n        arr.splice(index, 1);\r\n    }\r\n    return arr;\r\n}\r\n\r\nconst isHarmGone = (empty, grave, harm, bik, tin_gone, floor_gone) => {\r\n    let harms = empty || grave || harm || bik;\r\n    let theif_gok = theifs(tin_gone, floor_gone)\r\n    return harms || theif_gok\r\n}\r\n\r\nconst nearestDates = (d) => {\r\n    let dates = Array()\r\n    let now = new Date()\r\n    now.setHours(0)\r\n    now.setMinutes(0)\r\n    now.setSeconds(0)\r\n\r\n    let orig_d = d\r\n    let past = (now.getTime() - orig_d.toDate().getTime()) / (1000 * 3600 * 24) >= 9\r\n    let limit = past ? 30 : 30\r\n    if (past)\r\n        orig_d = lunisolar(now)\r\n\r\n    for (let i = 0; i < limit; i++) {\r\n        try {\r\n            let temp_d = orig_d.add(i, 'd')\r\n\r\n            let _gone = -1\r\n            gone_chi.forEach((g) => { if (g.chi.indexOf(temp_d.char8.day.branch.toString()) > -1) _gone = g.gone })\r\n\r\n            let temp_d_obj = temp_d.toDate()\r\n            temp_d_obj.setHours(0)\r\n            temp_d_obj.setMinutes(0)\r\n            temp_d_obj.setSeconds(0)\r\n            let orig_d_obj = orig_d.toDate()\r\n            orig_d_obj.setHours(0)\r\n            orig_d_obj.setMinutes(0)\r\n            orig_d_obj.setSeconds(0)\r\n\r\n            dates.push({\r\n                gone: _gone,\r\n                lunar_day_chi: temp_d.char8.day.branch.toString(),\r\n                date: temp_d.format('YYYY/MM/DD'),\r\n                best_before_date: (temp_d_obj.getTime() - orig_d_obj.getTime()) / (1000 * 3600 * 24) < 9 ? true : false,\r\n                yin_yang: floor12_str.indexOf(temp_d.char8.day.branch.toString()) % 2 == 0 ? '陽' : '陰',\r\n                animal: floor12_animarl[floor12_str.indexOf(temp_d.char8.day.branch.toString())],\r\n                past: past\r\n            })\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    return dates\r\n}\r\n\r\nconst findSameGone = (char8, d, yinyang) => {\r\n    let _set = new Set()\r\n    if (char8.year !== \"\" && char8.month !== \"\" && char8.day !== \"\" && char8.time !== \"\") {\r\n        let _year = char8['year'][0]\r\n        let _month = char8['month'][0]\r\n        let _day = char8['day'][0]\r\n        let _time = char8['time'][0]\r\n\r\n        let gok = find_gok(char8['year'][1], char8['month'][1], d.toDate().getHours() >= 23 ? lunisolar(new Date(d.toDate().getTime() + 3600000)).lunar.day : d.lunar.day, char8['time'][1])\r\n        let empty_and_chun = find_empty_and_chun(char8['time']);\r\n        let chun_gone = empty_and_chun['chun_gone']\r\n        let door_and_star = find_door_and_star(floor_tin_gone(gok, yinyang), chun_gone)\r\n        let floor_tin_gone_seq = floor_tin_gone(gok, yinyang)\r\n        let display_floor_tin_gone_array = get_floor_tin_gone_display(floor_tin_gone_seq)\r\n        let display_star_array = get_star_display(display_floor_tin_gone_array, char8['time'][0], char8['time'][1], door_and_star['star'])\r\n        let display_tin_tin_gone_array = get_tin_tin_gone_display(display_star_array, display_floor_tin_gone_array)\r\n\r\n        let doubleTinGone = \"\"\r\n\r\n        display_tin_tin_gone_array.forEach(g => {\r\n            if (g.length === 2) {\r\n                doubleTinGone = g\r\n            }\r\n        })\r\n\r\n        let repeatedCnt = 0\r\n        let repeatedSet = new Set()\r\n\r\n        if (_year === '甲')\r\n            _year = empty_and_chun['chun_gone']\r\n        if (_month === '甲')\r\n            _month = empty_and_chun['chun_gone']\r\n        if (_day === '甲')\r\n            _day = empty_and_chun['chun_gone']\r\n        if (_time === '甲')\r\n            _time = empty_and_chun['chun_gone']\r\n\r\n        if (doubleTinGone.indexOf(_year) > -1) {\r\n            repeatedCnt++\r\n            repeatedSet.add('year')\r\n        }\r\n        if (doubleTinGone.indexOf(_month) > -1) {\r\n            repeatedCnt++\r\n            repeatedSet.add('month')\r\n        }\r\n        if (doubleTinGone.indexOf(_day) > -1) {\r\n            repeatedCnt++\r\n            repeatedSet.add('day')\r\n        }\r\n        if (doubleTinGone.indexOf(_time) > -1) {\r\n            repeatedCnt++\r\n            repeatedSet.add('time')\r\n        }\r\n\r\n        if (repeatedCnt++ > 1)\r\n            repeatedSet.forEach(r => _set.add(r))\r\n\r\n        //year\r\n        if (_year === _month) {\r\n            _set.add('year')\r\n            _set.add('month')\r\n        }\r\n        if (_year === _day) {\r\n            _set.add('year')\r\n            _set.add('day')\r\n        }\r\n        if (_year === _time) {\r\n            _set.add('year')\r\n            _set.add('time')\r\n        }\r\n        //month\r\n        if (_month === _year) {\r\n            _set.add('month')\r\n            _set.add('year')\r\n        }\r\n        if (_month === _day) {\r\n            _set.add('month')\r\n            _set.add('day')\r\n        }\r\n        if (_month === _time) {\r\n            _set.add('month')\r\n            _set.add('time')\r\n        }\r\n        //day\r\n        if (_day === _year) {\r\n            _set.add('day')\r\n            _set.add('year')\r\n        }\r\n        if (_day === _month) {\r\n            _set.add('day')\r\n            _set.add('month')\r\n        }\r\n        if (_day === _time) {\r\n            _set.add('day')\r\n            _set.add('time')\r\n        }\r\n        //time\r\n        if (_time === _year) {\r\n            _set.add('time')\r\n            _set.add('year')\r\n        }\r\n        if (_time === _month) {\r\n            _set.add('time')\r\n            _set.add('month')\r\n        }\r\n        if (_time === _day) {\r\n            _set.add('time')\r\n            _set.add('day')\r\n        }\r\n    }\r\n\r\n    return _set\r\n}\r\n\r\nconst mainCalculation = (time_gone, time_chi, time_gone_chi, year_chi, month_chi, day, yinyang) => {\r\n    let empty_and_chun = find_empty_and_chun(time_gone_chi);\r\n    let gok = find_gok(year_chi, month_chi, day, time_chi)\r\n\r\n\r\n    let chun_gone = empty_and_chun['chun_gone']\r\n    let chun_chi = empty_and_chun['chun_chi']\r\n\r\n    let empty_gong1 = find_empty_gong(empty_and_chun['empty1'])\r\n    let empty_gong2 = find_empty_gong(empty_and_chun['empty2'])\r\n\r\n    let door_and_star = find_door_and_star(floor_tin_gone(gok, yinyang), chun_gone)\r\n\r\n    let floor_tin_gone_seq = floor_tin_gone(gok, yinyang)\r\n    let display_floor_tin_gone_array = get_floor_tin_gone_display(floor_tin_gone_seq)\r\n\r\n    let display_star_array = get_star_display(display_floor_tin_gone_array, time_gone, time_chi, door_and_star['star'])\r\n    let display_tin_tin_gone_array = get_tin_tin_gone_display(display_star_array, display_floor_tin_gone_array)\r\n\r\n    let display_door_array = get_door_display(display_floor_tin_gone_array, chun_gone, chun_chi, time_chi, yinyang, door_and_star['door'])\r\n\r\n    let display_sun_array = get_sun_display(display_tin_tin_gone_array, chun_gone, yinyang)\r\n    let display_floor_sun_array = get_floor_sun_display(display_floor_tin_gone_array, chun_gone, yinyang)\r\n\r\n    let horse = find_horse(time_chi)\r\n\r\n    let door_gong_idx = 0\r\n\r\n    display_door_array.forEach((d, idx) => {\r\n        if (d == door_and_star['door'])\r\n            door_gong_idx = idx\r\n    })\r\n\r\n    let yan_gone_array = find_yan_gone(display_tin_tin_gone_array, time_gone, time_chi, display_tin_tin_gone_array[door_gong_idx], chun_gone, yinyang, door_gong_idx)\r\n\r\n    let wong_gong = find_wong_gong(month_chi)\r\n\r\n    let door_fok = is_door_fok(display_door_array[0], door_seq[0]) ? \"八門伏吟\" : \"\"\r\n    let gone_fok = is_gone_fok(display_floor_tin_gone_array[0]['primary'], display_tin_tin_gone_array[0]) ? \"天干伏吟\" : \"\"\r\n    let door_fan = is_door_fan(display_door_array[0], door_seq[4]) ? \"八門反吟\" : \"\"\r\n    let gone_fan = is_gone_fan(display_floor_tin_gone_array[0]['primary'], display_tin_tin_gone_array[4]) ? \" 天干反吟\" : \"\"\r\n\r\n    let fanFok = door_fok || gone_fok || door_fan || gone_fan\r\n\r\n    let dataSetObj = {\r\n        gok: gok,\r\n        chun_gone: chun_gone,\r\n        chun_chi: chun_chi,\r\n        empty_gong1: empty_gong1,\r\n        empty_gong2: empty_gong2,\r\n        horse: horse,\r\n        wong_gong: wong_gong,\r\n        fanFok: fanFok,\r\n        door_and_star: door_and_star,\r\n        display_floor_tin_gone_array: display_floor_tin_gone_array,\r\n        display_tin_tin_gone_array: display_tin_tin_gone_array,\r\n        display_sun_array: display_sun_array,\r\n        display_floor_sun_array: display_floor_sun_array,\r\n        display_star_array: display_star_array,\r\n        display_door_array: display_door_array,\r\n        yan_gone_array: yan_gone_array\r\n    }\r\n\r\n    return dataSetObj\r\n}\r\n\r\nconst find_good_gok = async (d, gokCnt) => {\r\n    let returnSet = new Array()\r\n\r\n    for (let i = 0; i < gokCnt; i++) {\r\n        if (d.toDate().getHours() % 2 !== 0)\r\n            d = d.add(1, 'h')\r\n\r\n        d = d.add(2, 'h') // increase lunar time\r\n\r\n        let _temp_date = d.toDate()\r\n        _temp_date.setMinutes(0, 0)\r\n\r\n        // yyyy-mm-ddTHH:MM\r\n        let year = \"\" + _temp_date.getFullYear()\r\n        let month = \"\" + (_temp_date.getMonth() + 1)\r\n        month = month.padStart(2, '0')\r\n        let day = \"\" + _temp_date.getDate()\r\n        day = day.padStart(2, '0')\r\n        let hour = \"\" + _temp_date.getHours()\r\n        hour = hour.padStart(2, '0')\r\n        let min = \"\" + _temp_date.getMinutes()\r\n        min = min.padStart(2, '0')\r\n\r\n        let char8 = {\r\n            year: d.format('cY cM cD cH').split(\" \")[0],\r\n            month: d.format('cY cM cD cH').split(\" \")[1],\r\n            day: d.format('cY cM cD cH').split(\" \")[2],\r\n            time: d.format('cY cM cD cH').split(\" \")[3]\r\n        }\r\n\r\n        let haziDate = new Date().getTime()\r\n        let dongziDate = new Date().getTime()\r\n        let previousZit = new Date().getTime()\r\n        let currentZit = new Date().getTime()\r\n\r\n        let yinyang = 0\r\n\r\n        const fetchHazi = async () => {\r\n            const response = await find_solar_terms_offline(\"夏至\", _temp_date.getFullYear())\r\n            const _haziDate = response\r\n            haziDate = _haziDate\r\n        }\r\n\r\n        const fetchDongzi = async () => {\r\n            const response = await find_solar_terms_offline(\"冬至\", _temp_date.getFullYear())\r\n            const _dongziDate = response\r\n            dongziDate = _dongziDate\r\n        }\r\n        const fetchCurrentZit = async (datetime) => {\r\n            const response = await find_current_solar_terms_offline(_temp_date.getMonth(), _temp_date.getFullYear())\r\n            let first = response['first']\r\n            let second = response['second']\r\n            previousZit = first.getTime()\r\n            currentZit = second.getTime()\r\n\r\n        }\r\n\r\n\r\n        await fetchHazi()\r\n        await fetchDongzi()\r\n        await fetchCurrentZit(_temp_date)\r\n\r\n        if (_temp_date.getTime() < haziDate) {\r\n            yinyang = 1\r\n        }\r\n        else if (_temp_date.getTime() >= dongziDate) {\r\n            yinyang = 1\r\n        }\r\n        else if (_temp_date.getTime() >= haziDate && _temp_date.getTime() < dongziDate) {\r\n            yinyang = 0\r\n        }\r\n\r\n        let char8_splits = d.format('cY cM cD cH').split(\" \")\r\n\r\n        if (\r\n            roundToNearestMinute(_temp_date).getTime() <= roundToNearestMinute(new Date(currentZit)).getTime()\r\n        ) {\r\n            let t_c_splits = char8_splits[1].split(\"\")\r\n            let year_splits = char8_splits[0].split(\"\")\r\n\r\n\r\n            if (t_c_splits.length == 2) {\r\n                let gone_idx = tin_gone_10_str.indexOf(t_c_splits[0])\r\n                let chi_idx = floor12_str.indexOf(t_c_splits[1])\r\n\r\n                let new_gone = t_c_splits[0]\r\n                let new_chi = t_c_splits[1]\r\n\r\n                let year_gone_idx = tin_gone_10_str.indexOf(year_splits[0])\r\n                let year_chi_idx = floor12_str.indexOf(year_splits[1])\r\n\r\n                let new_year_gone = year_splits[0]\r\n                let new_year_chi = year_splits[1]\r\n\r\n                let currentZitDate = new Date(currentZit)\r\n\r\n                if (\r\n                    (\r\n                        _temp_date.getDate() == currentZitDate.getDate() - 1\r\n                        &&\r\n                        _temp_date.getHours() >= 23\r\n                    )\r\n                    ||\r\n                    (\r\n                        _temp_date.getDate() == currentZitDate.getDate()\r\n                        &&\r\n                        (\r\n                            _temp_date.getHours() < currentZitDate.getHours() ||\r\n                            (_temp_date.getHours() == currentZitDate.getHours() && _temp_date.getMinutes() <= currentZitDate.getMinutes())\r\n                        )\r\n                    )\r\n                ) {\r\n                    if (gone_idx == 0) {\r\n                        new_gone = tin_gone_10_str[tin_gone_10_str.length - 1]\r\n                    }\r\n                    else {\r\n                        if (d.lunar.month - 1 != gone_idx)\r\n                            new_gone = tin_gone_10_str[gone_idx - 1]\r\n                    }\r\n\r\n                    if (chi_idx == 0) {\r\n                        new_chi = floor12_str[floor12_str.length - 1]\r\n                    }\r\n                    else {\r\n                        if (d.lunar.month - 1 != gone_idx)\r\n                            new_chi = floor12_str[chi_idx - 1]\r\n                    }\r\n                    if (month === \"02\") {\r\n                        if (year_gone_idx == 0) {\r\n                            new_year_gone = tin_gone_10_str[tin_gone_10_str.length - 1]\r\n                        }\r\n                        else {\r\n                            if (11 != year_gone_idx)\r\n                                new_year_gone = tin_gone_10_str[year_gone_idx - 1]\r\n                        }\r\n\r\n                        if (year_chi_idx == 0) {\r\n                            new_year_chi = floor12_str[floor12_str.length - 1]\r\n                        }\r\n                        else {\r\n                            if (11 != year_gone_idx)\r\n                                new_year_chi = floor12_str[year_chi_idx - 1]\r\n                        }\r\n                    }\r\n                    char8_splits[0] = new_year_gone + new_year_chi\r\n                    char8_splits[1] = new_gone + new_chi\r\n                }\r\n            }\r\n\r\n            char8.year = char8_splits[0]\r\n            char8.month = char8_splits[1]\r\n            char8.day = char8_splits[2]\r\n            char8.time = char8_splits[3]\r\n        }\r\n        else {\r\n            char8.year = char8_splits[0]\r\n            char8.month = char8_splits[1]\r\n            char8.day = char8_splits[2]\r\n            char8.time = char8_splits[3]\r\n        }\r\n\r\n        let year_chi = char8['year'].charAt(1)\r\n        let month_chi = char8['month'].charAt(1)\r\n        let lunar_day = _temp_date.getHours() >= 23 ? lunisolar(new Date(_temp_date.getTime() + 3600000)).lunar.day : d.lunar.day\r\n        let year_gone = char8['year'].charAt(0)\r\n        let month_gone = char8['month'].charAt(0)\r\n        let day_gone = char8['day'].charAt(0)\r\n        let time_gone = d.char8.hour.stem.toString()\r\n        let time_chi = d.char8.hour.branch.toString()\r\n\r\n        let dataSetObj = mainCalculation(time_gone, time_chi, time_gone + time_chi, year_chi, month_chi, lunar_day, yinyang)\r\n\r\n        let _idx = -1\r\n\r\n        dataSetObj.display_tin_tin_gone_array.forEach((t, idx) => {\r\n            if (dataSetObj.display_sun_array[idx] === '符' && day_gone === '甲')\r\n                _idx = idx\r\n            else if (t.indexOf(day_gone) > -1)\r\n                _idx = idx\r\n        })\r\n\r\n        // console.log(`_idx=${_idx}`);\r\n        // console.log(`dataSetObj.display_tin_tin_gone_array=${dataSetObj.display_tin_tin_gone_array}`);\r\n\r\n        let empty = dataSetObj.empty_gong1 == door_sun_seq[_idx] || dataSetObj.empty_gong2 == door_sun_seq[_idx]\r\n        let harm = find_harm(door_sun_seq[_idx], dataSetObj.display_tin_tin_gone_array[_idx], dataSetObj.display_floor_tin_gone_array[_idx]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[_idx]['primary'] : dataSetObj.display_floor_tin_gone_array[_idx]['primary'] + dataSetObj.display_floor_tin_gone_array[_idx]['second'])\r\n        let grave = find_grave(door_sun_seq[_idx], dataSetObj.display_tin_tin_gone_array[_idx], dataSetObj.display_floor_tin_gone_array[_idx]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[_idx]['primary'] : dataSetObj.display_floor_tin_gone_array[_idx]['primary'] + dataSetObj.display_floor_tin_gone_array[_idx]['second'], dataSetObj.display_sun_array[_idx], dataSetObj.display_floor_sun_array[_idx])\r\n        let bik = find_bik(door_sun_seq[_idx], dataSetObj.display_door_array[_idx])\r\n        let tin_tin_gone = dataSetObj.display_tin_tin_gone_array[_idx]\r\n        let floor_tin_gone = dataSetObj.display_floor_tin_gone_array[_idx]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[_idx]['primary'] : dataSetObj.display_floor_tin_gone_array[_idx]['primary'] + dataSetObj.display_floor_tin_gone_array[_idx]['second']\r\n\r\n        let harms = isHarmGone(empty, grave, harm, bik, tin_tin_gone, floor_tin_gone)\r\n        let fan_or_fok = dataSetObj.fanFok\r\n        let selected = !harms && fan_or_fok === ''\r\n\r\n        // console.log(`empty=${empty} harm=${harm} grave=${grave} bik=${bik} tin_tin_gone=${tin_tin_gone} floor_tin_gone=${floor_tin_gone}`);\r\n\r\n        // console.log(`!harms && fan_or_fok === '' =${!harms && fan_or_fok === ''}`);\r\n\r\n\r\n\r\n        if (selected) {\r\n            let gong = door_sun_seq[_idx]\r\n            // console.log(`gong=${gong}`);\r\n            let filtered = five_elements.filter(f => f.gong.indexOf(gong) > -1)\r\n            // console.log(`filtered=${JSON.stringify(filtered)}`);\r\n            let sang_ohs = filtered.length === 1 ? filtered[0].sang_oh_gong : []\r\n\r\n            let origin_gong = `${dataSetObj.display_sun_array[_idx]}${dataSetObj.display_star_array[_idx]}${dataSetObj.display_door_array[_idx]} (${dataSetObj.display_tin_tin_gone_array[_idx]}) (${dataSetObj.display_floor_tin_gone_array[_idx]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[_idx]['primary'] : dataSetObj.display_floor_tin_gone_array[_idx]['primary'] + dataSetObj.display_floor_tin_gone_array[_idx]['second']})`\r\n            let sang_gong = new Array()\r\n\r\n            sang_ohs.forEach(s => {\r\n                let empty = dataSetObj.empty_gong1 == door_sun_seq[door_sun_seq.indexOf(s)] || dataSetObj.empty_gong2 == door_sun_seq[door_sun_seq.indexOf(s)]\r\n                let harm = find_harm(door_sun_seq[door_sun_seq.indexOf(s)], dataSetObj.display_tin_tin_gone_array[door_sun_seq.indexOf(s)], dataSetObj.display_floor_tin_gone_array[door_sun_seq.indexOf(s)]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[door_sun_seq.indexOf(s)]['primary'] : dataSetObj.display_floor_tin_gone_array[door_sun_seq.indexOf(s)]['primary'] + dataSetObj.display_floor_tin_gone_array[door_sun_seq.indexOf(s)]['second'])\r\n                let grave = find_grave(door_sun_seq[door_sun_seq.indexOf(s)], dataSetObj.display_tin_tin_gone_array[door_sun_seq.indexOf(s)], dataSetObj.display_floor_tin_gone_array[door_sun_seq.indexOf(s)]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[door_sun_seq.indexOf(s)]['primary'] : dataSetObj.display_floor_tin_gone_array[door_sun_seq.indexOf(s)]['primary'] + dataSetObj.display_floor_tin_gone_array[door_sun_seq.indexOf(s)]['second'], dataSetObj.display_sun_array[door_sun_seq.indexOf(s)], dataSetObj.display_floor_sun_array[door_sun_seq.indexOf(s)])\r\n                let bik = find_bik(door_sun_seq[door_sun_seq.indexOf(s)], dataSetObj.display_door_array[door_sun_seq.indexOf(s)])\r\n                let tin_tin_gone = dataSetObj.display_tin_tin_gone_array[door_sun_seq.indexOf(s)]\r\n                let floor_tin_gone = dataSetObj.display_floor_tin_gone_array[door_sun_seq.indexOf(s)]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[door_sun_seq.indexOf(s)]['primary'] : dataSetObj.display_floor_tin_gone_array[door_sun_seq.indexOf(s)]['primary'] + dataSetObj.display_floor_tin_gone_array[door_sun_seq.indexOf(s)]['second']\r\n\r\n                let harms = isHarmGone(empty, grave, harm, bik, tin_tin_gone, floor_tin_gone)\r\n                if (!harms)\r\n                    sang_gong.push(`${dataSetObj.display_sun_array[door_sun_seq.indexOf(s)]}${dataSetObj.display_star_array[door_sun_seq.indexOf(s)]}${dataSetObj.display_door_array[door_sun_seq.indexOf(s)]}(${dataSetObj.display_tin_tin_gone_array[door_sun_seq.indexOf(s)]}) (${dataSetObj.display_floor_tin_gone_array[door_sun_seq.indexOf(s)]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[door_sun_seq.indexOf(s)]['primary'] : dataSetObj.display_floor_tin_gone_array[door_sun_seq.indexOf(s)]['primary'] + dataSetObj.display_floor_tin_gone_array[door_sun_seq.indexOf(s)]['second']})`)\r\n            })\r\n\r\n\r\n            returnSet.push({\r\n                time: `${year}-${month}-${day}T${hour}:${min}`,\r\n                remarks: `${origin_gong}`,\r\n                sang_ohs: sang_gong,\r\n                cyear: char8.year,\r\n                cmonth: char8.month,\r\n                cday: char8.day,\r\n                ctime: char8.time\r\n            })\r\n        }\r\n    }\r\n\r\n    return returnSet\r\n}\r\n\r\nconst goodGokFiltering = (ggs, filterKeyWords) => {\r\n\r\n    if (filterKeyWords === \"\")\r\n        return ggs\r\n\r\n    filterKeyWords = filterKeyWords.replaceAll(\"(\", \".*\").replaceAll(\")\", \".*\").replaceAll(\" \", \".*\")\r\n    const re = new RegExp(filterKeyWords, \"g\");\r\n\r\n    let filtered = ggs.filter(g => {\r\n        if (\r\n            re.exec(g.remarks.replaceAll(\"(\", \"\").replaceAll(\")\", \"\").replaceAll(\" \", \"\"))?.length > 0 ||\r\n            g.sang_ohs.filter(s => { return re.exec(s.replaceAll(\"(\", \"\").replaceAll(\")\", \"\").replaceAll(\" \", \"\")) })?.length > 0 ||\r\n            re.exec(g.time)?.length > 0 ||\r\n            re.exec(g.cyear)?.length > 0 ||\r\n            re.exec(g.cmonth)?.length > 0 ||\r\n            re.exec(g.cday)?.length > 0 ||\r\n            re.exec(g.ctime)?.length > 0\r\n        )\r\n            // if (\r\n            //     g.remarks.replaceAll(\"(\", \"\").replaceAll(\")\", \"\").replaceAll(\" \", \"\").indexOf(filterKeyWords) > -1 ||\r\n            //     g.sang_ohs.filter(s => { return s.replaceAll(\"(\", \"\").replaceAll(\")\", \"\").replaceAll(\" \", \"\").indexOf(filterKeyWords) > -1 }).length > 0 ||\r\n            //     g.time.indexOf(filterKeyWords) > -1 ||\r\n            //     g.cyear.indexOf(filterKeyWords) > -1 ||\r\n            //     g.cmonth.indexOf(filterKeyWords) > -1 ||\r\n            //     g.cday.indexOf(filterKeyWords) > -1 ||\r\n            //     g.ctime.indexOf(filterKeyWords) > -1\r\n            // )\r\n            return g\r\n    })\r\n\r\n    return filtered\r\n}\r\n\r\nconst savedGokFiltering = (sgs, filterKeyWords, savedRemarks) => {\r\n    let filtered = new Array()\r\n    sgs.forEach((g, idx) => {\r\n        filtered.push({ time: g, remarks: savedRemarks[idx] })\r\n    })\r\n\r\n    if (filterKeyWords === \"\")\r\n        return filtered\r\n\r\n    filterKeyWords = filterKeyWords.replaceAll(\"(\", \".*\").replaceAll(\")\", \".*\").replaceAll(\" \", \".*\")\r\n    const re = new RegExp(filterKeyWords, \"g\");\r\n\r\n    filtered = filtered.filter((f) => {\r\n        let t_matches = re.exec(f.time)\r\n        let r_matches = re.exec(f.remarks.replaceAll(\"(\", \"\").replaceAll(\")\", \"\").replaceAll(\" \", \"\"))\r\n\r\n        if (\r\n            t_matches != null ||\r\n            r_matches != null\r\n        )\r\n            return f\r\n    })\r\n\r\n    return filtered\r\n}\r\n\r\nexport {\r\n    tin_gone_10_str, floor12_str,\r\n    tin_gone_seq, star_seq, door_seq, door_sun_seq, sun_seq, gong_seq,\r\n    find_gok, floor_tin_gone, find_empty_and_chun, find_door_and_star,\r\n    get_floor_tin_gone_display, get_star_display, get_tin_tin_gone_display, get_door_display, get_sun_display, get_floor_sun_display,\r\n    find_empty_gong, find_harm, find_grave, find_bik, find_horse, find_yan_gone, find_wong_gong,\r\n    getSolarTerm, spinL, spinR, removeItemOnce, isHarmGone, spinGone, nearestDates, findSameGone,\r\n    mainCalculation, find_good_gok, goodGokFiltering, savedGokFiltering\r\n}","import React from 'react'\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport { isHarmGone } from '../js/main.js'\r\n\r\nexport default function Grid(props) {\r\n    let harms = isHarmGone(props.empty, props.grave, props.harm, props.bik, props.tin_tin_gone, props.floor_tin_gone)\r\n    let goodBadGoneColor = props.goodBadGoneColor\r\n    let goneCSS = props.styleName\r\n\r\n    let remarks = \"\"\r\n\r\n    if (goodBadGoneColor)\r\n        if (harms)\r\n            goneCSS = 'bad_gone'\r\n        else\r\n            goneCSS = 'good_gone'\r\n    if (props.yearGone == props.gone) {\r\n        remarks = '年干'\r\n    }\r\n    else if (props.monthGone == props.gone) {\r\n        remarks = '月干'\r\n    }\r\n    else if (props.dayGone == props.gone) {\r\n        remarks = '日干'\r\n    }\r\n    else if (props.timeGone == props.gone) {\r\n        remarks = '時干'\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={`grid ${goneCSS} ${props.wong ? 'wong_gong' : ''}`} onClick={() => props.updateGakGok(props.gak_gok)}>\r\n            <span className='dis_prop'>{props.empty ? \"空\" : \"\"}</span>\r\n            <span className='dis_prop'>{props.horse ? \"馬\" : \"\"}</span>\r\n            <span></span>\r\n            <span className={`\r\n                water_mark \r\n                ${remarks === '年干' && props.sameGone.has('year') ? 'same_year' : ''}\r\n                ${remarks === '月干' && props.sameGone.has('month') ? 'same_month' : ''}\r\n                ${remarks === '日干' && props.sameGone.has('day') ? 'same_day' : ''}\r\n                ${remarks === '時干' && props.sameGone.has('time') ? 'same_time' : ''}\r\n            `}>{remarks === '' ? props.gone : remarks}</span>\r\n            {/* <span className='wide_grid'>\r\n                <input type='text' className='grid_remarks' onClick={(e)=>{e.preventDefault()}} />\r\n            </span> */}\r\n\r\n            <span className='intro_prop'>{props.yan_gone_pri}</span>\r\n            <span className={\r\n                //main gone\r\n                props.sun === '符' && (\r\n                    props.day_gone === '甲'\r\n                )\r\n                    ?\r\n                    (harms || props.fan_or_fok ? 'harm_main_gone' : 'main_gone') : ''\r\n                        //targets\r\n                        + props.targets.length > 0 && props.targets.indexOf(props.sun) > -1 ? ' targets' : ''\r\n            }\r\n            >{props.sun}</span>\r\n            <span></span>\r\n            <span>{props.floor_sun}</span>\r\n\r\n            <span className='intro_prop'>{props.yan_gone_sec}</span>\r\n            <span className={props.targets.length > 0 && props.targets.indexOf(props.display_star) > -1 ? 'targets' : ''}>{props.display_star}</span>\r\n            <span className='dis_prop'>{props.grave ? \"墓\" : \"\"}</span>\r\n            <span className={\r\n                //main gone\r\n                props.tin_tin_gone.indexOf(props.day_gone) >= 0\r\n                    ?\r\n                    (harms || props.fan_or_fok ? 'harm_main_gone' : 'main_gone') : ''\r\n                        //targets\r\n                        + props.targets.length > 0 && props.targets.indexOf(props.tin_tin_gone) > -1 ? ' targets' : ''\r\n                            + props.targets.length > 0 && props.tin_tin_gone.length === 2 && (props.targets.indexOf(props.tin_tin_gone[0]) > -1 || props.targets.indexOf(props.tin_tin_gone[1]) > -1) ? ' targets' : ''\r\n            }>{props.tin_tin_gone}</span>\r\n\r\n            <span className='dis_prop'>{props.bik ? \"迫\" : \"\"}</span>\r\n            <span className={props.targets.length > 0 && props.targets.indexOf(props.door) > -1 ? 'targets' : ''}>{props.door}</span>\r\n            <span className='dis_prop'>{props.harm ? \"刑\" : \"\"}</span>\r\n            <span>{props.floor_tin_gone}</span>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Grid(props) {\r\n  const chi_int_str = ['一','二','三','四','五','六','七','八','九']\r\n  const chi_int = [1,2,3,4,5,6,7,8,9]\r\n\r\n  return (\r\n    <div className='grid' >\r\n        <span></span>\r\n        <span>{props.yinyang == 0 ? \"阴\":\"阳\"}</span>\r\n        <span>{chi_int_str[chi_int.indexOf(props.gok)]}</span>\r\n        <span>局</span>\r\n\r\n        <span>甲</span>\r\n        <span>{props.chun_chi}</span>\r\n        <span>{props.chun_gone}</span>\r\n        <span>旬</span>\r\n\r\n        <span></span>\r\n        <span>{props.time_gone}</span>\r\n        <span>{props.time_chi}</span>\r\n        <span>時</span>\r\n\r\n        <span>{props.door}</span>\r\n        <span>{props.star}</span>\r\n        <span></span>\r\n        <span>{props.floor_tin_gone}</span>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Grid from './Grid'\r\nimport DetailGrid from './DetailGrid'\r\nimport {\r\n  tin_gone_seq, star_seq, find_gok, floor_tin_gone, find_empty_and_chun, find_door_and_star,\r\n  get_floor_tin_gone_display, get_star_display, get_tin_tin_gone_display, get_door_display, get_sun_display, get_floor_sun_display,\r\n  find_empty_gong, find_harm, find_grave, find_bik, find_horse, find_yan_gone, find_wong_gong, door_seq,\r\n  spinL, spinR, door_sun_seq,spinGone,\r\n  mainCalculation\r\n} from \"../js/main.js\"\r\n\r\nimport {\r\n  is_door_fok, is_gone_fok, is_door_fan, is_gone_fan, find_gak_gok\r\n} from '../js/notes.js'\r\n\r\n\r\nexport default function GridBoard(props) {\r\n  let time_gone = props.time_gone\r\n  let time_chi = props.time_chi\r\n  let time_gone_chi = time_gone + time_chi\r\n\r\n  // let empty_and_chun = find_empty_and_chun(time_gone_chi);\r\n  // let gok = find_gok(props.year_chi, props.month_chi, props.day, props.time_chi)\r\n  let yinyang = props.yinyang\r\n\r\n\r\n\r\n  // let chun_gone = empty_and_chun['chun_gone']\r\n  // let chun_chi = empty_and_chun['chun_chi']\r\n\r\n  // let empty_gong1 = find_empty_gong(empty_and_chun['empty1'])\r\n  // let empty_gong2 = find_empty_gong(empty_and_chun['empty2'])\r\n\r\n  // let door_and_star = find_door_and_star(floor_tin_gone(gok, yinyang), chun_gone)\r\n\r\n  // let floor_tin_gone_seq = floor_tin_gone(gok, yinyang)\r\n  // let display_floor_tin_gone_array = get_floor_tin_gone_display(floor_tin_gone_seq)\r\n\r\n  // // \r\n\r\n  // let display_star_array = get_star_display(display_floor_tin_gone_array, time_gone, time_chi, door_and_star['star'])\r\n  // let display_tin_tin_gone_array = get_tin_tin_gone_display(display_star_array, display_floor_tin_gone_array)\r\n\r\n  // let display_door_array = get_door_display(display_floor_tin_gone_array, chun_gone, chun_chi, time_chi, yinyang, door_and_star['door'])\r\n\r\n  // let display_sun_array = get_sun_display(display_tin_tin_gone_array, chun_gone, yinyang)\r\n  // let display_floor_sun_array = get_floor_sun_display(display_floor_tin_gone_array, chun_gone, yinyang)\r\n\r\n  // let horse = find_horse(time_chi)\r\n\r\n  // let door_gong_idx = 0\r\n\r\n  // display_door_array.forEach((d, idx) => {\r\n  //   if (d == door_and_star['door'])\r\n  //     door_gong_idx = idx\r\n  // })\r\n\r\n\r\n\r\n  // let yan_gone_array = find_yan_gone(display_tin_tin_gone_array, time_gone, time_chi, dataSetObj.display_tin_tin_gone_array[door_gong_idx], chun_gone, yinyang, door_gong_idx)\r\n\r\n  // let wong_gong = find_wong_gong(props.month_chi)\r\n\r\n  // let door_fok = is_door_fok(dataSetObj.display_door_array[0], door_seq[0]) ? \"八門伏吟\" : \"\"\r\n  // let gone_fok = is_gone_fok(dataSetObj.display_floor_tin_gone_array[0]['primary'], dataSetObj.display_tin_tin_gone_array[0]) ? \"天干伏吟\" : \"\"\r\n  // let door_fan = is_door_fan(dataSetObj.display_door_array[0], door_seq[4]) ? \"八門反吟\" : \"\"\r\n  // let gone_fan = is_gone_fan(dataSetObj.display_floor_tin_gone_array[0]['primary'], dataSetObj.display_tin_tin_gone_array[4]) ? \" 天干反吟\" : \"\"\r\n\r\n  // let fanFok = door_fok || gone_fok || door_fan || gone_fan\r\n\r\n  // let dataSetObj = {\r\n  //   display_floor_tin_gone_array: display_floor_tin_gone_array,\r\n  //   display_tin_tin_gone_array: display_tin_tin_gone_array,\r\n  //   display_sun_array: display_sun_array,\r\n  //   display_floor_sun_array: display_floor_sun_array,\r\n  //   display_star_array: display_star_array,\r\n  //   display_door_array: display_door_array,\r\n  //   yan_gone_array: yan_gone_array\r\n  // }\r\n\r\n  let dataSetObj = mainCalculation(time_gone,time_chi,time_gone_chi,props.year_chi, props.month_chi, props.day,props.yinyang)\r\n\r\n  const updateDataSet = (obj) => {\r\n    dataSetObj.display_floor_tin_gone_array = obj.display_floor_tin_gone_array\r\n    dataSetObj.display_tin_tin_gone_array = obj.display_tin_tin_gone_array\r\n    dataSetObj.display_sun_array = obj.display_sun_array\r\n    dataSetObj.display_floor_sun_array = obj.display_floor_sun_array\r\n    dataSetObj.display_star_array = obj.display_star_array\r\n    dataSetObj.display_door_array = obj.display_door_array\r\n    dataSetObj.yan_gone_array = obj.yan_gone_array\r\n  }\r\n\r\n  if (!props.spin) {\r\n    props.initOriginalGridDataSet(dataSetObj)\r\n    updateDataSet(dataSetObj)\r\n\r\n  }\r\n  else {\r\n    if (props.spinLeftValue > 0 || props.spinRightValue > 0) {\r\n      if (props.spinLeftValue > 0) {\r\n        let dataSet = spinL(dataSetObj, props.spinLeftValue)\r\n        updateDataSet(dataSet)\r\n      }\r\n      else if (props.spinRightValue > 0) {\r\n        let dataSet = spinR(dataSetObj, props.spinRightValue)\r\n        updateDataSet(dataSet)\r\n      }\r\n    }\r\n    else {\r\n\r\n      updateDataSet(dataSetObj)\r\n    }\r\n  }\r\n\r\n  const gak_gok = find_gak_gok(dataSetObj.display_floor_tin_gone_array, dataSetObj.display_tin_tin_gone_array, door_sun_seq)\r\n\r\n  const gone_seq = spinGone(props.spinLeftValue,props.spinRightValue)\r\n\r\n  return (\r\n    <div className='grid_board'>\r\n      <Grid styleName='blue_grid' floor_tin_gone={dataSetObj.display_floor_tin_gone_array[3]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[3]['primary'] : dataSetObj.display_floor_tin_gone_array[3]['primary'] + dataSetObj.display_floor_tin_gone_array[3]['second']}\r\n        tin_tin_gone={dataSetObj.display_tin_tin_gone_array[3]}\r\n        sun={dataSetObj.display_sun_array[3]}\r\n        floor_sun={dataSetObj.display_floor_sun_array[3]}\r\n        display_star={dataSetObj.display_star_array[3]}\r\n        door={dataSetObj.display_door_array[3]}\r\n        empty={dataSetObj.empty_gong1 == 4 || dataSetObj.empty_gong2 == 4}\r\n        harm={find_harm(4, dataSetObj.display_tin_tin_gone_array[3], dataSetObj.display_floor_tin_gone_array[3]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[3]['primary'] : dataSetObj.display_floor_tin_gone_array[3]['primary'] + dataSetObj.display_floor_tin_gone_array[3]['second'])}\r\n        grave={find_grave(4, dataSetObj.display_tin_tin_gone_array[3], dataSetObj.display_floor_tin_gone_array[3]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[3]['primary'] : dataSetObj.display_floor_tin_gone_array[3]['primary'] + dataSetObj.display_floor_tin_gone_array[3]['second'], dataSetObj.display_sun_array[3], dataSetObj.display_floor_sun_array[3])}\r\n        bik={find_bik(4, dataSetObj.display_door_array[3])}\r\n        horse={dataSetObj.horse == 4}\r\n        yan_gone_pri={dataSetObj.yan_gone_array[3]['primary']}\r\n        yan_gone_sec={dataSetObj.yan_gone_array[3]['second']}\r\n        wong={dataSetObj.wong_gong.indexOf(4) > -1}\r\n        year_gone={props.year_gone}\r\n        month_gone={props.month_gone}\r\n        day_gone={props.day_gone}\r\n        time_gone={props.time_gone}\r\n        fan_or_fok={dataSetObj.fanFok}\r\n        targets={props.targets}\r\n        goodBadGoneColor={props.goodBadGoneColor}\r\n        gak_gok={gak_gok[3]}\r\n        updateGakGok={props.updateGakGok}\r\n        yearGone={props.yearGone}\r\n        monthGone={props.monthGone}\r\n        dayGone={props.dayGone}\r\n        timeGone={props.timeGone}\r\n        sameGone={props.sameGone}\r\n        gone={gone_seq[3]}\r\n      />\r\n      <Grid styleName='yellow_grid' floor_tin_gone={dataSetObj.display_floor_tin_gone_array[4]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[4]['primary'] : dataSetObj.display_floor_tin_gone_array[4]['primary'] + dataSetObj.display_floor_tin_gone_array[4]['second']}\r\n        tin_tin_gone={dataSetObj.display_tin_tin_gone_array[4]}\r\n        sun={dataSetObj.display_sun_array[4]}\r\n        floor_sun={dataSetObj.display_floor_sun_array[4]}\r\n        display_star={dataSetObj.display_star_array[4]}\r\n        door={dataSetObj.display_door_array[4]}\r\n        empty={dataSetObj.empty_gong1 == 9 || dataSetObj.empty_gong2 == 9}\r\n        harm={find_harm(9, dataSetObj.display_tin_tin_gone_array[4], dataSetObj.display_floor_tin_gone_array[4]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[4]['primary'] : dataSetObj.display_floor_tin_gone_array[4]['primary'] + dataSetObj.display_floor_tin_gone_array[4]['second'])}\r\n        grave={find_grave(9, dataSetObj.display_tin_tin_gone_array[4], dataSetObj.display_floor_tin_gone_array[4]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[4]['primary'] : dataSetObj.display_floor_tin_gone_array[4]['primary'] + dataSetObj.display_floor_tin_gone_array[4]['second'], dataSetObj.display_sun_array[4], dataSetObj.display_floor_sun_array[4])}\r\n        bik={find_bik(9, dataSetObj.display_door_array[4])}\r\n        horse={dataSetObj.horse == 9}\r\n        yan_gone_pri={dataSetObj.yan_gone_array[4]['primary']}\r\n        yan_gone_sec={dataSetObj.yan_gone_array[4]['second']}\r\n        wong={dataSetObj.wong_gong.indexOf(9) > -1}\r\n        year_gone={props.year_gone}\r\n        month_gone={props.month_gone}\r\n        day_gone={props.day_gone}\r\n        time_gone={props.time_gone}\r\n        fan_or_fok={dataSetObj.fanFok}\r\n        targets={props.targets}\r\n        goodBadGoneColor={props.goodBadGoneColor}\r\n        gak_gok={gak_gok[4]}\r\n        updateGakGok={props.updateGakGok}\r\n        yearGone={props.yearGone}\r\n        monthGone={props.monthGone}\r\n        dayGone={props.dayGone}\r\n        timeGone={props.timeGone}\r\n        sameGone={props.sameGone}\r\n        gone={gone_seq[4]}\r\n      />\r\n      <Grid styleName='blue_grid' floor_tin_gone={dataSetObj.display_floor_tin_gone_array[5]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[5]['primary'] : dataSetObj.display_floor_tin_gone_array[5]['primary'] + dataSetObj.display_floor_tin_gone_array[5]['second']}\r\n        tin_tin_gone={dataSetObj.display_tin_tin_gone_array[5]}\r\n        sun={dataSetObj.display_sun_array[5]}\r\n        floor_sun={dataSetObj.display_floor_sun_array[5]}\r\n        display_star={dataSetObj.display_star_array[5]}\r\n        door={dataSetObj.display_door_array[5]}\r\n        empty={dataSetObj.empty_gong1 == 2 || dataSetObj.empty_gong2 == 2}\r\n        harm={find_harm(2, dataSetObj.display_tin_tin_gone_array[5], dataSetObj.display_floor_tin_gone_array[5]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[5]['primary'] : dataSetObj.display_floor_tin_gone_array[5]['primary'] + dataSetObj.display_floor_tin_gone_array[5]['second'])}\r\n        grave={find_grave(2, dataSetObj.display_tin_tin_gone_array[5], dataSetObj.display_floor_tin_gone_array[5]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[5]['primary'] : dataSetObj.display_floor_tin_gone_array[5]['primary'] + dataSetObj.display_floor_tin_gone_array[5]['second'], dataSetObj.display_sun_array[5], dataSetObj.display_floor_sun_array[5])}\r\n        bik={find_bik(2, dataSetObj.display_door_array[5])}\r\n        horse={dataSetObj.horse == 2}\r\n        yan_gone_pri={dataSetObj.yan_gone_array[5]['primary']}\r\n        yan_gone_sec={dataSetObj.yan_gone_array[5]['second']}\r\n        wong={dataSetObj.wong_gong.indexOf(2) > -1}\r\n        year_gone={props.year_gone}\r\n        month_gone={props.month_gone}\r\n        day_gone={props.day_gone}\r\n        time_gone={props.time_gone}\r\n        fan_or_fok={dataSetObj.fanFok}\r\n        targets={props.targets}\r\n        goodBadGoneColor={props.goodBadGoneColor}\r\n        gak_gok={gak_gok[5]}\r\n        updateGakGok={props.updateGakGok}\r\n        yearGone={props.yearGone}\r\n        monthGone={props.monthGone}\r\n        dayGone={props.dayGone}\r\n        timeGone={props.timeGone}\r\n        sameGone={props.sameGone}\r\n        gone={gone_seq[5]}\r\n      />\r\n      <Grid styleName='yellow_grid' floor_tin_gone={dataSetObj.display_floor_tin_gone_array[2]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[2]['primary'] : dataSetObj.display_floor_tin_gone_array[2]['primary'] + dataSetObj.display_floor_tin_gone_array[2]['second']}\r\n        tin_tin_gone={dataSetObj.display_tin_tin_gone_array[2]}\r\n        sun={dataSetObj.display_sun_array[2]}\r\n        floor_sun={dataSetObj.display_floor_sun_array[2]}\r\n        display_star={dataSetObj.display_star_array[2]}\r\n        door={dataSetObj.display_door_array[2]}\r\n        empty={dataSetObj.empty_gong1 == 3 || dataSetObj.empty_gong2 == 3}\r\n        harm={find_harm(3, dataSetObj.display_tin_tin_gone_array[2], dataSetObj.display_floor_tin_gone_array[2]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[2]['primary'] : dataSetObj.display_floor_tin_gone_array[2]['primary'] + dataSetObj.display_floor_tin_gone_array[2]['second'])}\r\n        grave={find_grave(3, dataSetObj.display_tin_tin_gone_array[2], dataSetObj.display_floor_tin_gone_array[2]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[2]['primary'] : dataSetObj.display_floor_tin_gone_array[2]['primary'] + dataSetObj.display_floor_tin_gone_array[2]['second'], dataSetObj.display_sun_array[2], dataSetObj.display_floor_sun_array[2])}\r\n        bik={find_bik(3, dataSetObj.display_door_array[2])}\r\n        horse={dataSetObj.horse == 3}\r\n        yan_gone_pri={dataSetObj.yan_gone_array[2]['primary']}\r\n        yan_gone_sec={dataSetObj.yan_gone_array[2]['second']}\r\n        wong={dataSetObj.wong_gong.indexOf(3) > -1}\r\n        year_gone={props.year_gone}\r\n        month_gone={props.month_gone}\r\n        day_gone={props.day_gone}\r\n        time_gone={props.time_gone}\r\n        fan_or_fok={dataSetObj.fanFok}\r\n        targets={props.targets}\r\n        goodBadGoneColor={props.goodBadGoneColor}\r\n        gak_gok={gak_gok[2]}\r\n        updateGakGok={props.updateGakGok}\r\n        yearGone={props.yearGone}\r\n        monthGone={props.monthGone}\r\n        dayGone={props.dayGone}\r\n        timeGone={props.timeGone}\r\n        sameGone={props.sameGone}\r\n        gone={gone_seq[2]}\r\n      />\r\n      <DetailGrid\r\n        floor_tin_gone={dataSetObj.display_floor_tin_gone_array[8]['primary']}\r\n        door={dataSetObj.door_and_star['door']}\r\n        star={dataSetObj.door_and_star['star']}\r\n        yinyang={yinyang}\r\n        gok={dataSetObj.gok}\r\n        chun_chi={dataSetObj.chun_chi}\r\n        chun_gone={dataSetObj.chun_gone}\r\n        time_gone={time_gone}\r\n        time_chi={time_chi}\r\n      />\r\n      <Grid styleName='yellow_grid' floor_tin_gone={dataSetObj.display_floor_tin_gone_array[6]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[6]['primary'] : dataSetObj.display_floor_tin_gone_array[6]['primary'] + dataSetObj.display_floor_tin_gone_array[6]['second']}\r\n        tin_tin_gone={dataSetObj.display_tin_tin_gone_array[6]}\r\n        sun={dataSetObj.display_sun_array[6]}\r\n        floor_sun={dataSetObj.display_floor_sun_array[6]}\r\n        display_star={dataSetObj.display_star_array[6]}\r\n        door={dataSetObj.display_door_array[6]}\r\n        empty={dataSetObj.empty_gong1 == 7 || dataSetObj.empty_gong2 == 7}\r\n        harm={find_harm(7, dataSetObj.display_tin_tin_gone_array[6], dataSetObj.display_floor_tin_gone_array[6]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[6]['primary'] : dataSetObj.display_floor_tin_gone_array[6]['primary'] + dataSetObj.display_floor_tin_gone_array[6]['second'])}\r\n        grave={find_grave(7, dataSetObj.display_tin_tin_gone_array[6], dataSetObj.display_floor_tin_gone_array[6]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[6]['primary'] : dataSetObj.display_floor_tin_gone_array[6]['primary'] + dataSetObj.display_floor_tin_gone_array[6]['second'], dataSetObj.display_sun_array[6], dataSetObj.display_floor_sun_array[6])}\r\n        bik={find_bik(7, dataSetObj.display_door_array[6])}\r\n        horse={dataSetObj.horse == 7}\r\n        yan_gone_pri={dataSetObj.yan_gone_array[6]['primary']}\r\n        yan_gone_sec={dataSetObj.yan_gone_array[6]['second']}\r\n        wong={dataSetObj.wong_gong.indexOf(7) > -1}\r\n        year_gone={props.year_gone}\r\n        month_gone={props.month_gone}\r\n        day_gone={props.day_gone}\r\n        time_gone={props.time_gone}\r\n        fan_or_fok={dataSetObj.fanFok}\r\n        targets={props.targets}\r\n        goodBadGoneColor={props.goodBadGoneColor}\r\n        gak_gok={gak_gok[6]}\r\n        updateGakGok={props.updateGakGok}\r\n        yearGone={props.yearGone}\r\n        monthGone={props.monthGone}\r\n        dayGone={props.dayGone}\r\n        timeGone={props.timeGone}\r\n        sameGone={props.sameGone}\r\n        gone={gone_seq[6]}\r\n      />\r\n      <Grid styleName='blue_grid' floor_tin_gone={dataSetObj.display_floor_tin_gone_array[1]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[1]['primary'] : dataSetObj.display_floor_tin_gone_array[1]['primary'] + dataSetObj.display_floor_tin_gone_array[1]['second']}\r\n        tin_tin_gone={dataSetObj.display_tin_tin_gone_array[1]}\r\n        sun={dataSetObj.display_sun_array[1]}\r\n        floor_sun={dataSetObj.display_floor_sun_array[1]}\r\n        display_star={dataSetObj.display_star_array[1]}\r\n        door={dataSetObj.display_door_array[1]}\r\n        empty={dataSetObj.empty_gong1 == 8 || dataSetObj.empty_gong2 == 8}\r\n        harm={find_harm(8, dataSetObj.display_tin_tin_gone_array[1], dataSetObj.display_floor_tin_gone_array[1]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[1]['primary'] : dataSetObj.display_floor_tin_gone_array[1]['primary'] + dataSetObj.display_floor_tin_gone_array[1]['second'])}\r\n        grave={find_grave(8, dataSetObj.display_tin_tin_gone_array[1], dataSetObj.display_floor_tin_gone_array[1]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[1]['primary'] : dataSetObj.display_floor_tin_gone_array[1]['primary'] + dataSetObj.display_floor_tin_gone_array[1]['second'], dataSetObj.display_sun_array[1], dataSetObj.display_floor_sun_array[1])}\r\n        bik={find_bik(8, dataSetObj.display_door_array[1])}\r\n        horse={dataSetObj.horse == 8}\r\n        yan_gone_pri={dataSetObj.yan_gone_array[1]['primary']}\r\n        yan_gone_sec={dataSetObj.yan_gone_array[1]['second']}\r\n        wong={dataSetObj.wong_gong.indexOf(8) > -1}\r\n        year_gone={props.year_gone}\r\n        month_gone={props.month_gone}\r\n        day_gone={props.day_gone}\r\n        time_gone={props.time_gone}\r\n        fan_or_fok={dataSetObj.fanFok}\r\n        targets={props.targets}\r\n        goodBadGoneColor={props.goodBadGoneColor}\r\n        gak_gok={gak_gok[1]}\r\n        updateGakGok={props.updateGakGok}\r\n        yearGone={props.yearGone}\r\n        monthGone={props.monthGone}\r\n        dayGone={props.dayGone}\r\n        timeGone={props.timeGone}\r\n        sameGone={props.sameGone}\r\n        gone={gone_seq[1]}\r\n      />\r\n      <Grid styleName='yellow_grid' floor_tin_gone={dataSetObj.display_floor_tin_gone_array[0]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[0]['primary'] : dataSetObj.display_floor_tin_gone_array[0]['primary'] + dataSetObj.display_floor_tin_gone_array[0]['second']}\r\n        tin_tin_gone={dataSetObj.display_tin_tin_gone_array[0]}\r\n        sun={dataSetObj.display_sun_array[0]}\r\n        floor_sun={dataSetObj.display_floor_sun_array[0]}\r\n        display_star={dataSetObj.display_star_array[0]}\r\n        door={dataSetObj.display_door_array[0]}\r\n        empty={dataSetObj.empty_gong1 == 1 || dataSetObj.empty_gong2 == 1}\r\n        harm={find_harm(1, dataSetObj.display_tin_tin_gone_array[0], dataSetObj.display_floor_tin_gone_array[0]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[0]['primary'] : dataSetObj.display_floor_tin_gone_array[0]['primary'] + dataSetObj.display_floor_tin_gone_array[0]['second'])}\r\n        grave={find_grave(1, dataSetObj.display_tin_tin_gone_array[0], dataSetObj.display_floor_tin_gone_array[0]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[0]['primary'] : dataSetObj.display_floor_tin_gone_array[0]['primary'] + dataSetObj.display_floor_tin_gone_array[0]['second'], dataSetObj.display_sun_array[0], dataSetObj.display_floor_sun_array[0])}\r\n        bik={find_bik(1, dataSetObj.display_door_array[0])}\r\n        horse={dataSetObj.horse == 1}\r\n        yan_gone_pri={dataSetObj.yan_gone_array[0]['primary']}\r\n        yan_gone_sec={dataSetObj.yan_gone_array[0]['second']}\r\n        wong={dataSetObj.wong_gong.indexOf(1) > -1}\r\n        year_gone={props.year_gone}\r\n        month_gone={props.month_gone}\r\n        day_gone={props.day_gone}\r\n        time_gone={props.time_gone}\r\n        fan_or_fok={dataSetObj.fanFok}\r\n        targets={props.targets}\r\n        goodBadGoneColor={props.goodBadGoneColor}\r\n        gak_gok={gak_gok[0]}\r\n        updateGakGok={props.updateGakGok}\r\n        yearGone={props.yearGone}\r\n        monthGone={props.monthGone}\r\n        dayGone={props.dayGone}\r\n        timeGone={props.timeGone}\r\n        sameGone={props.sameGone}\r\n        gone={gone_seq[0]}\r\n      />\r\n      <Grid styleName='blue_grid' floor_tin_gone={dataSetObj.display_floor_tin_gone_array[7]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[7]['primary'] : dataSetObj.display_floor_tin_gone_array[7]['primary'] + dataSetObj.display_floor_tin_gone_array[7]['second']}\r\n        tin_tin_gone={dataSetObj.display_tin_tin_gone_array[7]}\r\n        sun={dataSetObj.display_sun_array[7]}\r\n        floor_sun={dataSetObj.display_floor_sun_array[7]}\r\n        display_star={dataSetObj.display_star_array[7]}\r\n        door={dataSetObj.display_door_array[7]}\r\n        empty={dataSetObj.empty_gong1 == 6 || dataSetObj.empty_gong2 == 6}\r\n        harm={find_harm(6, dataSetObj.display_tin_tin_gone_array[7], dataSetObj.display_floor_tin_gone_array[7]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[7]['primary'] : dataSetObj.display_floor_tin_gone_array[7]['primary'] + dataSetObj.display_floor_tin_gone_array[7]['second'])}\r\n        grave={find_grave(6, dataSetObj.display_tin_tin_gone_array[7], dataSetObj.display_floor_tin_gone_array[7]['second'] == undefined ? dataSetObj.display_floor_tin_gone_array[7]['primary'] : dataSetObj.display_floor_tin_gone_array[7]['primary'] + dataSetObj.display_floor_tin_gone_array[7]['second'], dataSetObj.display_sun_array[7], dataSetObj.display_floor_sun_array[7])}\r\n        bik={find_bik(6, dataSetObj.display_door_array[7])}\r\n        horse={dataSetObj.horse == 6}\r\n        yan_gone_pri={dataSetObj.yan_gone_array[7]['primary']}\r\n        yan_gone_sec={dataSetObj.yan_gone_array[7]['second']}\r\n        wong={dataSetObj.wong_gong.indexOf(6) > -1}\r\n        year_gone={props.year_gone}\r\n        month_gone={props.month_gone}\r\n        day_gone={props.day_gone}\r\n        time_gone={props.time_gone}\r\n        fan_or_fok={dataSetObj.fanFok}\r\n        targets={props.targets}\r\n        goodBadGoneColor={props.goodBadGoneColor}\r\n        gak_gok={gak_gok[7]}\r\n        updateGakGok={props.updateGakGok}\r\n        yearGone={props.yearGone}\r\n        monthGone={props.monthGone}\r\n        dayGone={props.dayGone}\r\n        timeGone={props.timeGone}\r\n        sameGone={props.sameGone}\r\n        gone={gone_seq[7]}\r\n      />\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {\r\n  tin_gone_seq, star_seq, door_seq, door_sun_seq,\r\n  find_gok, floor_tin_gone, find_empty_and_chun, find_door_and_star,\r\n  get_floor_tin_gone_display, get_star_display, get_tin_tin_gone_display, get_door_display, get_sun_display, get_floor_sun_display,\r\n  find_empty_gong, find_harm, find_grave, find_bik, find_horse, find_yan_gone,\r\n  spinL,spinR\r\n} from \"../js/main.js\"\r\n\r\nimport {\r\n  is_door_fok, is_gone_fok, is_door_fan, is_gone_fan, is_tin_gone_conflicts, is_tin_gone_merges,\r\n  is_theif_gok,is_change_gok,is_leave_gok,find_gak_gok\r\n} from '../js/notes.js'\r\n\r\nexport default function Notes(props) {\r\n  let time_gone = props.time_gone\r\n  let time_chi = props.time_chi\r\n  let time_gone_chi = time_gone + time_chi\r\n\r\n  let empty_and_chun = find_empty_and_chun(time_gone_chi);\r\n  let gok = find_gok(props.year_chi, props.month_chi, props.day, props.time_chi)\r\n  let yinyang = props.yinyang\r\n\r\n\r\n\r\n  let chun_gone = empty_and_chun['chun_gone']\r\n  let chun_chi = empty_and_chun['chun_chi']\r\n\r\n  let empty_gong1 = find_empty_gong(empty_and_chun['empty1'])\r\n  let empty_gong2 = find_empty_gong(empty_and_chun['empty2'])\r\n\r\n  let door_and_star = find_door_and_star(floor_tin_gone(gok, yinyang), chun_gone)\r\n\r\n  let floor_tin_gone_seq = floor_tin_gone(gok, yinyang)\r\n  let display_floor_tin_gone_array = get_floor_tin_gone_display(floor_tin_gone_seq)\r\n\r\n  // \r\n\r\n  let display_star_array = get_star_display(display_floor_tin_gone_array, time_gone, time_chi, door_and_star['star'])\r\n  let display_tin_tin_gone_array = get_tin_tin_gone_display(display_star_array, display_floor_tin_gone_array)\r\n\r\n  let display_door_array = get_door_display(display_floor_tin_gone_array, chun_gone, chun_chi, time_chi, yinyang, door_and_star['door'])\r\n\r\n  let display_sun_array = get_sun_display(display_tin_tin_gone_array, chun_gone, yinyang)\r\n  let display_floor_sun_array = get_floor_sun_display(display_floor_tin_gone_array, chun_gone, yinyang)\r\n\r\n  let horse = find_horse(time_chi)\r\n\r\n  let door_gong_idx = 0\r\n\r\n  display_door_array.forEach((d, idx) => {\r\n    if (d == door_and_star['door'])\r\n      door_gong_idx = idx\r\n  })\r\n\r\n\r\n\r\n  let yan_gone_array = find_yan_gone(display_tin_tin_gone_array, time_gone, time_chi, display_tin_tin_gone_array[door_gong_idx], chun_gone, yinyang, door_gong_idx)\r\n\r\n  //for remarks\r\n  let dataSetObj = {\r\n    display_floor_tin_gone_array:display_floor_tin_gone_array,\r\n    display_tin_tin_gone_array:display_tin_tin_gone_array,\r\n    display_sun_array:display_sun_array,\r\n    display_floor_sun_array:display_floor_sun_array,\r\n    display_star_array:display_star_array,\r\n    display_door_array:display_door_array,\r\n    yan_gone_array:yan_gone_array\r\n  }\r\n\r\n  const updateDataSet = (obj) =>{\r\n    display_floor_tin_gone_array=obj.display_floor_tin_gone_array\r\n    display_tin_tin_gone_array=obj.display_tin_tin_gone_array\r\n    display_sun_array=obj.display_sun_array\r\n    display_floor_sun_array=obj.display_floor_sun_array\r\n    display_star_array=obj.display_star_array\r\n    display_door_array=obj.display_door_array\r\n    yan_gone_array=obj.yan_gone_array\r\n  }\r\n\r\n  if(!props.spin){\r\n    props.initOriginalGridDataSet(dataSetObj)\r\n    updateDataSet(dataSetObj)\r\n  }\r\n  else{\r\n    if(props.spinLeftValue > 0 || props.spinRightValue > 0){\r\n      if(props.spinLeftValue > 0){\r\n        updateDataSet(spinL(dataSetObj,props.spinLeftValue))\r\n      }\r\n      else if(props.spinRightValue > 0){\r\n        \r\n        updateDataSet(spinR(dataSetObj,props.spinRightValue))\r\n      }\r\n    }\r\n    else{\r\n      \r\n      updateDataSet(dataSetObj)\r\n    }\r\n  }\r\n  let door_fok = is_door_fok(display_door_array[0], door_seq[0]) ? \"八門伏吟\" : \"\"\r\n\r\n  let gone_fok = is_gone_fok(display_floor_tin_gone_array[0]['primary'], display_tin_tin_gone_array[0]) ? \"天干伏吟\" : \"\"\r\n\r\n  let door_fan = is_door_fan(display_door_array[0], door_seq[4]) ? \"八門反吟\" : \"\"\r\n  let gone_fan = is_gone_fan(display_floor_tin_gone_array[0]['primary'], display_tin_tin_gone_array[4]) ? \" 天干反吟\" : \"\"\r\n\r\n  const notes = [door_fok, gone_fok, door_fan, gone_fan]\r\n  const conflicts = is_tin_gone_conflicts(display_floor_tin_gone_array, display_tin_tin_gone_array, door_sun_seq)\r\n  const merges = is_tin_gone_merges(display_floor_tin_gone_array, display_tin_tin_gone_array, display_sun_array, display_floor_sun_array, door_sun_seq)\r\n  const theifs = is_theif_gok(display_floor_tin_gone_array,display_tin_tin_gone_array,door_sun_seq)\r\n  const changes = is_change_gok(display_floor_tin_gone_array,display_tin_tin_gone_array,door_sun_seq)\r\n  const leaves = is_leave_gok(display_floor_tin_gone_array,display_tin_tin_gone_array,door_sun_seq)\r\n\r\n  return (\r\n    <div className='alert alert-warning'>\r\n      <div className='message'>\r\n        {\r\n          notes.map((n) => {\r\n            if (n != \"\")\r\n              return (\r\n                <span className='harm_notes' key={`notes_${n}`}>{n}</span>\r\n              )\r\n          })\r\n        }\r\n      </div>\r\n      <div className='message'>\r\n        {\r\n          conflicts.map((n) => {\r\n            if (n != \"\")\r\n              return (\r\n                <span key={`conflicts_${n}`}>[{n}] 天干相沖</span>\r\n              )\r\n          })\r\n        }\r\n      </div>\r\n      <div className='message'>\r\n        {\r\n          merges.map((n) => {\r\n            if (n != \"\")\r\n              return (\r\n                <span key={`merges_${n}`}>[{n}] 天干相合</span>\r\n              )\r\n          })\r\n        }\r\n      </div>\r\n      <div className='message'>\r\n        {\r\n          theifs.map((n) => {\r\n            if (n != \"\")\r\n              return (\r\n                <span className='harm_notes' key={`theifs_${n}`}>[{n}] 賊局</span>\r\n              )\r\n          })\r\n        }\r\n      </div>\r\n      <div className='message'>\r\n        {\r\n          changes.map((n) => {\r\n            if (n != \"\")\r\n              return (\r\n                  <span key={`changes_${n}`}>[{n}] 換</span>\r\n              )\r\n          })\r\n        }\r\n      </div>\r\n      <div className='message'>\r\n        {\r\n          leaves.map((n) => {\r\n            if (n != \"\")\r\n              return (\r\n                <span className='harm_notes' key={`leaves_${n}`}>[{n}] 離散</span>\r\n              )\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import logo from './logo.svg';\r\nimport packageJson from '../package.json';\r\nimport './App.css';\r\nimport './css/main.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.js';\r\nimport { version_info } from './js/version_info.js'\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport GridBoard from './Component/GridBoard';\r\nimport Notes from './Component/Notes'\r\nimport lunisolar from 'lunisolar'\r\nimport React, { useState, useEffect, useRef } from 'react'\r\nimport ReactLoading from 'react-loading';\r\nimport { tin_gone_10_str, floor12_str, getSolarTerm, door_seq, star_seq, sun_seq, tin_gone_seq, removeItemOnce, gong_seq, nearestDates, findSameGone, find_good_gok, goodGokFiltering,savedGokFiltering } from './js/main.js'\r\nimport { find_solar_terms, find_current_solar_terms, find_solar_terms_offline, find_current_solar_terms_offline, roundToNearestMinute } from './js/solarTerms.js'\r\n\r\nfunction App() {\r\n  const yearMin = 1900\r\n  const yearMax = 2099\r\n  // const [dateInput, setDateInput] = useState(new Date())\r\n  const [d, setD] = useState(lunisolar(new Date()))\r\n  const [yinyang, setYinyang] = useState(1)\r\n  const [char8, setChar8] = useState(\r\n    d.toDate().getFullYear() < yearMin || d.toDate().getFullYear() > yearMax ?\r\n      {\r\n        year: \"\",\r\n        month: \"\",\r\n        day: \"\",\r\n        time: \"\"\r\n      }\r\n      :\r\n      {\r\n        year: d.format('cY cM cD cH').split(\" \")[0],\r\n        month: d.format('cY cM cD cH').split(\" \")[1],\r\n        day: d.format('cY cM cD cH').split(\" \")[2],\r\n        time: d.format('cY cM cD cH').split(\" \")[3]\r\n      })\r\n\r\n  let originalDataSetObj = {\r\n    display_floor_tin_gone_array: [],\r\n    display_tin_tin_gone_array: [],\r\n    display_sun_array: [],\r\n    display_floor_sun_array: [],\r\n    display_star_array: [],\r\n    display_door_array: [],\r\n    yan_gone_array: []\r\n  }\r\n\r\n  const [haziDate, setHaziDate] = useState(new Date())\r\n  const [dongziDate, setDongziDate] = useState(new Date())\r\n  const [previousZit, setPreviousZit] = useState(new Date().getTime())\r\n  const [currentZit, setCurrentZit] = useState(new Date().getTime())\r\n  const [dateUpdated, setDateUpdated] = useState(false)\r\n  const [yearUpdated, setYearUpdated] = useState(false)\r\n  const [fan_or_fok, setFan_or_fok] = useState(false)\r\n  const [spin, setSpin] = useState(false)\r\n  const [spinLeftValue, setSpinLeftValue] = useState(0)\r\n  const [spinRightValue, setSpinRightValue] = useState(0)\r\n  const [targets, setTargets] = useState([])\r\n  const [showTargets, setShowTargets] = useState(false)\r\n  const [goodBadGoneColor, setGoodBadGoneColor] = useState(false)\r\n  const [selectedGone, setSelectedGone] = useState(-1)\r\n  const [gakgokDesc, setGakgokDesc] = useState([])\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [yearGone, setYearGone] = useState(-1)\r\n  const [monthGone, setMonthGone] = useState(-1)\r\n  const [dayGone, setDayGone] = useState(-1)\r\n  const [timeGone, setTimeGone] = useState(-1)\r\n  const [savedTime, setSavedTime] = useState(JSON.parse(localStorage.getItem(\"savedTime\")) || [])\r\n  const [savedRemarks, setSavedRemarks] = useState(JSON.parse(localStorage.getItem(\"savedRemarks\")) || [])\r\n  const [key, setKey] = useState('main')\r\n  const [visibleAlert, setVisibleAlert] = useState(false)\r\n  const [importAlert, setImportAlert] = useState(false)\r\n  const [removeAllAlert, setRemoveAllAlert] = useState(false)\r\n  const [showVersionInfo, setShowVersionInfo] = useState(true)\r\n  const [importError, setImportError] = useState(false)\r\n  const [searchError, setSearchError] = useState(false)\r\n  const [sameGone, setSameGone] = useState(new Set())\r\n  const [goodGok, setGoodGok] = useState([])\r\n  const [validInput, setValidInput] = useState(true)\r\n  const [filterKeyWords, setFilterKeyWords] = useState(\"\")\r\n  const [filterSavedKeyWords, setFilterSavedKeyWords] = useState(\"\")\r\n\r\n  const handleClose = () => setShowModal(false);\r\n  const handleShow = () => setShowModal(true);\r\n\r\n  const dateInput = useRef(\"\")\r\n  const remarksRef = useRef(null)\r\n  const filterRef = useRef(null)\r\n  const fileRef = useRef(null)\r\n  const dayCntsRef = useRef(null)\r\n  const yearGoneInput = useRef(null)\r\n  const monthGoneInput = useRef(null)\r\n  const dayGoneInput = useRef(null)\r\n  const timeGoneInput = useRef(null)\r\n  const [goneDates, setGoneDates] = useState(nearestDates(d))\r\n\r\n  const fetchGoodGok = async () => {\r\n    let _input = dayCntsRef.current.value\r\n    if (_input > 0 && _input <= 365) {\r\n      let d = lunisolar(new Date())\r\n      const response = await find_good_gok(d, 12 * _input)\r\n      const _goodGok = response\r\n      setGoodGok(_goodGok);\r\n    }\r\n    else {\r\n      setSearchError(true)\r\n      dayCntsRef.current.focus()\r\n    }\r\n  }\r\n\r\n  const importButton = (e) => {\r\n    fileRef.current.click();\r\n  }\r\n\r\n  const showImportModal = (e) => setImportAlert(true)\r\n  const hideImportModal = (e) => setImportAlert(false)\r\n  const showRemoveAllModal = (e) => setRemoveAllAlert(true)\r\n  const hideRemoveAllModal = (e) => setRemoveAllAlert(false)\r\n\r\n  const removmAllButton = () => {\r\n    setSavedTime([])\r\n    setSavedRemarks([])\r\n    localStorage.setItem(\"savedTime\", JSON.stringify([]));\r\n    localStorage.setItem(\"savedRemarks\", JSON.stringify([]));\r\n    hideRemoveAllModal()\r\n  }\r\n\r\n  const exportData = () => {\r\n    let objArray = []\r\n    savedTime.forEach((t, idx) => {\r\n      objArray.push({\r\n        time: t,\r\n        remarks: savedRemarks[idx]\r\n      })\r\n    });\r\n\r\n    const jsonString = `data:text/json;chatset=utf-8,${encodeURIComponent(\r\n      JSON.stringify(objArray)\r\n    )}`;\r\n    const link = document.createElement(\"a\");\r\n    link.href = jsonString;\r\n    link.download = \"saved.json\";\r\n\r\n    link.click();\r\n  };\r\n\r\n  const exportGoodData = () => {\r\n    let objArray = []\r\n    goodGokFiltering(goodGok, filterKeyWords).forEach((t) => {\r\n      let sang_oh = \"\"\r\n      if (t.sang_ohs.length > 0) {\r\n        t.sang_ohs.forEach(s => sang_oh += `${s} `)\r\n        sang_oh += \"生 \"\r\n      }\r\n\r\n\r\n      objArray.push({\r\n        time: t.time,\r\n        remarks: sang_oh + t.remarks\r\n      })\r\n    });\r\n\r\n    const jsonString = `data:text/json;chatset=utf-8,${encodeURIComponent(\r\n      JSON.stringify(objArray)\r\n    )}`;\r\n    const link = document.createElement(\"a\");\r\n    link.href = jsonString;\r\n    link.download = \"催運.json\";\r\n\r\n    link.click();\r\n  };\r\n\r\n  const importData = (e) => {\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsText(e.target.files[0], \"UTF-8\");\r\n    fileReader.onload = e => {\r\n      try {\r\n        let jsonArray = JSON.parse(e.target.result)\r\n\r\n        let t_savedTime = []\r\n        let t_savedRemarks = []\r\n\r\n        jsonArray.forEach(obj => {\r\n          let t = obj.time\r\n          let r = obj.remarks\r\n\r\n          t_savedTime.push(t)\r\n          t_savedRemarks.push(r)\r\n        })\r\n\r\n        if (t_savedTime.length > 0) {\r\n          setSavedTime(t_savedTime)\r\n          setSavedRemarks(t_savedRemarks)\r\n          localStorage.setItem(\"savedTime\", JSON.stringify(t_savedTime));\r\n          localStorage.setItem(\"savedRemarks\", JSON.stringify(t_savedRemarks));\r\n        }\r\n      }\r\n      catch (e) {\r\n        setImportError(true)\r\n      }\r\n    };\r\n\r\n    hideImportModal()\r\n  };\r\n\r\n  const saveTimeAlert = () => {\r\n    setVisibleAlert(true)\r\n    setTimeout(() => {\r\n      setVisibleAlert(false)\r\n    }, 2000);\r\n  }\r\n\r\n  const saveTime = () => {\r\n    let t = dateInput.current.value\r\n    let r = remarksRef.current.value\r\n    if (savedTime.indexOf(t) < 0) {\r\n      setSavedTime([...savedTime, t])\r\n      setSavedRemarks([...savedRemarks, r === '' ? \"沒有備註\" : r])\r\n      saveTimeAlert()\r\n      localStorage.setItem(\"savedTime\", JSON.stringify([...savedTime, t]));\r\n      localStorage.setItem(\"savedRemarks\", JSON.stringify([...savedRemarks, r === '' ? \"沒有備註\" : r]));\r\n    }\r\n    else {\r\n      savedRemarks[savedTime.indexOf(t)] = r === '' ? \"沒有備註\" : r\r\n      setSavedRemarks(savedRemarks)\r\n      saveTimeAlert()\r\n      localStorage.setItem(\"savedTime\", JSON.stringify(savedTime));\r\n      localStorage.setItem(\"savedRemarks\", JSON.stringify(savedRemarks));\r\n    }\r\n  }\r\n\r\n  const removeTime = (t) => {\r\n    let temp_array = []\r\n    let temp_remarks_array = []\r\n    if (savedTime.length > 1) {\r\n      let idx = savedTime.indexOf(t)\r\n      temp_array = removeItemOnce(savedTime, t)\r\n      temp_remarks_array = removeItemOnce(savedRemarks, savedRemarks[idx])\r\n      setSavedTime([...temp_array])\r\n      setSavedRemarks([...temp_remarks_array])\r\n      localStorage.setItem(\"savedTime\", JSON.stringify([...savedTime]));\r\n      localStorage.setItem(\"savedRemarks\", JSON.stringify([...savedRemarks]));\r\n    }\r\n    else {\r\n      setSavedTime([])\r\n      setSavedRemarks([])\r\n      localStorage.setItem(\"savedTime\", JSON.stringify([]));\r\n      localStorage.setItem(\"savedRemarks\", JSON.stringify([]));\r\n    }\r\n\r\n  }\r\n\r\n  const loadTime = (t, r) => {\r\n    dateInput.current.value = t\r\n    remarksRef.current.value = r\r\n    setD(lunisolar(new Date(t)))\r\n    updateDateStr()\r\n\r\n    setKey('main')\r\n  }\r\n\r\n  const updateGakGok = (gakgok) => {\r\n    // console.log(`gakgok=${JSON.stringify(gakgok)}`);\r\n    setSelectedGone(gakgok.seq)\r\n    setGakgokDesc(gakgok.gakgok)\r\n    handleShow()\r\n  }\r\n\r\n  const initOriginalGridDataSet = (dataSetObj) => {\r\n\r\n    originalDataSetObj = dataSetObj\r\n  }\r\n\r\n  const showHideTargets = (event) => {\r\n    setShowTargets(!showTargets)\r\n  }\r\n\r\n  const goneColor = (event) => {\r\n    setGoodBadGoneColor(!goodBadGoneColor)\r\n  }\r\n\r\n  const updateTargets = (event) => {\r\n    if (targets.indexOf(event.target.text) > -1) {\r\n      let temp_array = []\r\n      if (targets.length > 1) {\r\n        temp_array = removeItemOnce(targets, event.target.text)\r\n        setTargets([...targets, temp_array])\r\n      }\r\n      else\r\n        setTargets([])\r\n    }\r\n    else {\r\n      setTargets([...targets, event.target.text])\r\n    }\r\n    /*\r\n    if (event.target.checked)\r\n      setTargets([...targets, event.target.value])\r\n    else {\r\n      let temp_array = []\r\n      if (targets.length > 1) {\r\n        temp_array = removeItemOnce(targets, event.target.value)\r\n        setTargets(...temp_array)\r\n      }\r\n      else\r\n        setTargets([])\r\n    }\r\n    */\r\n  }\r\n\r\n  const clearTargets = (event) => {\r\n    setTargets([])\r\n\r\n  }\r\n\r\n  // yyyy-mm-ddTHH:MM\r\n  let year = \"\" + d.toDate().getFullYear()\r\n  let month = \"\" + (d.toDate().getMonth() + 1)\r\n  month = month.padStart(2, '0')\r\n  let day = \"\" + d.toDate().getDate()\r\n  day = day.padStart(2, '0')\r\n  let hour = \"\" + d.toDate().getHours()\r\n  hour = hour.padStart(2, '0')\r\n  let min = \"\" + d.toDate().getMinutes()\r\n  min = min.padStart(2, '0')\r\n\r\n  // const [dateTimeStr, setDateTimeStr] = useState()\r\n\r\n\r\n\r\n  // var yinyang = 0\r\n\r\n  const resetGones = () => {\r\n    setYearGone(-1)\r\n    setMonthGone(-1)\r\n    setDayGone(-1)\r\n    setTimeGone(-1)\r\n    yearGoneInput.current.value = -1\r\n    monthGoneInput.current.value = -1\r\n    dayGoneInput.current.value = -1\r\n    timeGoneInput.current.value = -1\r\n  }\r\n\r\n  const updateDateStr = () => {\r\n    setSelectedGone(-1)\r\n    setGakgokDesc([])\r\n    setDateUpdated(false)\r\n    resetGones()\r\n\r\n    year = \"\" + d.toDate().getFullYear()\r\n    month = \"\" + (d.toDate().getMonth() + 1)\r\n    month = month.padStart(2, '0')\r\n    day = \"\" + d.toDate().getDate()\r\n    day = day.padStart(2, '0')\r\n    hour = \"\" + d.toDate().getHours()\r\n    hour = hour.padStart(2, '0')\r\n    min = \"\" + d.toDate().getMinutes()\r\n    min = min.padStart(2, '0')\r\n  }\r\n\r\n  const inputChange = (event) => {\r\n    if (!isNaN(new Date(event.target.value))) {\r\n      setD(lunisolar(new Date(event.target.value)))\r\n      updateDateStr()\r\n    }\r\n    remarksRef.current.value = \"\"\r\n  }\r\n\r\n  const addDayClick = (event) => {\r\n    let date = d.toDate()\r\n    date.setDate(date.getDate() + 1)\r\n    setD(lunisolar(new Date(date)))\r\n\r\n    updateDateStr()\r\n    remarksRef.current.value = \"\"\r\n\r\n  }\r\n\r\n  const reduceDayClick = (event) => {\r\n    let date = d.toDate()\r\n    date.setDate(date.getDate() - 1)\r\n    setD(lunisolar(new Date(date)))\r\n\r\n    updateDateStr()\r\n    remarksRef.current.value = \"\"\r\n\r\n  }\r\n\r\n  const addHourClick = (event) => {\r\n    let date = d.toDate()\r\n    if (date.getHours() % 2 == 0) {\r\n      date.setHours(date.getHours() + 1)\r\n    }\r\n    else\r\n      date.setHours(date.getHours() + 2)\r\n\r\n    setD(lunisolar(new Date(date)))\r\n\r\n    updateDateStr()\r\n    remarksRef.current.value = \"\"\r\n\r\n  }\r\n\r\n  const reduceHourClick = (event) => {\r\n    let date = d.toDate()\r\n    if (date.getHours() % 2 == 0) {\r\n      date.setHours(date.getHours() - 3)\r\n    }\r\n    else\r\n      date.setHours(date.getHours() - 2)\r\n\r\n    setD(lunisolar(new Date(date)))\r\n\r\n    updateDateStr()\r\n    remarksRef.current.value = \"\"\r\n\r\n  }\r\n\r\n  const resetNowClick = (event) => {\r\n    setD(lunisolar(new Date()))\r\n    updateDateStr()\r\n    remarksRef.current.value = \"\"\r\n  }\r\n\r\n  const originalClick = (event) => {\r\n    setSpin(false)\r\n    setSpinLeftValue(0)\r\n    setSpinRightValue(0)\r\n    setSelectedGone(-1)\r\n    setGakgokDesc([])\r\n  }\r\n\r\n  const spinLeft = (event) => {\r\n    setSpin(true)\r\n    setSpinRightValue(0)\r\n\r\n    if (spinLeftValue + 1 >= 8)\r\n      setSpinLeftValue(0)\r\n    else\r\n      setSpinLeftValue(spinLeftValue + 1)\r\n\r\n    setSelectedGone(-1)\r\n    setGakgokDesc([])\r\n  }\r\n\r\n  const spinRight = (event) => {\r\n    setSpin(true)\r\n    setSpinLeftValue(0)\r\n\r\n    if (spinRightValue + 1 >= 8)\r\n      setSpinRightValue(0)\r\n    else\r\n      setSpinRightValue(spinRightValue + 1)\r\n\r\n    setSelectedGone(-1)\r\n    setGakgokDesc([])\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    // let haziDate = getSolarTerm(d.toDate().getFullYear(), 11);\r\n    // let currentZit = getSolarTerm(d.toDate().getFullYear(), (d.toDate().getMonth()) * 2)\r\n    const fetchHazi = async () => {\r\n      const response = await find_solar_terms_offline(\"夏至\", d.toDate().getFullYear())\r\n      // .then((result) => haziDate = new Date(result))\r\n      const _haziDate = response\r\n      setHaziDate(_haziDate)\r\n    }\r\n\r\n    const fetchDongzi = async () => {\r\n      const response = await find_solar_terms_offline(\"冬至\", d.toDate().getFullYear())\r\n      // .then((result) => haziDate = new Date(result))\r\n      const _dongziDate = response\r\n      setDongziDate(_dongziDate)\r\n    }\r\n\r\n    const fetchCurrentZit = async (datetime) => {\r\n      const response = await find_current_solar_terms_offline(d.toDate().getMonth(), d.toDate().getFullYear())\r\n      // .then((result) => currentZit = new Date(result))\r\n      let first = response['first']\r\n      let second = response['second']\r\n      // if (roundToNearestMinute(datetime).getTime() >= roundToNearestMinute(first).getTime()) {\r\n\r\n      //   setCurrentZit(first.getTime())\r\n      // }\r\n\r\n      setPreviousZit(first.getTime())\r\n      // if (roundToNearestMinute(datetime).getTime() >= roundToNearestMinute(second).getTime()) {\r\n      setCurrentZit(second.getTime())\r\n      // }\r\n      // \r\n    }\r\n\r\n\r\n\r\n    let char8_splits = {}\r\n    if (d.toDate().getFullYear() >= yearMin && d.toDate().getFullYear() < yearMax) {\r\n      fetchHazi()\r\n      fetchDongzi()\r\n      fetchCurrentZit(d.toDate())\r\n\r\n      // let hazi = lunisolar.SolarTerm.findDate(d.toDate().getFullYear(), 9, {})\r\n      // let haziDate = new Date(hazi[0], hazi[1], hazi[2])\r\n      // let donzi = lunisolar.SolarTerm.findDate(d.toDate().getFullYear(), 21, {})\r\n      // let donziDate = new Date(donzi[0], donzi[1], donzi[2])\r\n      if (d.toDate().getTime() < haziDate) {\r\n        setYinyang(1)\r\n      }\r\n      else if (d.toDate().getTime() >= dongziDate) {\r\n        setYinyang(1)\r\n      }\r\n      else if (d.toDate().getTime() >= haziDate && d.toDate().getTime() < dongziDate) {\r\n        setYinyang(0)\r\n      }\r\n      char8_splits = d.format('cY cM cD cH').split(\" \")\r\n\r\n      if (\r\n        roundToNearestMinute(d.toDate()).getTime() <= roundToNearestMinute(new Date(currentZit)).getTime()\r\n      ) {\r\n        let t_c_splits = char8_splits[1].split(\"\")\r\n        let year_splits = char8_splits[0].split(\"\")\r\n\r\n\r\n        if (t_c_splits.length == 2) {\r\n          let gone_idx = tin_gone_10_str.indexOf(t_c_splits[0])\r\n          let chi_idx = floor12_str.indexOf(t_c_splits[1])\r\n\r\n          let new_gone = t_c_splits[0]\r\n          let new_chi = t_c_splits[1]\r\n\r\n          let year_gone_idx = tin_gone_10_str.indexOf(year_splits[0])\r\n          let year_chi_idx = floor12_str.indexOf(year_splits[1])\r\n\r\n          let new_year_gone = year_splits[0]\r\n          let new_year_chi = year_splits[1]\r\n\r\n          // if(month === \"01\"){\r\n          let currentZitDate = new Date(currentZit)\r\n\r\n\r\n          // console.log(`currentZitDate=${currentZitDate}`);\r\n          // console.log(`d.toDate()=${d.toDate()}`);\r\n          // console.log(`d.toDate().getDate() = ${d.toDate().getDate()}`);\r\n          // console.log(`currentZitDate.getDate() = ${currentZitDate.getDate()}`);\r\n          // console.log(`d.toDate().getHours() = ${d.toDate().getHours()}`);\r\n          // console.log(`d.toDate().getDate() == currentZitDate.getDate() = ${d.toDate().getDate() == currentZitDate.getDate()}`);\r\n          // console.log(`d.toDate().getHours() <= currentZitDate.getHours() = ${d.toDate().getHours() <= currentZitDate.getHours()}`);\r\n          // console.log(`d.toDate().getMinutes() <= currentZitDate.getMinutes() = ${d.toDate().getMinutes() <= currentZitDate.getMinutes()}`);\r\n          if (\r\n            (\r\n              d.toDate().getDate() == currentZitDate.getDate() - 1\r\n              &&\r\n              d.toDate().getHours() >= 23\r\n            )\r\n            ||\r\n            (\r\n              d.toDate().getDate() == currentZitDate.getDate()\r\n              &&\r\n              (\r\n                d.toDate().getHours() < currentZitDate.getHours() ||\r\n                (d.toDate().getHours() == currentZitDate.getHours() && d.toDate().getMinutes() <= currentZitDate.getMinutes())\r\n              )\r\n            )\r\n          ) {\r\n            if (gone_idx == 0) {\r\n              // if (roundToNearestMinute(d.toDate()).getTime() < previousZit)\r\n              new_gone = tin_gone_10_str[tin_gone_10_str.length - 1]\r\n            }\r\n            else {\r\n              if (d.lunar.month - 1 != gone_idx)\r\n                new_gone = tin_gone_10_str[gone_idx - 1]\r\n            }\r\n\r\n            if (chi_idx == 0) {\r\n              // if (roundToNearestMinute(d.toDate()).getTime() < previousZit)\r\n              new_chi = floor12_str[floor12_str.length - 1]\r\n            }\r\n            else {\r\n              if (d.lunar.month - 1 != gone_idx)\r\n                new_chi = floor12_str[chi_idx - 1]\r\n            }\r\n            // console.log(`month=${month}`);\r\n            if (month === \"02\") {\r\n              // console.log(`year_gone_idx=${year_gone_idx} year_chi_idx=${year_chi_idx}`);\r\n              if (year_gone_idx == 0) {\r\n                new_year_gone = tin_gone_10_str[tin_gone_10_str.length - 1]\r\n              }\r\n              else {\r\n                if (11 != year_gone_idx)\r\n                  new_year_gone = tin_gone_10_str[year_gone_idx - 1]\r\n              }\r\n\r\n              if (year_chi_idx == 0) {\r\n                new_year_chi = floor12_str[floor12_str.length - 1]\r\n              }\r\n              else {\r\n                if (11 != year_gone_idx)\r\n                  new_year_chi = floor12_str[year_chi_idx - 1]\r\n              }\r\n            }\r\n            // console.log(`new_year_gone=${new_year_gone} new_year_chi=${new_year_chi}`);\r\n          }\r\n          // }\r\n          // else {\r\n          //     // if(oldMonth !== char8_splits[1]){\r\n\r\n          //         if (gone_idx == 0) {\r\n          //           // if (roundToNearestMinute(d.toDate()).getTime() < previousZit)\r\n          //             new_gone = tin_gone_10_str[tin_gone_10_str.length - 1]\r\n          //         }\r\n          //         else {\r\n          //           if (d.lunar.month - 1 != gone_idx)\r\n          //             new_gone = tin_gone_10_str[gone_idx - 1]\r\n          //         }\r\n\r\n          //         if (chi_idx == 0) {\r\n          //           // if (roundToNearestMinute(d.toDate()).getTime() < previousZit)\r\n          //             new_chi = floor12_str[floor12_str.length - 1]\r\n          //         }\r\n          //         else { \r\n          //           if (d.lunar.month - 1 != gone_idx)\r\n          //             new_chi = floor12_str[chi_idx - 1]\r\n          //         }\r\n\r\n\r\n          //       // }\r\n\r\n          //   }\r\n          char8_splits[0] = new_year_gone + new_year_chi\r\n          char8_splits[1] = new_gone + new_chi\r\n\r\n          setChar8({ year: char8_splits[0], month: char8_splits[1], day: char8_splits[2], time: char8_splits[3] })\r\n        }\r\n      }\r\n      else {\r\n        setChar8({ year: char8_splits[0], month: char8_splits[1], day: char8_splits[2], time: char8_splits[3] })\r\n      }\r\n      setDateUpdated(true)\r\n      setGoneDates(nearestDates(d))\r\n\r\n      setSameGone(findSameGone(char8, d, yinyang))\r\n    }\r\n    else {\r\n      setValidInput(false)\r\n      setChar8({ year: \"\", month: \"\", day: \"\", time: \"\" })\r\n    }\r\n\r\n\r\n  }, [d.toDate().getTime(), char8.year, char8.month, char8.day, char8.time, haziDate.getTime(), currentZit, dateUpdated, spinLeftValue, spinRightValue, targets, showTargets, yearGone, monthGone, dayGone, timeGone])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"></meta>\r\n      <Tabs\r\n        defaultActiveKey=\"main\"\r\n        activeKey={key}\r\n        onSelect={(k) => setKey(k)}\r\n        id=\"justify-tab-example\"\r\n        className=\"mb-3 tabPage\"\r\n        justify\r\n      >\r\n        <Tab eventKey=\"main\" title=\"開盤\">\r\n          <div className='top_message_div'>\r\n            <Alert variant='warning' dismissible>親愛的師兄弟姐妹們：請緊記一切以師父Excel顯示的為最準確。</Alert>\r\n          </div>\r\n          <div className='header_div'>\r\n            <Container>\r\n              <Row>\r\n                <Col xs={3} ><label>本局備註：</label></Col>\r\n                <Col><input className='form-control' ref={remarksRef} type='text' placeholder='人在/人不在/催財局/etc.' /></Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={3}><label>日期 ：</label></Col>\r\n                <Col><input ref={dateInput} onChange={(e) => inputChange(e)} className='form-control' type=\"datetime-local\" name=\"dateInput\"\r\n                  value={`${year}-${month}-${day}T${hour}:${min}`}\r\n                  min={`${yearMin}-01-01T00:00`}\r\n                  max={`${yearMax}-12-31T23:59`}\r\n                /></Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <div className='button_row'>\r\n                    <input type='button' className='btn btn-secondary' onClick={(e) => resetNowClick(e)} value=\"現在時間\" />\r\n                    <input type='button' className='btn btn-secondary' onClick={(e) => originalClick(e)} value=\"原來宮位\" />\r\n                    <input type='button' className='btn btn-secondary' onClick={(e) => reduceDayClick(e)} value=\"上一日\" />\r\n                    <input type='button' className='btn btn-secondary' onClick={(e) => addDayClick(e)} value=\"下一日\" />\r\n                    <input type='button' className='btn btn-secondary' onClick={(e) => reduceHourClick(e)} value=\"上一時辰\" />\r\n                    <input type='button' className='btn btn-secondary' onClick={(e) => addHourClick(e)} value=\"下一時辰\" />\r\n                    <input type='button' className='btn btn-secondary' onClick={(e) => spinLeft(e)} value={`順轉 [${spinLeftValue}]`} />\r\n                    <input type='button' className='btn btn-secondary' onClick={(e) => spinRight(e)} value={`逆轉 [${spinRightValue}]`} />\r\n                    <input type='button' className={`btn ${showTargets ? 'btn-warning' : 'btn-dark'}`} onClick={showHideTargets} value=\"用神落宮標示\" />\r\n                    <input type='button' className={`btn ${goodBadGoneColor ? 'btn-warning' : 'btn-dark'}`} onClick={goneColor} value=\"宮位吉凶標示\" />\r\n                  </div>\r\n                </Col>\r\n                <Col>\r\n                  <div className='char8_day'>\r\n                    <span className={`char8 ${sameGone.has('year') ? 'same_year' : ''}`}>年 {char8['year']}</span>\r\n                    <span className={`char8 ${sameGone.has('month') ? 'same_month' : ''}`}>月 {char8['month']}</span>\r\n                    <span className={`char8 ${sameGone.has('day') ? 'same_day' : ''}`}>日 {char8['day']}</span>\r\n                    <span className={`char8 ${sameGone.has('time') ? 'same_time' : ''}`}>時 {char8['time']}</span>\r\n                  </div>\r\n                  <div className='char8_day'>\r\n                    <span className='char8 year_gone'>年干 <select ref={yearGoneInput} onChange={(e) => setYearGone(e.target.value)}><option value=\"-1\">請選擇</option>{gong_seq.map(g => <option key={`year_${g}`} value={g}>{g}宮</option>)}</select></span>\r\n                    <span className='char8 month_gone'>月干 <select ref={monthGoneInput} onChange={(e) => setMonthGone(e.target.value)}><option value=\"-1\">請選擇</option>{gong_seq.map(g => <option key={`month_${g}`} value={g}>{g}宮</option>)}</select></span>\r\n                    <span className='char8 day_gone'>日干 <select ref={dayGoneInput} onChange={(e) => setDayGone(e.target.value)}><option value=\"-1\">請選擇</option>{gong_seq.map(g => <option key={`day_${g}`} value={g}>{g}宮</option>)}</select></span>\r\n                    <span className='char8 time_gone'>時干 <select ref={timeGoneInput} onChange={(e) => setTimeGone(e.target.value)}><option value=\"-1\">請選擇</option>{gong_seq.map(g => <option key={`time_${g}`} value={g}>{g}宮</option>)}</select></span>\r\n                    <br />\r\n                    <input type='button' className='btn btn-success' onClick={(e) => saveTime()} value={`儲存此局`} />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n            <div className='targets_div alert alert-warning' style={{ display: showTargets ? '' : 'none' }}>\r\n              <div className='targets_row'>\r\n                {\r\n                  door_seq.map(d => <span className='targets_span'> <a href=\"#!\" key={`door_targets_${d}`} onClick={(e) => updateTargets(e)} className={`btn ${targets.indexOf(d) > -1 ? 'btn-warning' : 'btn-dark'}`}>{d}</a></span>)\r\n                }\r\n              </div>\r\n              <div className='targets_row'>\r\n                {\r\n                  star_seq.map(d => <span className='targets_span'> <a href=\"#!\" key={`star_targets_${d}`} onClick={(e) => updateTargets(e)} className={`btn ${targets.indexOf(d) > -1 ? 'btn-warning' : 'btn-dark'}`}>{d}</a></span>)\r\n                }\r\n              </div>\r\n              <div className='targets_row'>\r\n                {\r\n                  sun_seq.map(d => <span className='targets_span'> <a href=\"#!\" key={`sun_targets_${d}`} onClick={(e) => updateTargets(e)} className={`btn ${targets.indexOf(d) > -1 ? 'btn-warning' : 'btn-dark'}`}>{d}</a></span>)\r\n                }\r\n              </div>\r\n              <div className='targets_row'>\r\n                {\r\n                  tin_gone_seq.map(d => <span className='targets_span'> <a href=\"#!\" key={`tin_gone_targets_${d}`} onClick={(e) => updateTargets(e)} className={`btn ${targets.indexOf(d) > -1 ? 'btn-warning' : 'btn-dark'}`}>{d}</a></span>)\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='top_message_div'>\r\n            <Alert variant='success' show={visibleAlert} >已儲存此局。</Alert>\r\n            <Alert variant='danger' show={!validInput} onClose={() => setValidInput(true)} dismissible >請輸入正確日期（年份需介乎{`${yearMin} - ${yearMax}`}年之間）。</Alert>\r\n          </div>\r\n          {\r\n            dateUpdated ?\r\n              <div className='header_div'>\r\n                <div className='grid_board_div'>\r\n                  <GridBoard\r\n                    year_chi={char8['year'].charAt(1)}\r\n                    month_chi={char8['month'].charAt(1)}\r\n                    day={d.toDate().getHours() >= 23 ? lunisolar(new Date(d.toDate().getTime() + 3600000)).lunar.day : d.lunar.day}\r\n                    year_gone={char8['year'].charAt(0)}\r\n                    month_gone={char8['month'].charAt(0)}\r\n                    day_gone={char8['day'].charAt(0)}\r\n                    time_gone={d.char8.hour.stem.toString()}\r\n                    time_chi={d.char8.hour.branch.toString()}\r\n                    yinyang={yinyang}\r\n                    initOriginalGridDataSet={initOriginalGridDataSet}\r\n                    originalDataSetObj={originalDataSetObj}\r\n                    spin={spin}\r\n                    spinLeftValue={spinLeftValue}\r\n                    spinRightValue={spinRightValue}\r\n                    targets={targets}\r\n                    goodBadGoneColor={goodBadGoneColor}\r\n                    updateGakGok={updateGakGok}\r\n                    yearGone={yearGone}\r\n                    monthGone={monthGone}\r\n                    dayGone={dayGone}\r\n                    timeGone={timeGone}\r\n                    sameGone={sameGone}\r\n                  />\r\n                </div>\r\n                <Modal show={showModal} onHide={handleClose} centered>\r\n                  <Modal.Header closeButton>\r\n                    <Modal.Title>宮位資訊[{selectedGone === -1 ? \"請點宮位選擇\" : selectedGone}]</Modal.Title>\r\n                  </Modal.Header>\r\n                  <Modal.Body>\r\n                    <Alert variant='primary'>\r\n                      <span>{selectedGone === -1 ? \"請點宮位選擇\" : ''}</span>\r\n                      <Alert.Heading>參考格局</Alert.Heading>\r\n                      <div className='gakgok'>\r\n                        {gakgokDesc.map((g) => {\r\n                          return (\r\n                            <Row>\r\n                              <Col xs={4}>\r\n                                <span className='gakgok_title'>{g.title}<br /> [{g.primary_tin_gone}+{g.secondary_tin_gone}]</span>\r\n                              </Col>\r\n                              <Col>\r\n                                <span className='gakgok_desc'>{g.desc}</span>\r\n                              </Col>\r\n                            </Row>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    </Alert>\r\n                    <Alert variant='warning'>\r\n                      <span>{selectedGone === -1 ? \"請點宮位選擇\" : ''}</span>\r\n                      <Alert.Heading>未來地支最近日期(30天內)</Alert.Heading>\r\n                      <div className='gakgok'>\r\n                        {goneDates.map((g) => {\r\n                          if (g.gone === selectedGone)\r\n                            return (\r\n                              <Row>\r\n                                <Col xs={3}>\r\n                                  <span className='gakgok_title'>{g.lunar_day_chi}({g.yin_yang})({g.animal})</span>\r\n                                </Col>\r\n                                <Col>\r\n                                  <Alert variant={`${g.best_before_date && !g.past ? 'success' : 'danger'}`}>\r\n                                    {g.date}\r\n                                  </Alert>\r\n                                </Col>\r\n                              </Row>\r\n                            )\r\n                        })}\r\n                      </div>\r\n                    </Alert>\r\n                    {\r\n                      d.toDate().getFullYear() < yearMin || d.toDate().getFullYear() > yearMax\r\n                        ?\r\n                        <Container></Container>\r\n                        :\r\n                        <Alert variant='success'>\r\n                          <span>{selectedGone === -1 ? \"請點宮位選擇\" : ''}</span>\r\n                          <Alert.Heading>本局最佳化解日子</Alert.Heading>\r\n                          <div className='gakgok'>\r\n                            <Row>\r\n                              <Col>\r\n                                <span>{d.toDate().toISOString().split('T')[0].replaceAll('-', '/')} - {new Date(d.toDate().setDate(d.toDate().getDate() + 8)).toISOString().split('T')[0].replaceAll('-', '/')}</span>\r\n                                {/* <span>{d.format('YYYY/MM/DD')} - {d.add(8, 'd').format('YYYY/MM/DD')}</span> */}\r\n                              </Col>\r\n                            </Row>\r\n                          </div>\r\n                        </Alert>\r\n                    }\r\n\r\n                  </Modal.Body>\r\n                </Modal>\r\n                <Modal show={importAlert} onHide={hideImportModal} centered>\r\n                  <Modal.Header closeButton>\r\n                    <Modal.Title>匯入</Modal.Title>\r\n                  </Modal.Header>\r\n                  <Modal.Body>\r\n                    <div className='alert alert-warning'>\r\n                      <span>從檔案匯入已儲存的局數，會取代現有所有局數。<br />請緊記先匯出需要的局數再匯入。</span>\r\n                    </div>\r\n                  </Modal.Body>\r\n                  <Modal.Footer>\r\n                    <Button variant='success' onClick={(e) => importButton()}>匯入</Button>\r\n                    <Button variant='danger' onClick={hideImportModal}>取消</Button>\r\n                  </Modal.Footer>\r\n                </Modal>\r\n                <Modal show={removeAllAlert} onHide={hideRemoveAllModal} centered>\r\n                  <Modal.Header closeButton>\r\n                    <Modal.Title>清除全部</Modal.Title>\r\n                  </Modal.Header>\r\n                  <Modal.Body>\r\n                    <div className='alert alert-danger'>\r\n                      <span>確認清全列表內所有局數。<br />請緊記先匯出需要的局數再匯入。</span>\r\n                    </div>\r\n                  </Modal.Body>\r\n                  <Modal.Footer>\r\n                    <Button variant='success' onClick={(e) => removmAllButton()}>清除</Button>\r\n                    <Button variant='danger' onClick={hideRemoveAllModal}>取消</Button>\r\n                  </Modal.Footer>\r\n                </Modal>\r\n                <div className='notes_div'>\r\n                  <Accordion defaultActiveKey={['0']} alwaysOpen>\r\n                    <Accordion.Item eventKey=\"0\">\r\n                      <Accordion.Header>備註</Accordion.Header>\r\n                      <Accordion.Body>\r\n                        <Notes\r\n                          year_chi={char8['year'].charAt(1)}\r\n                          month_chi={char8['month'].charAt(1)}\r\n                          day={d.toDate().getHours() >= 23 ? lunisolar(new Date(d.toDate().getTime() + 3600000)).lunar.day : d.lunar.day}\r\n                          time_gone={d.char8.hour.stem.toString()}\r\n                          time_chi={d.char8.hour.branch.toString()}\r\n                          yinyang={yinyang}\r\n                          initOriginalGridDataSet={initOriginalGridDataSet}\r\n                          originalDataSetObj={originalDataSetObj}\r\n                          spin={spin}\r\n                          spinLeftValue={spinLeftValue}\r\n                          spinRightValue={spinRightValue}\r\n                        />\r\n                      </Accordion.Body>\r\n                    </Accordion.Item>\r\n                  </Accordion>\r\n                </div>\r\n              </div>\r\n              :\r\n              <Container></Container>\r\n            // <div className='grid_board_div'>\r\n            //   <ReactLoading type=\"bubbles\" color=\"#000\" height={'200px'} width={'200px'} />\r\n            // </div>\r\n          }\r\n          <Container>\r\n            <Row>\r\n              <Col>\r\n                <span>雲清子奇門陰遁甲課程 輔助開盤程式 v{packageJson.version}</span>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <span>Copyright © 2024 elvischan91 all rights reserved</span>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          <Modal show={showVersionInfo} onHide={(e) => setShowVersionInfo(false)} centered>\r\n            <Modal.Header closeButton>版本更新</Modal.Header>\r\n            <Modal.Body>\r\n              <Alert variant='success'>\r\n                {\r\n                  version_info.map(v => {\r\n                    return <div>{v.version_number} {v.updates}</div>\r\n                  })\r\n                }\r\n              </Alert>\r\n            </Modal.Body>\r\n          </Modal>\r\n        </Tab>\r\n        <Tab eventKey=\"saved\" title=\"已儲存局數\">\r\n          <Alert variant='danger' show={importError} onClose={() => setImportError(false)} dismissible>\r\n            只接受匯入指定JSON檔。\r\n          </Alert>\r\n          <Container>\r\n            <Row className='savedButtonRow'>\r\n              <Col xs={3}>\r\n                <Button variant='success' onClick={(e) => exportData()}>匯出</Button>\r\n              </Col>\r\n              <Col>\r\n                <span>共{savedGokFiltering(savedTime,filterSavedKeyWords,savedRemarks).length}局</span>\r\n              </Col>\r\n              <Col xs={3}>\r\n                <input ref={fileRef} type='file' accept=\"application/JSON\" onChange={(e) => importData(e)} style={{ display: 'none' }} />\r\n                <Button variant='primary' onClick={(e) => showImportModal(e)}>匯入</Button>\r\n              </Col>\r\n            </Row>\r\n            {\r\n              savedTime.length == 0 ?\r\n                \"\" :\r\n                <Row className='searchRow'>\r\n                  <Col>\r\n                    <input type='text' className='form-control' onChange={(e) => setFilterSavedKeyWords(e.target.value)} placeholder='搜尋關鍵字...'></input>\r\n                  </Col>\r\n                </Row>\r\n            }\r\n            <Row className='tableHeaderRow'>\r\n              <Col xs={2} className=''></Col>\r\n              <Col xs={5} className=''>描述</Col>\r\n              <Col xs={3} className=''>時間</Col>\r\n              <Col xs={2} className=''></Col>\r\n            </Row>\r\n            {\r\n              savedTime.length == 0 ?\r\n                <Row><Col>沒有已儲存局數</Col></Row>\r\n                :\r\n                savedGokFiltering(savedTime,filterSavedKeyWords,savedRemarks).map((t, idx) => {\r\n                  return (\r\n                    <Row className={`savedTimeRow ${idx % 2 === 0 ? 'even_row' : 'odd_row'}`}>\r\n                      <Col xs={2}>\r\n                        <Button variant=\"danger\" onClick={(e) => removeTime(t)}>移除</Button>\r\n                      </Col>\r\n                      <Col xs={5} className='savedTime'>{t.remarks}</Col>\r\n                      <Col xs={3} className='savedTime'><span>{`${t.time.substr(0, 10)} ${t.time.substr(11, 6)}`}</span>\r\n                      </Col>\r\n                      <Col xs={2}><Button variant=\"primary\" onClick={(e) => loadTime(t.time, t.remarks)}>載入</Button></Col>\r\n                    </Row>\r\n                  )\r\n                })\r\n            }\r\n            <Row className='savedButtonRow'>\r\n              <Col>\r\n                <Button variant='danger' onClick={(e) => setRemoveAllAlert(true)}>清除全部</Button>\r\n              </Col>\r\n            </Row>\r\n\r\n          </Container>\r\n\r\n        </Tab>\r\n        <Tab eventKey=\"goodGok\" title=\"可催運局數\">\r\n          <Alert variant='danger' show={searchError} onClose={() => setSearchError(false)} dismissible>\r\n            只接受1-365天內查詢。\r\n          </Alert>\r\n          <Alert variant='danger' show>\r\n            請注意日干落宮門星神組合自行判斷是否適用於你催運所需。<br />(例：心傷,離散格局也包含在列表中。)\r\n          </Alert>\r\n          <Container fluid>\r\n            <Row className='savedButtonRow'>\r\n              <Col xs={2}>\r\n                <span>搜索</span>\r\n              </Col>\r\n              <Col xs={2}>\r\n                <input ref={dayCntsRef} className='form-control' type='number' min={1} max={365} step={1} required></input>\r\n              </Col>\r\n              <Col xs={5}>\r\n                <span>天內日干吉格局數</span>\r\n              </Col>\r\n              <Col xs={3}>\r\n                <Button variant='primary' onClick={(e) => fetchGoodGok()}>搜尋</Button>\r\n              </Col>\r\n            </Row>\r\n            <Row className='savedButtonRow'>\r\n              <Col xs={3}>\r\n                <Button variant='success' onClick={(e) => exportGoodData()}>匯出</Button>\r\n              </Col>\r\n              <Col>\r\n                <span>共{goodGokFiltering(goodGok, filterKeyWords).length}局</span>\r\n              </Col>\r\n              <Col xs={4}>\r\n                <Button variant='danger' onClick={(e) => setGoodGok([])}>清除全部</Button>\r\n              </Col>\r\n            </Row>\r\n            {\r\n              goodGok.length == 0 ?\r\n                \"\" :\r\n                <Row className='searchRow'>\r\n                  <Col>\r\n                    <input type='text' className='form-control' onChange={(e) => setFilterKeyWords(e.target.value)} placeholder='搜尋關鍵字...(例:符辅开) (例2:开戊庚) (注意要用簡體字)'></input>\r\n                  </Col>\r\n                </Row>\r\n            }\r\n            <Row className='tableHeaderRow'>\r\n              <Col xs={2} className=''>本宮</Col>\r\n              <Col xs={2} className=''>生我</Col>\r\n              <Col xs={2} className=''>四柱</Col>\r\n              <Col xs={4} className=''><span>時間</span></Col>\r\n              <Col xs={1} className=''></Col>\r\n            </Row>\r\n            {\r\n              goodGokFiltering(goodGok, filterKeyWords).length == 0 ?\r\n                <Row><Col>沒有可催運局數</Col></Row>\r\n                :\r\n                goodGokFiltering(goodGok, filterKeyWords).map((t, idx) => {\r\n                  return (\r\n                    <Row className={`tableBodyRow ${idx % 2 === 0 ? 'even_row' : 'odd_row'}`}>\r\n                      <Col xs={2} className='original_gong'><span>{t.remarks}</span></Col>\r\n                      <Col xs={2} className='sangs'>{t.sang_ohs.length > 0 ? t.sang_ohs.map((s) => { return (<div className='sang_oh'>{s}</div>) }) : \"\"}</Col>\r\n                      <Col xs={2} className=''><span className='year_gone'>{t.cyear}</span><br /><span className='month_gone'>{t.cmonth}</span><br /><span className='day_gone'>{t.cday}</span><br /><span className='time_gone'>{t.ctime}</span></Col>\r\n                      <Col xs={4} className='savedTime'><span>{`${t.time.substr(0, 10)} ${t.time.substr(11, 6)}`}</span>\r\n                      </Col>\r\n                      <Col xs={1}><Button variant=\"primary\" onClick={(e) => loadTime(t.time, t.remarks)}>載入</Button></Col>\r\n                    </Row>\r\n\r\n                  )\r\n                })\r\n            }\r\n\r\n          </Container>\r\n\r\n        </Tab>\r\n\r\n      </Tabs>\r\n\r\n\r\n\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}